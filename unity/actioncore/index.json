{
  "api/D3T.Interaction.Button.html": {
    "href": "api/D3T.Interaction.Button.html",
    "title": "Class Button | D3T - Action Core | 1.0.2",
    "keywords": "Class Button A button that can be pressed or toggled with interactions. Inheritance Object Button Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Button : MonoBehaviour, IInteractive Fields channel Declaration public int channel Field Value Type Description Int32 itemRequirement Declaration public Button.ItemRequirement itemRequirement Field Value Type Description Button.ItemRequirement once Declaration public bool once Field Value Type Description Boolean receivers Declaration public Transform[] receivers Field Value Type Description Transform [] state Declaration public bool state Field Value Type Description Boolean toggle Declaration public bool toggle Field Value Type Description Boolean Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean Implements IInteractive.CanInteract Methods Interact(Transform) Declaration public bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean Implements IInteractive.Interact(Transform) Start() Declaration public void Start()"
  },
  "api/D3T.Animation.Characters.CharacterIKController.TorsoTwistIKPass.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.TorsoTwistIKPass.html",
    "title": "Class CharacterIKController.TorsoTwistIKPass | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.TorsoTwistIKPass Inheritance Object CharacterIKController.IKPass CharacterIKController.TorsoTwistIKPass Inherited Members CharacterIKController.IKPass.IKLayerName CharacterIKController.IKPass.IKLayer CharacterIKController.IKPass.Init(Animator) Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class TorsoTwistIKPass : CharacterIKController.IKPass Fields boneRotationOffset Declaration public Vector3 boneRotationOffset Field Value Type Description Vector3 crouchStateMultiplier Declaration public AnimationCurve crouchStateMultiplier Field Value Type Description AnimationCurve desiredRotationHelperTransform Declaration public Transform desiredRotationHelperTransform Field Value Type Description Transform targetBone Declaration public HumanBodyBones targetBone Field Value Type Description HumanBodyBones Methods ApplyIK(CharacterIKController) Declaration public override void ApplyIK(CharacterIKController controller) Parameters Type Name Description CharacterIKController controller Overrides CharacterIKController.IKPass.ApplyIK(CharacterIKController) OnInit(Animator) Declaration protected override void OnInit(Animator anim) Parameters Type Name Description Animator anim Overrides CharacterIKController.IKPass.OnInit(Animator)"
  },
  "api/D3T.Animation.Characters.CharacterIKController.IKPass.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.IKPass.html",
    "title": "Class CharacterIKController.IKPass | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.IKPass Inheritance Object CharacterIKController.IKPass CharacterIKController.FootIKPass CharacterIKController.HandIKPass CharacterIKController.HeadLookIKPass CharacterIKController.SyncCameraIKPass CharacterIKController.TorsoTwistIKPass Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class IKPass : ToggleableFeature Fields IKLayerName Declaration public string IKLayerName Field Value Type Description String Properties IKLayer Declaration public int IKLayer { get; protected set; } Property Value Type Description Int32 Methods ApplyIK(CharacterIKController) Declaration public abstract void ApplyIK(CharacterIKController controller) Parameters Type Name Description CharacterIKController controller Init(Animator) Declaration public void Init(Animator animator) Parameters Type Name Description Animator animator OnInit(Animator) Declaration protected virtual void OnInit(Animator anim) Parameters Type Name Description Animator anim"
  },
  "api/D3T.Animation.Characters.CharacterIKController.HandIKPass.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.HandIKPass.html",
    "title": "Class CharacterIKController.HandIKPass | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.HandIKPass Inheritance Object CharacterIKController.IKPass CharacterIKController.HandIKPass Inherited Members CharacterIKController.IKPass.IKLayerName CharacterIKController.IKPass.IKLayer CharacterIKController.IKPass.Init(Animator) CharacterIKController.IKPass.OnInit(Animator) Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class HandIKPass : CharacterIKController.IKPass Methods ApplyIK(CharacterIKController) Declaration public override void ApplyIK(CharacterIKController controller) Parameters Type Name Description CharacterIKController controller Overrides CharacterIKController.IKPass.ApplyIK(CharacterIKController)"
  },
  "api/D3TEditor.html": {
    "href": "api/D3TEditor.html",
    "title": "Namespace D3TEditor | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3TEditor Classes BodyPartIKDrawer MenuExtras"
  },
  "api/D3T.Triggers.CheckItemInInventory.Target.html": {
    "href": "api/D3T.Triggers.CheckItemInInventory.Target.html",
    "title": "Enum CheckItemInInventory.Target | D3T - Action Core | 1.0.2",
    "keywords": "Enum CheckItemInInventory.Target Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Target Fields Name Description PlayerInventory SpecificInventory SpecificPersistentInventory"
  },
  "api/D3T.Interaction.InventoryItemDefinitions.ItemDefinition.html": {
    "href": "api/D3T.Interaction.InventoryItemDefinitions.ItemDefinition.html",
    "title": "Class InventoryItemDefinitions.ItemDefinition | D3T - Action Core | 1.0.2",
    "keywords": "Class InventoryItemDefinitions.ItemDefinition Inheritance Object InventoryItemDefinitions.ItemDefinition Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ItemDefinition Fields descriptionFormatUnlocalizedKeys Declaration public string[] descriptionFormatUnlocalizedKeys Field Value Type Description String [] handheldItemPrefab Declaration public GameObject handheldItemPrefab Field Value Type Description GameObject icon Declaration public Texture2D icon Field Value Type Description Texture2D itemID Declaration public string itemID Field Value Type Description String maxStackSize Declaration public NullableInt maxStackSize Field Value Type Description NullableInt unlocalizedDescription Declaration public string unlocalizedDescription Field Value Type Description String unlocalizedName Declaration public string unlocalizedName Field Value Type Description String worldObjectPrefab Declaration public GameObject worldObjectPrefab Field Value Type Description GameObject"
  },
  "api/D3T.Interaction.Door.UnlockSettings.html": {
    "href": "api/D3T.Interaction.Door.UnlockSettings.html",
    "title": "Class Door.UnlockSettings | D3T - Action Core | 1.0.2",
    "keywords": "Class Door.UnlockSettings Inheritance Object Door.UnlockSettings Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class UnlockSettings : ToggleableFeature Constructors UnlockSettings(Boolean) Declaration public UnlockSettings(bool enabled) Parameters Type Name Description Boolean enabled Fields consumeKeyOnUse Declaration public bool consumeKeyOnUse Field Value Type Description Boolean keyItemName Declaration public string keyItemName Field Value Type Description String unlockedString Declaration public string unlockedString Field Value Type Description String unlockSound Declaration public AudioClipSettings unlockSound Field Value Type Description AudioClipSettings"
  },
  "api/D3T.DifficultySystem.DifficultyBasedValue-1.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedValue-1.html",
    "title": "Class DifficultyBasedValue<T> | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedValue<T> Inheritance Object DifficultyBasedValue<T> DifficultyBasedAnimationCurve DifficultyBasedColor DifficultyBasedFloat DifficultyBasedInt DifficultyBasedMaterial Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DifficultyBasedValue<T> Type Parameters Name Description T Constructors DifficultyBasedValue(T) Declaration public DifficultyBasedValue(T defaultValue) Parameters Type Name Description T defaultValue DifficultyBasedValue(T, T, T, T) Declaration public DifficultyBasedValue(T easyValue, T mediumValue, T hardValue, T extremeValue) Parameters Type Name Description T easyValue T mediumValue T hardValue T extremeValue Fields easy Declaration public T easy Field Value Type Description T extreme Declaration public T extreme Field Value Type Description T hard Declaration public T hard Field Value Type Description T medium Declaration public T medium Field Value Type Description T Properties Current Declaration public T Current { get; } Property Value Type Description T Item[Int32] Declaration public T this[int level] { get; } Parameters Type Name Description Int32 level Property Value Type Description T Operators Implicit(DifficultyBasedValue<T> to T) Declaration public static implicit operator T(DifficultyBasedValue<T> v) Parameters Type Name Description DifficultyBasedValue <T> v Returns Type Description T"
  },
  "api/D3T.DifficultySystem.Difficulty.html": {
    "href": "api/D3T.DifficultySystem.Difficulty.html",
    "title": "Class Difficulty | D3T - Action Core | 1.0.2",
    "keywords": "Class Difficulty Manager class for controlling the game's difficulty level; Inheritance Object Difficulty Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class Difficulty Properties Level The current difficulty level. Declaration public static DifficultyLevel Level { get; set; } Property Value Type Description DifficultyLevel Methods Load(DataContainer) Declaration public static void Load(DataContainer root) Parameters Type Name Description DataContainer root Save(DataContainer) Declaration public static void Save(DataContainer root) Parameters Type Name Description DataContainer root Events DifficultyChanged This event is invoked when the current difficulty level has changed. Declaration public static event Action DifficultyChanged Event Type Type Description Action"
  },
  "api/D3T.Interaction.LightSwitch.html": {
    "href": "api/D3T.Interaction.LightSwitch.html",
    "title": "Class LightSwitch | D3T - Action Core | 1.0.2",
    "keywords": "Class LightSwitch A toggleable light that can be controlled with signals Inheritance Object LightSwitch Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LightSwitch : MonoBehaviour, ISignalLink Fields activeColor Declaration public Color activeColor Field Value Type Description Color activeLightIntentity Declaration public float activeLightIntentity Field Value Type Description Single emitters Declaration public Renderer[] emitters Field Value Type Description Renderer [] flares Declaration public LensFlare[] flares Field Value Type Description LensFlare [] getDefaultValues Declaration public bool getDefaultValues Field Value Type Description Boolean startState Declaration public bool startState Field Value Type Description Boolean Methods OnReceiveSignal(Boolean, Int32) Declaration public bool OnReceiveSignal(bool state, int channel) Parameters Type Name Description Boolean state Int32 channel Returns Type Description Boolean"
  },
  "api/D3T.Interaction.Inventory.InventoryModificationCallback.html": {
    "href": "api/D3T.Interaction.Inventory.InventoryModificationCallback.html",
    "title": "Delegate Inventory.InventoryModificationCallback | D3T - Action Core | 1.0.2",
    "keywords": "Delegate Inventory.InventoryModificationCallback Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate void InventoryModificationCallback(InventoryItem item); Parameters Type Name Description InventoryItem item"
  },
  "api/D3T.Interaction.Inventory.Interaction.html": {
    "href": "api/D3T.Interaction.Inventory.Interaction.html",
    "title": "Class Inventory.Interaction | D3T - Action Core | 1.0.2",
    "keywords": "Class Inventory.Interaction Inheritance Object Inventory.Interaction Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Interaction : ToggleableFeature Constructors Interaction(Boolean) Declaration public Interaction(bool enabled) Parameters Type Name Description Boolean enabled Fields closeEvent Declaration public ActionEventSet closeEvent Field Value Type Description ActionEventSet openEvent Declaration public ActionEventSet openEvent Field Value Type Description ActionEventSet"
  },
  "api/D3T.Interaction.CollectibleItem.html": {
    "href": "api/D3T.Interaction.CollectibleItem.html",
    "title": "Class CollectibleItem | D3T - Action Core | 1.0.2",
    "keywords": "Class CollectibleItem A collectible item that is transferred to the player inventory upon interaction. Inheritance Object AbstractCollectibleItem CollectibleItem Inherited Members AbstractCollectibleItem.pickupText AbstractCollectibleItem.pickupSound AbstractCollectibleItem.pickupEvent AbstractCollectibleItem.CanInteract AbstractCollectibleItem.Interact(Transform) AbstractCollectibleItem.OnInteracted(Transform) Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CollectibleItem : AbstractCollectibleItem, IInteractive Fields item Declaration public InventoryItem item Field Value Type Description InventoryItem Methods Transfer(Inventory, out Boolean) Declaration protected override bool Transfer(Inventory targetInventory, out bool fullyTransferred) Parameters Type Name Description Inventory targetInventory Boolean fullyTransferred Returns Type Description Boolean Overrides AbstractCollectibleItem.Transfer(Inventory, out Boolean)"
  },
  "api/D3T.Interaction.CollectibleInventory.html": {
    "href": "api/D3T.Interaction.CollectibleInventory.html",
    "title": "Class CollectibleInventory | D3T - Action Core | 1.0.2",
    "keywords": "Class CollectibleInventory A collectible set of items that is transferred to the player inventory upon interaction. Inheritance Object AbstractCollectibleItem CollectibleInventory Inherited Members AbstractCollectibleItem.pickupText AbstractCollectibleItem.pickupSound AbstractCollectibleItem.pickupEvent AbstractCollectibleItem.CanInteract AbstractCollectibleItem.Interact(Transform) AbstractCollectibleItem.OnInteracted(Transform) Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CollectibleInventory : AbstractCollectibleItem, IInteractive Methods Transfer(Inventory, out Boolean) Declaration protected override bool Transfer(Inventory targetInventory, out bool fullyTransferred) Parameters Type Name Description Inventory targetInventory Boolean fullyTransferred Returns Type Description Boolean Overrides AbstractCollectibleItem.Transfer(Inventory, out Boolean)"
  },
  "api/D3T.Gui.InventoryGUI.html": {
    "href": "api/D3T.Gui.InventoryGUI.html",
    "title": "Class InventoryGUI | D3T - Action Core | 1.0.2",
    "keywords": "Class InventoryGUI Manager class for displaying inventory GUI elements. Inheritance Object InventoryGUI Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class InventoryGUI Fields inventoryElementID Declaration public static string inventoryElementID Field Value Type Description String Properties CurrentOpenInventory Declaration public static Inventory CurrentOpenInventory { get; } Property Value Type Description Inventory Methods Init() Declaration public static void Init() OpenInventory(Inventory, Action) Declaration public static bool OpenInventory(Inventory inv, Action onCloseCallback = null) Parameters Type Name Description Inventory inv Action onCloseCallback Returns Type Description Boolean"
  },
  "api/D3T.DifficultySystem.DifficultyOverride.html": {
    "href": "api/D3T.DifficultySystem.DifficultyOverride.html",
    "title": "Class DifficultyOverride | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyOverride Edit-time helper component for setting a difficulty level on startup. Inheritance Object DifficultyOverride Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyOverride : MonoBehaviour Fields level Declaration public DifficultyLevel level Field Value Type Description DifficultyLevel"
  },
  "api/D3T.DifficultySystem.DifficultyBasedObject.Condition.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedObject.Condition.html",
    "title": "Enum DifficultyBasedObject.Condition | D3T - Action Core | 1.0.2",
    "keywords": "Enum DifficultyBasedObject.Condition Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Condition Fields Name Description Equal EqualOrHigher EqualOrLower NotEqual"
  },
  "api/D3T.Animation.Characters.CharacterIKController.FootIKPass.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.FootIKPass.html",
    "title": "Class CharacterIKController.FootIKPass | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.FootIKPass Inheritance Object CharacterIKController.IKPass CharacterIKController.FootIKPass Inherited Members CharacterIKController.IKPass.IKLayerName CharacterIKController.IKPass.IKLayer CharacterIKController.IKPass.Init(Animator) Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class FootIKPass : CharacterIKController.IKPass Fields footIKs Declaration [NonSerialized] public CharacterIKController.FootIK[] footIKs Field Value Type Description CharacterIKController.FootIK [] hitYOffset Declaration public float hitYOffset Field Value Type Description Single leftFootIKDebug Declaration public Transform leftFootIKDebug Field Value Type Description Transform leftFootTarget Declaration public Transform leftFootTarget Field Value Type Description Transform plantThreshold Declaration public float plantThreshold Field Value Type Description Single raycastDistanceThreshold Declaration public float raycastDistanceThreshold Field Value Type Description Single raycastLayerMask Declaration public LayerMask raycastLayerMask Field Value Type Description LayerMask releaseThreshold Declaration public float releaseThreshold Field Value Type Description Single rightFootIKDebug Declaration public Transform rightFootIKDebug Field Value Type Description Transform rightFootTarget Declaration public Transform rightFootTarget Field Value Type Description Transform Methods ApplyIK(CharacterIKController) Declaration public override void ApplyIK(CharacterIKController controller) Parameters Type Name Description CharacterIKController controller Overrides CharacterIKController.IKPass.ApplyIK(CharacterIKController) OnInit(Animator) Declaration protected override void OnInit(Animator anim) Parameters Type Name Description Animator anim Overrides CharacterIKController.IKPass.OnInit(Animator)"
  },
  "api/D3TEditor.Inspector.ZoneEditor.html": {
    "href": "api/D3TEditor.Inspector.ZoneEditor.html",
    "title": "Class ZoneEditor | D3T - Action Core | 1.0.2",
    "keywords": "Class ZoneEditor Inheritance Object ZoneEditor Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ZoneEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/D3TEditor.Inspector.DifficultyBasedAnimationCurveDrawer.html": {
    "href": "api/D3TEditor.Inspector.DifficultyBasedAnimationCurveDrawer.html",
    "title": "Class DifficultyBasedAnimationCurveDrawer | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedAnimationCurveDrawer Inheritance Object DifficultyBasedValueDrawer < AnimationCurve > DifficultyBasedAnimationCurveDrawer Inherited Members DifficultyBasedValueDrawer<AnimationCurve>.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedAnimationCurveDrawer : DifficultyBasedValueDrawer<AnimationCurve>"
  },
  "api/D3TEditor.Inspector.AbstractCollectibleItemEditor.html": {
    "href": "api/D3TEditor.Inspector.AbstractCollectibleItemEditor.html",
    "title": "Class AbstractCollectibleItemEditor | D3T - Action Core | 1.0.2",
    "keywords": "Class AbstractCollectibleItemEditor Inheritance Object AbstractCollectibleItemEditor Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AbstractCollectibleItemEditor : DrawBaseClassLastEditor<AbstractCollectibleItem>"
  },
  "api/D3T.Triggers.Zones.SignalZone.html": {
    "href": "api/D3T.Triggers.Zones.SignalZone.html",
    "title": "Class SignalZone | D3T - Action Core | 1.0.2",
    "keywords": "Class SignalZone Sends a signal to a target when the player enters/leaves the zone. Inheritance Object Zone SignalZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.DefaultGizmoColor Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnStart() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SignalZone : Zone, ISerializable Fields delay Declaration public float delay Field Value Type Description Single extraData Declaration public int extraData Field Value Type Description Int32 once Declaration public bool once Field Value Type Description Boolean onEnter Declaration public bool onEnter Field Value Type Description Boolean state Declaration public bool state Field Value Type Description Boolean target Declaration public Transform target Field Value Type Description Transform Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform)"
  },
  "api/D3T.Interaction.Button.ItemRequirement.html": {
    "href": "api/D3T.Interaction.Button.ItemRequirement.html",
    "title": "Class Button.ItemRequirement | D3T - Action Core | 1.0.2",
    "keywords": "Class Button.ItemRequirement Inheritance Object Button.ItemRequirement Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ItemRequirement : ToggleableFeature Constructors ItemRequirement(Boolean) Declaration public ItemRequirement(bool enabled) Parameters Type Name Description Boolean enabled Fields checkOnlyOnFirstInteraction Declaration public bool checkOnlyOnFirstInteraction Field Value Type Description Boolean consumeItemOnUse Declaration public bool consumeItemOnUse Field Value Type Description Boolean itemMissingTextKey Declaration public string itemMissingTextKey Field Value Type Description String itemName Declaration public string itemName Field Value Type Description String Methods Check(Transform) Declaration public bool Check(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean"
  },
  "api/D3T.Graphics.html": {
    "href": "api/D3T.Graphics.html",
    "title": "Namespace D3T.Graphics | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.Graphics Classes FogZone Smoothly fades the scene's fog settings while inside the zone."
  },
  "api/D3T.DifficultySystem.DifficultyBasedAnimationCurve.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedAnimationCurve.html",
    "title": "Class DifficultyBasedAnimationCurve | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedAnimationCurve Inheritance Object DifficultyBasedValue < AnimationCurve > DifficultyBasedAnimationCurve Inherited Members DifficultyBasedValue<AnimationCurve>.easy DifficultyBasedValue<AnimationCurve>.medium DifficultyBasedValue<AnimationCurve>.hard DifficultyBasedValue<AnimationCurve>.extreme DifficultyBasedValue<AnimationCurve>.Item[Int32] DifficultyBasedValue<AnimationCurve>.Current Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DifficultyBasedAnimationCurve : DifficultyBasedValue<AnimationCurve> Constructors DifficultyBasedAnimationCurve(Keyframe[]) Declaration public DifficultyBasedAnimationCurve(params Keyframe[] keyframes) Parameters Type Name Description Keyframe [] keyframes"
  },
  "api/D3T.Animation.Characters.IKTargets.html": {
    "href": "api/D3T.Animation.Characters.IKTargets.html",
    "title": "Class IKTargets | D3T - Action Core | 1.0.2",
    "keywords": "Class IKTargets Inheritance Object IKTargets Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class IKTargets Fields leftHandTargetWeight Declaration public float leftHandTargetWeight Field Value Type Description Single lookAtTarget Declaration public Transform lookAtTarget Field Value Type Description Transform lookAtTargetZOffset Declaration public float lookAtTargetZOffset Field Value Type Description Single rightHandTargetWeight Declaration public float rightHandTargetWeight Field Value Type Description Single Properties CurrentHandTarget Declaration public IIKSource CurrentHandTarget { get; set; } Property Value Type Description IIKSource"
  },
  "api/D3T.Triggers.Zones.ControlDoors.DoorControlSetting.html": {
    "href": "api/D3T.Triggers.Zones.ControlDoors.DoorControlSetting.html",
    "title": "Class ControlDoors.DoorControlSetting | D3T - Action Core | 1.0.2",
    "keywords": "Class ControlDoors.DoorControlSetting Inheritance Object ControlDoors.DoorControlSetting Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DoorControlSetting Fields action Declaration public ControlDoors.DoorControlSetting.DoorAction action Field Value Type Description ControlDoors.DoorControlSetting.DoorAction door Declaration public SceneObjectReference door Field Value Type Description SceneObjectReference"
  },
  "api/D3T.Triggers.Zones.ControlDoors.DoorControlSetting.DoorAction.html": {
    "href": "api/D3T.Triggers.Zones.ControlDoors.DoorControlSetting.DoorAction.html",
    "title": "Enum ControlDoors.DoorControlSetting.DoorAction | D3T - Action Core | 1.0.2",
    "keywords": "Enum ControlDoors.DoorControlSetting.DoorAction Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum DoorAction Fields Name Description Close CloseAndLock None Open OpenIfUnlocked Unlock"
  },
  "api/D3T.Triggers.CheckItemInInventory.html": {
    "href": "api/D3T.Triggers.CheckItemInInventory.html",
    "title": "Class CheckItemInInventory | D3T - Action Core | 1.0.2",
    "keywords": "Class CheckItemInInventory Checks if the specified item is present in the target inventory. Inheritance Object CheckItemInInventory Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CheckItemInInventory : TriggerCondition Fields enableEventUpdates Declaration public bool enableEventUpdates Field Value Type Description Boolean itemName Declaration public string itemName Field Value Type Description String requiredAmount Declaration public int requiredAmount Field Value Type Description Int32 targetInventory Declaration public Inventory targetInventory Field Value Type Description Inventory targetInventoryType Declaration public CheckItemInInventory.Target targetInventoryType Field Value Type Description CheckItemInInventory.Target targetPersistentInventoryID Declaration public string targetPersistentInventoryID Field Value Type Description String Properties TargetInventory Declaration public Inventory TargetInventory { get; } Property Value Type Description Inventory Methods Evaluate() Declaration protected override bool Evaluate() Returns Type Description Boolean"
  },
  "api/D3T.Graphics.FogZone.html": {
    "href": "api/D3T.Graphics.FogZone.html",
    "title": "Class FogZone | D3T - Action Core | 1.0.2",
    "keywords": "Class FogZone Smoothly fades the scene's fog settings while inside the zone. Inheritance Object Zone FogZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FogZone : Zone, ISerializable Fields fadeTime Declaration public float fadeTime Field Value Type Description Single fogColor Declaration public Color fogColor Field Value Type Description Color fogEndDistance Declaration public float fogEndDistance Field Value Type Description Single fogStartDistance Declaration public float fogStartDistance Field Value Type Description Single Properties DefaultGizmoColor Declaration protected override Color DefaultGizmoColor { get; } Property Value Type Description Color Overrides Zone.DefaultGizmoColor Methods OnStart() Declaration protected override void OnStart() Overrides Zone.OnStart() OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform)"
  },
  "api/D3T.Animation.Characters.CharacterIKController.HeadLookIKPass.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.HeadLookIKPass.html",
    "title": "Class CharacterIKController.HeadLookIKPass | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.HeadLookIKPass Inheritance Object CharacterIKController.IKPass CharacterIKController.HeadLookIKPass Inherited Members CharacterIKController.IKPass.IKLayerName CharacterIKController.IKPass.IKLayer CharacterIKController.IKPass.Init(Animator) CharacterIKController.IKPass.OnInit(Animator) Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class HeadLookIKPass : CharacterIKController.IKPass Fields directionTransform Declaration public Transform directionTransform Field Value Type Description Transform target Declaration public Transform target Field Value Type Description Transform targetBlend Declaration public float targetBlend Field Value Type Description Single weights Declaration public CharacterIKController.LookAtWeights weights Field Value Type Description CharacterIKController.LookAtWeights zOffset Declaration public float zOffset Field Value Type Description Single Methods ApplyIK(CharacterIKController) Declaration public override void ApplyIK(CharacterIKController controller) Parameters Type Name Description CharacterIKController controller Overrides CharacterIKController.IKPass.ApplyIK(CharacterIKController)"
  },
  "api/D3T.Triggers.Zones.DeathZone.html": {
    "href": "api/D3T.Triggers.Zones.DeathZone.html",
    "title": "Class DeathZone | D3T - Action Core | 1.0.2",
    "keywords": "Class DeathZone Kills entities entering the zone. Inheritance Object Zone DeathZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnZoneExit(Transform) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DeathZone : Zone, ISerializable Fields playerOnly Declaration public bool playerOnly Field Value Type Description Boolean Properties DefaultGizmoColor Declaration protected override Color DefaultGizmoColor { get; } Property Value Type Description Color Overrides Zone.DefaultGizmoColor Methods OnStart() Declaration protected override void OnStart() Overrides Zone.OnStart() OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneEnterNonPlayer(Collider) Declaration public override void OnZoneEnterNonPlayer(Collider c) Parameters Type Name Description Collider c Overrides Zone.OnZoneEnterNonPlayer(Collider)"
  },
  "api/D3T.Triggers.html": {
    "href": "api/D3T.Triggers.html",
    "title": "Namespace D3T.Triggers | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.Triggers Classes CheckItemInInventory Checks if the specified item is present in the target inventory. ModifyInventory Adds or removes items from the target inventory. Enums CheckItemInInventory.Target ModifyInventory.ActionType ModifyInventory.TargetInventory"
  },
  "api/D3T.Triggers.ModifyInventory.html": {
    "href": "api/D3T.Triggers.ModifyInventory.html",
    "title": "Class ModifyInventory | D3T - Action Core | 1.0.2",
    "keywords": "Class ModifyInventory Adds or removes items from the target inventory. Inheritance Object ModifyInventory Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ModifyInventory : TriggerAction Fields amount Declaration public int amount Field Value Type Description Int32 itemID Declaration public string itemID Field Value Type Description String target Declaration public ModifyInventory.TargetInventory target Field Value Type Description ModifyInventory.TargetInventory targetInventory Declaration public SceneObjectReference targetInventory Field Value Type Description SceneObjectReference type Declaration public ModifyInventory.ActionType type Field Value Type Description ModifyInventory.ActionType Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state"
  },
  "api/D3T.Interaction.PersistentInventoryManager.html": {
    "href": "api/D3T.Interaction.PersistentInventoryManager.html",
    "title": "Class PersistentInventoryManager | D3T - Action Core | 1.0.2",
    "keywords": "Class PersistentInventoryManager Manager class for interacting with persistent inventories. Inheritance Object PersistentInventoryManager Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PersistentInventoryManager Fields persistentInventories Declaration public static Dictionary<string, List<InventoryItem>> persistentInventories Field Value Type Description Dictionary < String , List < InventoryItem >> Properties HasSaveState Declaration public static bool HasSaveState { get; } Property Value Type Description Boolean Methods CreateSaveState() Create a save state of all persistent inventories to allow them to be loaded in the next level Declaration public static void CreateSaveState() DeserializePersistentInventories(DataContainer) Declaration public static void DeserializePersistentInventories(DataContainer root) Parameters Type Name Description DataContainer root Init() Declaration public static void Init() LoadPersistentInvFromID(DataContainer, Inventory) Declaration public static List<InventoryItem> LoadPersistentInvFromID(DataContainer data, Inventory inventory) Parameters Type Name Description DataContainer data Inventory inventory Returns Type Description List < InventoryItem > RegisterPersistentInventory(Inventory, String) Declaration public static void RegisterPersistentInventory(Inventory inv, string persistentInventoryID) Parameters Type Name Description Inventory inv String persistentInventoryID RestoreSaveState() Restore all persistent inventories to the saved state Declaration public static void RestoreSaveState() SavePersistentInvReference(DataContainer, Inventory) Declaration public static void SavePersistentInvReference(DataContainer data, Inventory inventory) Parameters Type Name Description DataContainer data Inventory inventory SerializePersistentInventories(DataContainer) Declaration public static void SerializePersistentInventories(DataContainer root) Parameters Type Name Description DataContainer root"
  },
  "api/D3T.Triggers.Zones.ActivationZone.Action.html": {
    "href": "api/D3T.Triggers.Zones.ActivationZone.Action.html",
    "title": "Enum ActivationZone.Action | D3T - Action Core | 1.0.2",
    "keywords": "Enum ActivationZone.Action Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Action Fields Name Description Activate Deactivate Nothing"
  },
  "api/D3T.Interaction.html": {
    "href": "api/D3T.Interaction.html",
    "title": "Namespace D3T.Interaction | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.Interaction Classes AbstractCollectibleItem Base class for a collectible item. Button A button that can be pressed or toggled with interactions. Button.ItemRequirement CollectibleInventory A collectible set of items that is transferred to the player inventory upon interaction. CollectibleItem A collectible item that is transferred to the player inventory upon interaction. Door A door component that can be opened/closed with player interactions or signals. Door.AnimationSettings Door.FallbackAnimation Door.InteractionSettings Door.UnlockSettings Inventory A collection of items inside a container. Inventory.Interaction Inventory.PersistentInventorySettings InventoryItem An item that can be collected and put into inventories. InventoryItemDefinitions Asset containing informations to define an item, such as names, icons and world object prefabs. InventoryItemDefinitions.ItemDefinition InventoryItemDefinitionSet Master asset for listing all Inventory Item Definitions to be used in the game. LightSwitch A toggleable light that can be controlled with signals PersistentInventoryManager Manager class for interacting with persistent inventories. PhysicsPressurePlate A pressure plate that sends a signal based on it's pressed state. Interfaces IInteractive Interface for receiving player interaction callbacks. Delegates Inventory.InventoryModificationCallback"
  },
  "api/D3T.Interaction.PhysicsPressurePlate.html": {
    "href": "api/D3T.Interaction.PhysicsPressurePlate.html",
    "title": "Class PhysicsPressurePlate | D3T - Action Core | 1.0.2",
    "keywords": "Class PhysicsPressurePlate A pressure plate that sends a signal based on it's pressed state. Inheritance Object PhysicsPressurePlate Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PhysicsPressurePlate : MonoBehaviour, ISerializable Fields invertSignalState Declaration public bool invertSignalState Field Value Type Description Boolean minPressedStateDuration Declaration public float minPressedStateDuration Field Value Type Description Single sendTarget Declaration public Transform sendTarget Field Value Type Description Transform triggerThreshold Declaration public float triggerThreshold Field Value Type Description Single Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Load(DataContainer) Declaration public void Load(DataContainer container) Parameters Type Name Description DataContainer container Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container"
  },
  "api/D3T.Interaction.Inventory.html": {
    "href": "api/D3T.Interaction.Inventory.html",
    "title": "Class Inventory | D3T - Action Core | 1.0.2",
    "keywords": "Class Inventory A collection of items inside a container. Inheritance Object Inventory Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Inventory : MonoBehaviour, ISerializable, IInteractive Fields enableSerialization Declaration public bool enableSerialization Field Value Type Description Boolean interaction Declaration public Inventory.Interaction interaction Field Value Type Description Inventory.Interaction itemRegistry Declaration public static Dictionary<string, InventoryItemDefinitions.ItemDefinition> itemRegistry Field Value Type Description Dictionary < String , InventoryItemDefinitions.ItemDefinition > localPlayerInventory Declaration public static Inventory localPlayerInventory Field Value Type Description Inventory persistentInventory Declaration public Inventory.PersistentInventorySettings persistentInventory Field Value Type Description Inventory.PersistentInventorySettings Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean Implements IInteractive.CanInteract FreeSlotsLeft Declaration public int FreeSlotsLeft { get; } Property Value Type Description Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean SlotCapacity Declaration public int SlotCapacity { get; } Property Value Type Description Int32 UsedSlotNum Declaration public int UsedSlotNum { get; } Property Value Type Description Int32 Methods ClearEmptySlots() Declaration public void ClearEmptySlots() CountItem(String) Declaration public int CountItem(string itemID) Parameters Type Name Description String itemID Returns Type Description Int32 GetFirstItem(String) Declaration public InventoryItem GetFirstItem(string itemID) Parameters Type Name Description String itemID Returns Type Description InventoryItem GetItemAt(Int32) Declaration public InventoryItem GetItemAt(int index) Parameters Type Name Description Int32 index Returns Type Description InventoryItem GiveItem(InventoryItem) Adds the given item stack to the inventory. Declaration public bool GiveItem(InventoryItem item) Parameters Type Name Description InventoryItem item Returns Type Description Boolean True, if at least one item was added to the inventory. GiveItem(String, Int32) Declaration public void GiveItem(string itemID, int amount = 1) Parameters Type Name Description String itemID Int32 amount GiveItemToPlayer(InventoryItem) Declaration public static bool GiveItemToPlayer(InventoryItem item) Parameters Type Name Description InventoryItem item Returns Type Description Boolean GiveItemToPlayer(String, Int32) Declaration public static bool GiveItemToPlayer(string itemID, int amount = 1) Parameters Type Name Description String itemID Int32 amount Returns Type Description Boolean HasItem(String, Int32) Declaration public bool HasItem(string itemID, int amount = 1) Parameters Type Name Description String itemID Int32 amount Returns Type Description Boolean HasItemOnPlayer(String, Int32) Declaration public static bool HasItemOnPlayer(string itemID, int amount = 1) Parameters Type Name Description String itemID Int32 amount Returns Type Description Boolean Init(GameSettings) Declaration public static void Init(GameSettings settings) Parameters Type Name Description GameSettings settings Interact(Transform) Declaration public bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean Implements IInteractive.Interact(Transform) ListInventoryItems() Declaration public InventoryItem[] ListInventoryItems() Returns Type Description InventoryItem [] Load(DataContainer) Declaration public void Load(DataContainer container) Parameters Type Name Description DataContainer container LoadInventory(DataContainer) Declaration public static List<InventoryItem> LoadInventory(DataContainer container) Parameters Type Name Description DataContainer container Returns Type Description List < InventoryItem > Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container SaveInventory(DataContainer, List<InventoryItem>) Declaration public static void SaveInventory(DataContainer container, List<InventoryItem> list) Parameters Type Name Description DataContainer container List < InventoryItem > list TakeItem(String, Int32, Boolean) Declaration public InventoryItem TakeItem(string itemID, int amount = 1, bool allowPartial = true) Parameters Type Name Description String itemID Int32 amount Boolean allowPartial Returns Type Description InventoryItem TakeItemFromPlayer(String, Int32) Declaration public static InventoryItem TakeItemFromPlayer(string itemID, int amount = 1) Parameters Type Name Description String itemID Int32 amount Returns Type Description InventoryItem Transfer(Inventory, String, Int32, Boolean) Transfers an item to the target inventory Declaration public bool Transfer(Inventory targetInventory, string itemID, int amount = 1, bool allowPartialTransfer = true) Parameters Type Name Description Inventory targetInventory String itemID Int32 amount Boolean allowPartialTransfer Returns Type Description Boolean True if anything was transferred, false otherwise TransferAll(Inventory) Transfers all items from this inventory to the target inventory. Declaration public bool TransferAll(Inventory targetInventory) Parameters Type Name Description Inventory targetInventory Returns Type Description Boolean True if all items have been transferred, false if there are some (or all) items left. UseItem(String, Int32, Boolean) Declaration public bool UseItem(string itemID, int amount = 1, bool consumeOnUse = false) Parameters Type Name Description String itemID Int32 amount Boolean consumeOnUse Returns Type Description Boolean UseItemFromPlayer(String, Int32, Boolean) Declaration public static bool UseItemFromPlayer(string itemID, int amount = 1, bool consumeOnUse = false) Parameters Type Name Description String itemID Int32 amount Boolean consumeOnUse Returns Type Description Boolean Events InventoryChanged Declaration public event Action InventoryChanged Event Type Type Description Action ItemAdded Declaration public event Inventory.InventoryModificationCallback ItemAdded Event Type Type Description Inventory.InventoryModificationCallback ItemRemoved Declaration public event Inventory.InventoryModificationCallback ItemRemoved Event Type Type Description Inventory.InventoryModificationCallback"
  },
  "api/D3T.DevTools.html": {
    "href": "api/D3T.DevTools.html",
    "title": "Namespace D3T.DevTools | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.DevTools Classes ActionCoreCommands"
  },
  "api/D3T.Animation.Characters.IKData.html": {
    "href": "api/D3T.Animation.Characters.IKData.html",
    "title": "Struct IKData | D3T - Action Core | 1.0.2",
    "keywords": "Struct IKData Settings for defining Hand IKs, hand poses and torso twisting. Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct IKData Fields leftFoot Declaration public BodyPartIK leftFoot Field Value Type Description BodyPartIK leftHand Declaration public BodyPartIK leftHand Field Value Type Description BodyPartIK leftHandPose Declaration public HandPoseSettings leftHandPose Field Value Type Description HandPoseSettings nullIK Declaration public static readonly IKData nullIK Field Value Type Description IKData rightFoot Declaration public BodyPartIK rightFoot Field Value Type Description BodyPartIK rightHand Declaration public BodyPartIK rightHand Field Value Type Description BodyPartIK rightHandPose Declaration public HandPoseSettings rightHandPose Field Value Type Description HandPoseSettings torsoTwistAngle Declaration public float torsoTwistAngle Field Value Type Description Single torsoTwistWeight Declaration public float torsoTwistWeight Field Value Type Description Single Methods GetIKFromParts(Boolean, Boolean, Boolean, Boolean) Declaration public IKData GetIKFromParts(bool hands, bool handPoses, bool torso, bool feet) Parameters Type Name Description Boolean hands Boolean handPoses Boolean torso Boolean feet Returns Type Description IKData Lerp(IKData, IKData, Single, Single) Declaration public static IKData Lerp(IKData a, IKData b, float tHandPose, float tIK) Parameters Type Name Description IKData a IKData b Single tHandPose Single tIK Returns Type Description IKData LerpAdditive(IKData, IKData, Single, Single) Declaration public static IKData LerpAdditive(IKData a, IKData b, float tHandPose, float tIK) Parameters Type Name Description IKData a IKData b Single tHandPose Single tIK Returns Type Description IKData MultiplyWeights(Single) Declaration public void MultiplyWeights(float mul) Parameters Type Name Description Single mul"
  },
  "api/D3T.Animation.Characters.HandPoseSettings.html": {
    "href": "api/D3T.Animation.Characters.HandPoseSettings.html",
    "title": "Struct HandPoseSettings | D3T - Action Core | 1.0.2",
    "keywords": "Struct HandPoseSettings Settings for defining the pose of a hand. Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct HandPoseSettings Fields pointWeight Declaration public float pointWeight Field Value Type Description Single poseWeight Declaration public float poseWeight Field Value Type Description Single stretchWeight Declaration public float stretchWeight Field Value Type Description Single Methods Lerp(HandPoseSettings, HandPoseSettings, Single) Declaration public static HandPoseSettings Lerp(HandPoseSettings a, HandPoseSettings b, float t) Parameters Type Name Description HandPoseSettings a HandPoseSettings b Single t Returns Type Description HandPoseSettings LerpAdditive(HandPoseSettings, HandPoseSettings, Single) Declaration public static HandPoseSettings LerpAdditive(HandPoseSettings a, HandPoseSettings b, float t) Parameters Type Name Description HandPoseSettings a HandPoseSettings b Single t Returns Type Description HandPoseSettings"
  },
  "api/D3T.Animation.Characters.CharacterIKController.SyncCameraIKPass.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.SyncCameraIKPass.html",
    "title": "Class CharacterIKController.SyncCameraIKPass | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.SyncCameraIKPass Inheritance Object CharacterIKController.IKPass CharacterIKController.SyncCameraIKPass Inherited Members CharacterIKController.IKPass.IKLayerName CharacterIKController.IKPass.IKLayer CharacterIKController.IKPass.Init(Animator) CharacterIKController.IKPass.OnInit(Animator) Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SyncCameraIKPass : CharacterIKController.IKPass Fields eyePosition Declaration public Transform eyePosition Field Value Type Description Transform Methods ApplyIK(CharacterIKController) Declaration public override void ApplyIK(CharacterIKController controller) Parameters Type Name Description CharacterIKController controller Overrides CharacterIKController.IKPass.ApplyIK(CharacterIKController)"
  },
  "api/D3T.Animation.Characters.CharacterIKController.FootIK.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.FootIK.html",
    "title": "Class CharacterIKController.FootIK | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController.FootIK Inheritance Object CharacterIKController.FootIK Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FootIK Constructors FootIK(AvatarIKGoal) Declaration public FootIK(AvatarIKGoal goal) Parameters Type Name Description AvatarIKGoal goal Fields goal Declaration public readonly AvatarIKGoal goal Field Value Type Description AvatarIKGoal ik Declaration public BodyPartIK ik Field Value Type Description BodyPartIK lastWeight Declaration public float lastWeight Field Value Type Description Single planted Declaration public bool planted Field Value Type Description Boolean"
  },
  "api/D3TEditor.MenuExtras.html": {
    "href": "api/D3TEditor.MenuExtras.html",
    "title": "Class MenuExtras | D3T - Action Core | 1.0.2",
    "keywords": "Class MenuExtras Inheritance Object MenuExtras Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class MenuExtras Methods CreateZone(MenuCommand) Declaration public static void CreateZone(MenuCommand menuCommand) Parameters Type Name Description MenuCommand menuCommand"
  },
  "api/D3T.Triggers.ModifyInventory.ActionType.html": {
    "href": "api/D3T.Triggers.ModifyInventory.ActionType.html",
    "title": "Enum ModifyInventory.ActionType | D3T - Action Core | 1.0.2",
    "keywords": "Enum ModifyInventory.ActionType Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ActionType Fields Name Description Give Take"
  },
  "api/D3T.Interaction.InventoryItemDefinitionSet.html": {
    "href": "api/D3T.Interaction.InventoryItemDefinitionSet.html",
    "title": "Class InventoryItemDefinitionSet | D3T - Action Core | 1.0.2",
    "keywords": "Class InventoryItemDefinitionSet Master asset for listing all Inventory Item Definitions to be used in the game. Inheritance Object InventoryItemDefinitionSet Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class InventoryItemDefinitionSet : ScriptableObject Fields definitions Declaration public InventoryItemDefinitions[] definitions Field Value Type Description InventoryItemDefinitions []"
  },
  "api/D3T.Triggers.Zones.TriggerControllerZone.html": {
    "href": "api/D3T.Triggers.Zones.TriggerControllerZone.html",
    "title": "Class TriggerControllerZone | D3T - Action Core | 1.0.2",
    "keywords": "Class TriggerControllerZone Triggers a Trigger Controller evaluation when the player enters/leaves the zone. Inheritance Object Zone TriggerControllerZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.DefaultGizmoColor Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TriggerControllerZone : Zone, ISerializable Properties ZoneDebugName Declaration protected override string ZoneDebugName { get; } Property Value Type Description String Overrides Zone.ZoneDebugName Methods OnStart() Declaration protected override void OnStart() Overrides Zone.OnStart() OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform)"
  },
  "api/D3T.Triggers.Zones.SoundPlayerZone.html": {
    "href": "api/D3T.Triggers.Zones.SoundPlayerZone.html",
    "title": "Class SoundPlayerZone | D3T - Action Core | 1.0.2",
    "keywords": "Class SoundPlayerZone Plays the attached AudioSource when the player enters the zone. Inheritance Object Zone SoundPlayerZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.DefaultGizmoColor Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnStart() Zone.OnZoneExit(Transform) Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SoundPlayerZone : Zone, ISerializable Fields once Declaration public bool once Field Value Type Description Boolean Properties ZoneDebugName Declaration protected override string ZoneDebugName { get; } Property Value Type Description String Overrides Zone.ZoneDebugName Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform)"
  },
  "api/D3T.Interaction.InventoryItem.html": {
    "href": "api/D3T.Interaction.InventoryItem.html",
    "title": "Class InventoryItem | D3T - Action Core | 1.0.2",
    "keywords": "Class InventoryItem An item that can be collected and put into inventories. Inheritance Object InventoryItem Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class InventoryItem Constructors InventoryItem(InventoryItem) Declaration public InventoryItem(InventoryItem other) Parameters Type Name Description InventoryItem other InventoryItem(String, Int32) Declaration public InventoryItem(string id, int num) Parameters Type Name Description String id Int32 num Fields amount Declaration public int amount Field Value Type Description Int32 extraData Declaration public object extraData Field Value Type Description Object itemID Declaration public string itemID Field Value Type Description String Properties UnlocalizedItemName Declaration public string UnlocalizedItemName { get; } Property Value Type Description String Methods CreateFromData(DataContainer) Declaration public static InventoryItem CreateFromData(DataContainer data) Parameters Type Name Description DataContainer data Returns Type Description InventoryItem GetMaxStackSize() Declaration public int GetMaxStackSize() Returns Type Description Int32 GetStackSizeLeft() Returns the amount of items that can fit in this stack (until max stack size is reached). Declaration public int GetStackSizeLeft() Returns Type Description Int32 IsSameItem(InventoryItem, Boolean) Declaration public bool IsSameItem(InventoryItem other, bool compareExtraData = true) Parameters Type Name Description InventoryItem other Boolean compareExtraData Returns Type Description Boolean Serialize() Declaration public DataContainer Serialize() Returns Type Description DataContainer ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() TryStack(InventoryItem) Stacks the given InventoryItem with this one, if possible. Declaration public int TryStack(InventoryItem other) Parameters Type Name Description InventoryItem other Returns Type Description Int32 The amount of items that were added to this stack."
  },
  "api/D3T.Interaction.Door.InteractionSettings.html": {
    "href": "api/D3T.Interaction.Door.InteractionSettings.html",
    "title": "Class Door.InteractionSettings | D3T - Action Core | 1.0.2",
    "keywords": "Class Door.InteractionSettings Inheritance Object Door.InteractionSettings Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class InteractionSettings : ToggleableFeature Constructors InteractionSettings(Boolean) Declaration public InteractionSettings(bool enable) Parameters Type Name Description Boolean enable Fields canInterruptOpening Declaration public bool canInterruptOpening Field Value Type Description Boolean openOnly Declaration public bool openOnly Field Value Type Description Boolean"
  },
  "api/D3T.Animation.Characters.BodyPartIK.html": {
    "href": "api/D3T.Animation.Characters.BodyPartIK.html",
    "title": "Struct BodyPartIK | D3T - Action Core | 1.0.2",
    "keywords": "Struct BodyPartIK Target, hint and weight settings for humanoid limbs. Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct BodyPartIK Fields hint Declaration public Transform hint Field Value Type Description Transform hintWeight Declaration public float hintWeight Field Value Type Description Single target Declaration public Transform target Field Value Type Description Transform weight Declaration public float weight Field Value Type Description Single Properties ActualHintWeight Declaration public float ActualHintWeight { get; } Property Value Type Description Single ActualWeight Declaration public float ActualWeight { get; } Property Value Type Description Single HasHint Is a hint transform or manual hint position defined for this IK target? Declaration public bool HasHint { get; } Property Value Type Description Boolean HasTarget Is a target transform or manual target position defined for this IK target? Declaration public bool HasTarget { get; } Property Value Type Description Boolean HintPos Declaration public Vector3 HintPos { get; } Property Value Type Description Vector3 TargetPos Declaration public Vector3 TargetPos { get; } Property Value Type Description Vector3 TargetRot Declaration public Quaternion TargetRot { get; } Property Value Type Description Quaternion Methods Lerp(BodyPartIK, BodyPartIK, Single) Linearly interpolates between the two IK settings. Declaration public static BodyPartIK Lerp(BodyPartIK a, BodyPartIK b, float t) Parameters Type Name Description BodyPartIK a BodyPartIK b Single t Returns Type Description BodyPartIK LerpAdditive(BodyPartIK, BodyPartIK, Single) Additively interpolates between the two IK settings. Declaration public static BodyPartIK LerpAdditive(BodyPartIK a, BodyPartIK b, float t) Parameters Type Name Description BodyPartIK a BodyPartIK b Single t Returns Type Description BodyPartIK LerpKeepTransforms(BodyPartIK, BodyPartIK, Single) Declaration public static BodyPartIK LerpKeepTransforms(BodyPartIK a, BodyPartIK b, float t) Parameters Type Name Description BodyPartIK a BodyPartIK b Single t Returns Type Description BodyPartIK MultiplyWeights(Single) Declaration public void MultiplyWeights(float mul) Parameters Type Name Description Single mul"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Information | D3T - Action Core | 1.0.2",
    "keywords": "Information There is currently no documentation for this package."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| D3T - Action Core | 1.0.2",
    "keywords": "MIT License Copyright (c) 2022 D3TONAT0R Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | D3T - Action Core | 1.0.2",
    "keywords": "Home Page. This is the home page for this package."
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| D3T - Action Core | 1.0.2",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | D3T - Action Core | 1.0.2",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| D3T - Action Core | 1.0.2",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "api/D3TEditor.Inspector.html": {
    "href": "api/D3TEditor.Inspector.html",
    "title": "Namespace D3TEditor.Inspector | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3TEditor.Inspector Classes AbstractCollectibleItemEditor DifficultyBasedAnimationCurveDrawer DifficultyBasedColorDrawer DifficultyBasedFloatDrawer DifficultyBasedIntDrawer DifficultyBasedMaterialDrawer DifficultyBasedValueDrawer<T> ZoneEditor"
  },
  "api/D3TEditor.Inspector.DifficultyBasedValueDrawer-1.html": {
    "href": "api/D3TEditor.Inspector.DifficultyBasedValueDrawer-1.html",
    "title": "Class DifficultyBasedValueDrawer<T> | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedValueDrawer<T> Inheritance Object DifficultyBasedValueDrawer<T> DifficultyBasedAnimationCurveDrawer DifficultyBasedColorDrawer DifficultyBasedFloatDrawer DifficultyBasedIntDrawer DifficultyBasedMaterialDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedValueDrawer<T> : PropertyDrawer Type Parameters Name Description T Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.BodyPartIKDrawer.html": {
    "href": "api/D3TEditor.BodyPartIKDrawer.html",
    "title": "Class BodyPartIKDrawer | D3T - Action Core | 1.0.2",
    "keywords": "Class BodyPartIKDrawer Inheritance Object BodyPartIKDrawer Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BodyPartIKDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3T.Gui.html": {
    "href": "api/D3T.Gui.html",
    "title": "Namespace D3T.Gui | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.Gui Classes InventoryGUI Manager class for displaying inventory GUI elements."
  },
  "api/D3T.DifficultySystem.html": {
    "href": "api/D3T.DifficultySystem.html",
    "title": "Namespace D3T.DifficultySystem | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.DifficultySystem Classes Difficulty Manager class for controlling the game's difficulty level; DifficultyBasedAnimationCurve DifficultyBasedColor DifficultyBasedFloat DifficultyBasedInt DifficultyBasedMaterial DifficultyBasedObject Keeps this object in the scene only if the difficulty level meets the set conditions. DifficultyBasedValue<T> DifficultyOverride Edit-time helper component for setting a difficulty level on startup. Enums DifficultyBasedObject.Condition DifficultyLevel"
  },
  "api/D3T.DifficultySystem.DifficultyBasedObject.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedObject.html",
    "title": "Class DifficultyBasedObject | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedObject Keeps this object in the scene only if the difficulty level meets the set conditions. Inheritance Object DifficultyBasedObject Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedObject : MonoBehaviour Fields condition Declaration public DifficultyBasedObject.Condition condition Field Value Type Description DifficultyBasedObject.Condition destroyTarget Declaration public bool destroyTarget Field Value Type Description Boolean evaluateOnAwake Declaration public bool evaluateOnAwake Field Value Type Description Boolean evaluateOnDifficultyChange Declaration public bool evaluateOnDifficultyChange Field Value Type Description Boolean level Declaration public DifficultyLevel level Field Value Type Description DifficultyLevel targetObjects Declaration public Transform[] targetObjects Field Value Type Description Transform [] targetSelf Declaration public bool targetSelf Field Value Type Description Boolean Methods Evaluate() Declaration public void Evaluate()"
  },
  "api/D3T.DifficultySystem.DifficultyBasedFloat.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedFloat.html",
    "title": "Class DifficultyBasedFloat | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedFloat Inheritance Object DifficultyBasedValue < Single > DifficultyBasedFloat Inherited Members DifficultyBasedValue<Single>.easy DifficultyBasedValue<Single>.medium DifficultyBasedValue<Single>.hard DifficultyBasedValue<Single>.extreme DifficultyBasedValue<Single>.Item[Int32] DifficultyBasedValue<Single>.Current Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DifficultyBasedFloat : DifficultyBasedValue<float> Constructors DifficultyBasedFloat(Single) Declaration public DifficultyBasedFloat(float defaultValue) Parameters Type Name Description Single defaultValue"
  },
  "api/D3T.html": {
    "href": "api/D3T.html",
    "title": "Namespace D3T | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T Classes HumanoidNPC A basic animated human NPC. Enums HumanoidNPC.BehaviourType"
  },
  "api/D3T.Triggers.Zones.MusicZone.html": {
    "href": "api/D3T.Triggers.Zones.MusicZone.html",
    "title": "Class MusicZone | D3T - Action Core | 1.0.2",
    "keywords": "Class MusicZone Plays music while the player enters/stays inside the zone. Inheritance Object Zone MusicZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.DefaultGizmoColor Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnStart() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MusicZone : Zone, ISerializable Fields applyFading Declaration public bool applyFading Field Value Type Description Boolean clip Declaration public AudioClipSettings clip Field Value Type Description AudioClipSettings delay Declaration public float delay Field Value Type Description Single onlyOnce Declaration public bool onlyOnce Field Value Type Description Boolean stopOnExit Declaration public bool stopOnExit Field Value Type Description Boolean Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform) Play() Declaration public void Play()"
  },
  "api/D3T.Triggers.Zones.MultiSignalZone.html": {
    "href": "api/D3T.Triggers.Zones.MultiSignalZone.html",
    "title": "Class MultiSignalZone | D3T - Action Core | 1.0.2",
    "keywords": "Class MultiSignalZone Sends multiple signals when the player enters or leaves the zone. Inheritance Object Zone MultiSignalZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.DefaultGizmoColor Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnStart() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MultiSignalZone : Zone, ISerializable Fields once Declaration public bool once Field Value Type Description Boolean onEnter Declaration public bool onEnter Field Value Type Description Boolean signals Declaration public MultiSignalZone.SignalSettings[] signals Field Value Type Description MultiSignalZone.SignalSettings [] Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform)"
  },
  "api/D3T.Triggers.Zones.ActivationZone.html": {
    "href": "api/D3T.Triggers.Zones.ActivationZone.html",
    "title": "Class ActivationZone | D3T - Action Core | 1.0.2",
    "keywords": "Class ActivationZone Activates or deactivates the target objects. Inheritance Object Zone ActivationZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.DefaultGizmoColor Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnStart() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ActivationZone : Zone, ISerializable Fields delay Declaration public float delay Field Value Type Description Single objects Declaration public Transform[] objects Field Value Type Description Transform [] once Declaration public bool once Field Value Type Description Boolean onEnter Declaration public ActivationZone.Action onEnter Field Value Type Description ActivationZone.Action onExit Declaration public ActivationZone.Action onExit Field Value Type Description ActivationZone.Action Properties ZoneDebugName Declaration protected override string ZoneDebugName { get; } Property Value Type Description String Overrides Zone.ZoneDebugName Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform)"
  },
  "api/D3T.Interaction.InventoryItemDefinitions.html": {
    "href": "api/D3T.Interaction.InventoryItemDefinitions.html",
    "title": "Class InventoryItemDefinitions | D3T - Action Core | 1.0.2",
    "keywords": "Class InventoryItemDefinitions Asset containing informations to define an item, such as names, icons and world object prefabs. Inheritance Object InventoryItemDefinitions Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class InventoryItemDefinitions : ScriptableObject Fields definitions Declaration public InventoryItemDefinitions.ItemDefinition[] definitions Field Value Type Description InventoryItemDefinitions.ItemDefinition [] fallbackIcon Declaration public Texture2D fallbackIcon Field Value Type Description Texture2D fallbackWorldObject Declaration public Texture2D fallbackWorldObject Field Value Type Description Texture2D Methods GetDefinition(String) Declaration public InventoryItemDefinitions.ItemDefinition GetDefinition(string id) Parameters Type Name Description String id Returns Type Description InventoryItemDefinitions.ItemDefinition"
  },
  "api/D3T.Interaction.IInteractive.html": {
    "href": "api/D3T.Interaction.IInteractive.html",
    "title": "Interface IInteractive | D3T - Action Core | 1.0.2",
    "keywords": "Interface IInteractive Interface for receiving player interaction callbacks. Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IInteractive Properties CanInteract Declaration bool CanInteract { get; } Property Value Type Description Boolean Methods Interact(Transform) Declaration bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean"
  },
  "api/D3T.Interaction.Door.html": {
    "href": "api/D3T.Interaction.Door.html",
    "title": "Class Door | D3T - Action Core | 1.0.2",
    "keywords": "Class Door A door component that can be opened/closed with player interactions or signals. Inheritance Object Door Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Door : MonoBehaviour, ISignalLink, IInteractive, ISerializable Fields anim Declaration protected Animator anim Field Value Type Description Animator animationSettings Declaration public Door.AnimationSettings animationSettings Field Value Type Description Door.AnimationSettings audioSource Declaration protected AudioSource audioSource Field Value Type Description AudioSource autoCloseTime Declaration public float autoCloseTime Field Value Type Description Single closeEvents Declaration public ActionEventSet closeEvents Field Value Type Description ActionEventSet closeSound Declaration public AudioClipSettings closeSound Field Value Type Description AudioClipSettings closeSoundOnEnd Declaration public bool closeSoundOnEnd Field Value Type Description Boolean locked Declaration public bool locked Field Value Type Description Boolean lockedString Declaration public string lockedString Field Value Type Description String openEvents Declaration public ActionEventSet openEvents Field Value Type Description ActionEventSet openSound Declaration public AudioClipSettings openSound Field Value Type Description AudioClipSettings openTime Declaration protected float openTime Field Value Type Description Single playerInteraction Declaration public Door.InteractionSettings playerInteraction Field Value Type Description Door.InteractionSettings startState Declaration public bool startState Field Value Type Description Boolean unlockSettings Declaration public Door.UnlockSettings unlockSettings Field Value Type Description Door.UnlockSettings Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean Implements IInteractive.CanInteract IsFullyClosed Declaration public bool IsFullyClosed { get; } Property Value Type Description Boolean IsMoving Declaration public bool IsMoving { get; } Property Value Type Description Boolean IsOpen Declaration public bool IsOpen { get; } Property Value Type Description Boolean SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Awake() Declaration protected virtual void Awake() Close() Declaration public void Close() Interact(Transform) Declaration public virtual bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean Implements IInteractive.Interact(Transform) Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data OnClose() Declaration protected virtual void OnClose() OnOpen() Declaration protected virtual void OnOpen() OnReceiveSignal(Boolean, Int32) Declaration public bool OnReceiveSignal(bool state, int channel) Parameters Type Name Description Boolean state Int32 channel Returns Type Description Boolean OnStart() Declaration protected virtual void OnStart() Open() Declaration public void Open() Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container"
  },
  "api/D3TEditor.Inspector.DifficultyBasedMaterialDrawer.html": {
    "href": "api/D3TEditor.Inspector.DifficultyBasedMaterialDrawer.html",
    "title": "Class DifficultyBasedMaterialDrawer | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedMaterialDrawer Inheritance Object DifficultyBasedValueDrawer < Material > DifficultyBasedMaterialDrawer Inherited Members DifficultyBasedValueDrawer<Material>.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedMaterialDrawer : DifficultyBasedValueDrawer<Material>"
  },
  "api/D3T.DifficultySystem.DifficultyBasedColor.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedColor.html",
    "title": "Class DifficultyBasedColor | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedColor Inheritance Object DifficultyBasedValue < Color > DifficultyBasedColor Inherited Members DifficultyBasedValue<Color>.easy DifficultyBasedValue<Color>.medium DifficultyBasedValue<Color>.hard DifficultyBasedValue<Color>.extreme DifficultyBasedValue<Color>.Item[Int32] DifficultyBasedValue<Color>.Current Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DifficultyBasedColor : DifficultyBasedValue<Color> Constructors DifficultyBasedColor(Color) Declaration public DifficultyBasedColor(Color defaultValue) Parameters Type Name Description Color defaultValue"
  },
  "api/D3T.DevTools.ActionCoreCommands.html": {
    "href": "api/D3T.DevTools.ActionCoreCommands.html",
    "title": "Class ActionCoreCommands | D3T - Action Core | 1.0.2",
    "keywords": "Class ActionCoreCommands Inheritance Object ActionCoreCommands Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ActionCoreCommands Methods GiveItem(String[]) Declaration public static bool GiveItem(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetDifficulty(String[]) Declaration public static bool SetDifficulty(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ToggleZoneVis(String[]) Declaration public static bool ToggleZoneVis(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean"
  },
  "api/D3T.Animation.Characters.CharacterIKController.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.html",
    "title": "Class CharacterIKController | D3T - Action Core | 1.0.2",
    "keywords": "Class CharacterIKController The CharacterIKController is used to control a humanoid character's IK and hand pose settings. Inheritance Object CharacterIKController Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CharacterIKController : MonoBehaviour Fields airborneParameterName Declaration public string airborneParameterName Field Value Type Description String animator Declaration public Animator animator Field Value Type Description Animator crouchAnimatorLayerName Declaration public string crouchAnimatorLayerName Field Value Type Description String customMotionIdleStateName Declaration public const string customMotionIdleStateName = \"Custom Idle\" Field Value Type Description String customMotionLayerName Declaration public string customMotionLayerName Field Value Type Description String customMotionStateName Declaration public const string customMotionStateName = \"Custom Motion\" Field Value Type Description String footIK Declaration public CharacterIKController.FootIKPass footIK Field Value Type Description CharacterIKController.FootIKPass getRagdollRigidbodies Declaration public bool getRagdollRigidbodies Field Value Type Description Boolean handIK Declaration public CharacterIKController.HandIKPass handIK Field Value Type Description CharacterIKController.HandIKPass headLookIK Declaration public CharacterIKController.HeadLookIKPass headLookIK Field Value Type Description CharacterIKController.HeadLookIKPass hipsTransform Declaration public Transform hipsTransform Field Value Type Description Transform inputAirborneState Declaration public bool inputAirborneState Field Value Type Description Boolean inputCrouchState Declaration public float inputCrouchState Field Value Type Description Single inputCustomMotionNoTransition Declaration public bool inputCustomMotionNoTransition Field Value Type Description Boolean inputCustomMotionSpeed Declaration public float inputCustomMotionSpeed Field Value Type Description Single inputCustomMotionState Declaration public bool inputCustomMotionState Field Value Type Description Boolean inputCustomMotionWeight Declaration public float inputCustomMotionWeight Field Value Type Description Single inputIKData Declaration public IKData inputIKData Field Value Type Description IKData inputLocalVelocityMagnitude Declaration public float inputLocalVelocityMagnitude Field Value Type Description Single inputRawLocalMovementDirection Declaration public Vector2 inputRawLocalMovementDirection Field Value Type Description Vector2 inputRawRunningState Declaration public float inputRawRunningState Field Value Type Description Single leftHandPoseLayerName Declaration public string leftHandPoseLayerName Field Value Type Description String movementDirectionParameterNames Declaration public string movementDirectionParameterNames Field Value Type Description String movementDirectionSmoothing Declaration public float movementDirectionSmoothing Field Value Type Description Single ragdollVelocityMultiplier Declaration public float ragdollVelocityMultiplier Field Value Type Description Single rightHandPoseLayerName Declaration public string rightHandPoseLayerName Field Value Type Description String runningStateParameterName Declaration public string runningStateParameterName Field Value Type Description String runningStateSmoothing Declaration public float runningStateSmoothing Field Value Type Description Single setHandPose Declaration public bool setHandPose Field Value Type Description Boolean speedParameterName Declaration public string speedParameterName Field Value Type Description String syncCameraIK Declaration public CharacterIKController.SyncCameraIKPass syncCameraIK Field Value Type Description CharacterIKController.SyncCameraIKPass torsoTwistIK Declaration public CharacterIKController.TorsoTwistIKPass torsoTwistIK Field Value Type Description CharacterIKController.TorsoTwistIKPass Methods ClearCustomAnimatorOverrides() Clears all custom animation clips set with SetCustomAnimationOverrides and sets the custom layer weight to 0. Declaration public void ClearCustomAnimatorOverrides() EnableRagdoll(Boolean) Declaration public void EnableRagdoll(bool enable) Parameters Type Name Description Boolean enable LoadRagdollState(DataContainer) Loads all rigidbody states from the given DataContainer. Declaration public void LoadRagdollState(DataContainer root) Parameters Type Name Description DataContainer root SaveRagdollState(DataContainer) Saves the current state from each rigidbody in this character as a separate DataContainer. Declaration public void SaveRagdollState(DataContainer root) Parameters Type Name Description DataContainer root SetCustomAnimationOverrides(AnimationClip, AnimationClip) Applies the given custom animation clips to the animator's override layer. Use inputCustomMotionWeight to set the weight of the custom layer. Declaration public void SetCustomAnimationOverrides(AnimationClip state, AnimationClip idle) Parameters Type Name Description AnimationClip state The 'true' state motion that is played when inputCustomMotionState is set to true. AnimationClip idle The 'idle' state motion that is played when inputCustomMotionState is set to false. Events FootStepped Declaration public event Action<Collider, Vector3> FootStepped Event Type Type Description Action < Collider , Vector3 > HandsIKSet Declaration public event Action HandsIKSet Event Type Type Description Action HeadIKSet Declaration public event Action HeadIKSet Event Type Type Description Action SyncCamera Declaration public event Action SyncCamera Event Type Type Description Action"
  },
  "api/D3T.Animation.Characters.CharacterIKController.LookAtWeights.html": {
    "href": "api/D3T.Animation.Characters.CharacterIKController.LookAtWeights.html",
    "title": "Struct CharacterIKController.LookAtWeights | D3T - Action Core | 1.0.2",
    "keywords": "Struct CharacterIKController.LookAtWeights Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct LookAtWeights Fields bodyWeight Declaration public float bodyWeight Field Value Type Description Single clampWeight Declaration public float clampWeight Field Value Type Description Single eyesWeight Declaration public float eyesWeight Field Value Type Description Single headWeight Declaration public float headWeight Field Value Type Description Single totalWeight Declaration public float totalWeight Field Value Type Description Single"
  },
  "api/D3T.Interaction.Inventory.PersistentInventorySettings.html": {
    "href": "api/D3T.Interaction.Inventory.PersistentInventorySettings.html",
    "title": "Class Inventory.PersistentInventorySettings | D3T - Action Core | 1.0.2",
    "keywords": "Class Inventory.PersistentInventorySettings Inheritance Object Inventory.PersistentInventorySettings Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class PersistentInventorySettings : ToggleableFeature Constructors PersistentInventorySettings(Boolean) Declaration public PersistentInventorySettings(bool enabled) Parameters Type Name Description Boolean enabled Fields persistentInventoryID Declaration public string persistentInventoryID Field Value Type Description String Methods CheckPersistence() Declaration public bool CheckPersistence() Returns Type Description Boolean"
  },
  "api/D3T.Interaction.Door.FallbackAnimation.html": {
    "href": "api/D3T.Interaction.Door.FallbackAnimation.html",
    "title": "Class Door.FallbackAnimation | D3T - Action Core | 1.0.2",
    "keywords": "Class Door.FallbackAnimation Inheritance Object Door.FallbackAnimation Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class FallbackAnimation Fields animationCurve Declaration public AnimationCurve animationCurve Field Value Type Description AnimationCurve doorTransform Declaration public Transform doorTransform Field Value Type Description Transform duration Declaration public float duration Field Value Type Description Single openAngle Declaration public float openAngle Field Value Type Description Single"
  },
  "api/D3T.Interaction.Door.AnimationSettings.html": {
    "href": "api/D3T.Interaction.Door.AnimationSettings.html",
    "title": "Class Door.AnimationSettings | D3T - Action Core | 1.0.2",
    "keywords": "Class Door.AnimationSettings Inheritance Object Door.AnimationSettings Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class AnimationSettings Fields animationSpeedScale Declaration public float animationSpeedScale Field Value Type Description Single closeAnimName Declaration public string closeAnimName Field Value Type Description String crossFadeLength Declaration public NullableFloat crossFadeLength Field Value Type Description NullableFloat fallbackAnimation Declaration public Door.FallbackAnimation fallbackAnimation Field Value Type Description Door.FallbackAnimation openAnimName Declaration public string openAnimName Field Value Type Description String"
  },
  "api/D3T.HumanoidNPC.BehaviourType.html": {
    "href": "api/D3T.HumanoidNPC.BehaviourType.html",
    "title": "Enum HumanoidNPC.BehaviourType | D3T - Action Core | 1.0.2",
    "keywords": "Enum HumanoidNPC.BehaviourType Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum BehaviourType Fields Name Description FollowTarget PickRandomWaypoint"
  },
  "api/D3T.Triggers.Zones.SaveZone.html": {
    "href": "api/D3T.Triggers.Zones.SaveZone.html",
    "title": "Class SaveZone | D3T - Action Core | 1.0.2",
    "keywords": "Class SaveZone Triggers savegame serialization when the player enters the zone. Inheritance Object Zone SaveZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnStart() Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SaveZone : Zone, ISerializable Fields onExit Declaration public bool onExit Field Value Type Description Boolean saveOnce Declaration public bool saveOnce Field Value Type Description Boolean savePointDescription Declaration public string savePointDescription Field Value Type Description String Properties DefaultGizmoColor Declaration protected override Color DefaultGizmoColor { get; } Property Value Type Description Color Overrides Zone.DefaultGizmoColor Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform) OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneExit(Transform)"
  },
  "api/D3T.Triggers.Zones.DamageZone.html": {
    "href": "api/D3T.Triggers.Zones.DamageZone.html",
    "title": "Class DamageZone | D3T - Action Core | 1.0.2",
    "keywords": "Class DamageZone Applies damage to entities entering the zone. Inheritance Object Zone DamageZone Inherited Members Zone.VisibleInGameView Zone.ZoneDebugMode Zone.ZoneDebugName Zone.gizmosVisible Zone.useGizmoColorOverride Zone.gizmoColorOverride Zone.GizmoColor Zone.gizmosDrawNotSelected Zone.SerializationEnabled Zone.Start() Zone.OnZoneExit(Transform) Zone.OnZoneEnterNonPlayer(Collider) Zone.OnZoneExitNonPlayer(Collider) Zone.OnUpdate() Zone.OnDrawGizmos() Zone.OnDrawGizmosSelected() Zone.Save(DataContainer) Zone.Load(DataContainer) Zone.ToggleZoneVisibility(Boolean) Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DamageZone : Zone, ISerializable Fields damage Declaration public int damage Field Value Type Description Int32 Properties DefaultGizmoColor Declaration protected override Color DefaultGizmoColor { get; } Property Value Type Description Color Overrides Zone.DefaultGizmoColor Methods OnStart() Declaration protected override void OnStart() Overrides Zone.OnStart() OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player Overrides Zone.OnZoneEnter(Transform)"
  },
  "api/D3T.Triggers.Zones.ControlDoors.html": {
    "href": "api/D3T.Triggers.Zones.ControlDoors.html",
    "title": "Class ControlDoors | D3T - Action Core | 1.0.2",
    "keywords": "Class ControlDoors Controls the open/closed and locked state of multiple doors in the level. Inheritance Object ControlDoors Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ControlDoors : TriggerAction Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state"
  },
  "api/D3T.Triggers.ModifyInventory.TargetInventory.html": {
    "href": "api/D3T.Triggers.ModifyInventory.TargetInventory.html",
    "title": "Enum ModifyInventory.TargetInventory | D3T - Action Core | 1.0.2",
    "keywords": "Enum ModifyInventory.TargetInventory Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum TargetInventory Fields Name Description PlayerInventory SpecificInventory"
  },
  "api/D3T.DifficultySystem.DifficultyLevel.html": {
    "href": "api/D3T.DifficultySystem.DifficultyLevel.html",
    "title": "Enum DifficultyLevel | D3T - Action Core | 1.0.2",
    "keywords": "Enum DifficultyLevel Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum DifficultyLevel Fields Name Description Easy Extreme Hard Medium Undefined"
  },
  "api/D3T.DifficultySystem.DifficultyBasedMaterial.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedMaterial.html",
    "title": "Class DifficultyBasedMaterial | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedMaterial Inheritance Object DifficultyBasedValue < Material > DifficultyBasedMaterial Inherited Members DifficultyBasedValue<Material>.easy DifficultyBasedValue<Material>.medium DifficultyBasedValue<Material>.hard DifficultyBasedValue<Material>.extreme DifficultyBasedValue<Material>.Item[Int32] DifficultyBasedValue<Material>.Current Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DifficultyBasedMaterial : DifficultyBasedValue<Material> Constructors DifficultyBasedMaterial(Material) Declaration public DifficultyBasedMaterial(Material defaultValue) Parameters Type Name Description Material defaultValue"
  },
  "api/D3TEditor.Inspector.DifficultyBasedFloatDrawer.html": {
    "href": "api/D3TEditor.Inspector.DifficultyBasedFloatDrawer.html",
    "title": "Class DifficultyBasedFloatDrawer | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedFloatDrawer Inheritance Object DifficultyBasedValueDrawer < Single > DifficultyBasedFloatDrawer Inherited Members DifficultyBasedValueDrawer<Single>.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedFloatDrawer : DifficultyBasedValueDrawer<float>"
  },
  "api/D3TEditor.Inspector.DifficultyBasedColorDrawer.html": {
    "href": "api/D3TEditor.Inspector.DifficultyBasedColorDrawer.html",
    "title": "Class DifficultyBasedColorDrawer | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedColorDrawer Inheritance Object DifficultyBasedValueDrawer < Color > DifficultyBasedColorDrawer Inherited Members DifficultyBasedValueDrawer<Color>.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedColorDrawer : DifficultyBasedValueDrawer<Color>"
  },
  "api/D3T.Interaction.AbstractCollectibleItem.html": {
    "href": "api/D3T.Interaction.AbstractCollectibleItem.html",
    "title": "Class AbstractCollectibleItem | D3T - Action Core | 1.0.2",
    "keywords": "Class AbstractCollectibleItem Base class for a collectible item. Inheritance Object AbstractCollectibleItem CollectibleInventory CollectibleItem Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class AbstractCollectibleItem : SerializablePrefabInstance, IInteractive Fields pickupEvent Declaration public ActionEventSet pickupEvent Field Value Type Description ActionEventSet pickupSound Declaration public AudioClipSettings pickupSound Field Value Type Description AudioClipSettings pickupText Declaration public string pickupText Field Value Type Description String Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean Implements IInteractive.CanInteract Methods Interact(Transform) Declaration public bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean Implements IInteractive.Interact(Transform) OnInteracted(Transform) Declaration protected virtual void OnInteracted(Transform player) Parameters Type Name Description Transform player Transfer(Inventory, out Boolean) Declaration protected abstract bool Transfer(Inventory targetInventory, out bool fullyTransferred) Parameters Type Name Description Inventory targetInventory Boolean fullyTransferred Returns Type Description Boolean"
  },
  "api/D3T.HumanoidNPC.html": {
    "href": "api/D3T.HumanoidNPC.html",
    "title": "Class HumanoidNPC | D3T - Action Core | 1.0.2",
    "keywords": "Class HumanoidNPC A basic animated human NPC. Inheritance Object HumanoidNPC Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class HumanoidNPC : MonoBehaviour, IDamageable, ISerializable Fields autoPickWaypointsTag Declaration public string autoPickWaypointsTag Field Value Type Description String behaviourType Declaration public HumanoidNPC.BehaviourType behaviourType Field Value Type Description HumanoidNPC.BehaviourType currentTarget Declaration public Transform currentTarget Field Value Type Description Transform hitPoints Declaration public float hitPoints Field Value Type Description Single playerLookAtDistance Declaration public float playerLookAtDistance Field Value Type Description Single rotationSmoothing Declaration public float rotationSmoothing Field Value Type Description Single runningStateCurve Declaration public AnimationCurve runningStateCurve Field Value Type Description AnimationCurve stoppingDistance Declaration public float stoppingDistance Field Value Type Description Single updateRate Declaration public float updateRate Field Value Type Description Single waypointList Declaration public List<Transform> waypointList Field Value Type Description List < Transform > Properties IsDead Declaration public bool IsDead { get; } Property Value Type Description Boolean SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Hit(Single, String) Declaration public void Hit(float damage, string damageType) Parameters Type Name Description Single damage String damageType Load(DataContainer) Declaration public void Load(DataContainer container) Parameters Type Name Description DataContainer container Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container"
  },
  "api/D3T.DifficultySystem.DifficultyBasedInt.html": {
    "href": "api/D3T.DifficultySystem.DifficultyBasedInt.html",
    "title": "Class DifficultyBasedInt | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedInt Inheritance Object DifficultyBasedValue < Int32 > DifficultyBasedInt Inherited Members DifficultyBasedValue<Int32>.easy DifficultyBasedValue<Int32>.medium DifficultyBasedValue<Int32>.hard DifficultyBasedValue<Int32>.extreme DifficultyBasedValue<Int32>.Item[Int32] DifficultyBasedValue<Int32>.Current Namespace : D3T.DifficultySystem <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DifficultyBasedInt : DifficultyBasedValue<int> Constructors DifficultyBasedInt(Int32) Declaration public DifficultyBasedInt(int defaultValue) Parameters Type Name Description Int32 defaultValue"
  },
  "api/D3T.Animation.Characters.html": {
    "href": "api/D3T.Animation.Characters.html",
    "title": "Namespace D3T.Animation.Characters | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.Animation.Characters Classes CharacterIKController The CharacterIKController is used to control a humanoid character's IK and hand pose settings. CharacterIKController.FootIK CharacterIKController.FootIKPass CharacterIKController.HandIKPass CharacterIKController.HeadLookIKPass CharacterIKController.IKPass CharacterIKController.SyncCameraIKPass CharacterIKController.TorsoTwistIKPass IKTargets Structs BodyPartIK Target, hint and weight settings for humanoid limbs. CharacterIKController.LookAtWeights HandPoseSettings Settings for defining the pose of a hand. IKData Settings for defining Hand IKs, hand poses and torso twisting. Interfaces IIKSource Interface for defining an IK source."
  },
  "api/D3T.Animation.Characters.IIKSource.html": {
    "href": "api/D3T.Animation.Characters.IIKSource.html",
    "title": "Interface IIKSource | D3T - Action Core | 1.0.2",
    "keywords": "Interface IIKSource Interface for defining an IK source. Namespace : D3T.Animation.Characters <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IIKSource Methods GetIKData() Declaration IKData GetIKData() Returns Type Description IKData"
  },
  "api/D3TEditor.Inspector.DifficultyBasedIntDrawer.html": {
    "href": "api/D3TEditor.Inspector.DifficultyBasedIntDrawer.html",
    "title": "Class DifficultyBasedIntDrawer | D3T - Action Core | 1.0.2",
    "keywords": "Class DifficultyBasedIntDrawer Inheritance Object DifficultyBasedValueDrawer < Int32 > DifficultyBasedIntDrawer Inherited Members DifficultyBasedValueDrawer<Int32>.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DifficultyBasedIntDrawer : DifficultyBasedValueDrawer<int>"
  },
  "api/D3T.Triggers.Zones.Zone.html": {
    "href": "api/D3T.Triggers.Zones.Zone.html",
    "title": "Class Zone | D3T - Action Core | 1.0.2",
    "keywords": "Class Zone Base class to derive Zone components from. Inheritance Object Zone FogZone ActivationZone DamageZone DeathZone MultiSignalZone MusicZone SaveZone SignalZone SoundPlayerZone TriggerControllerZone Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Zone : MonoBehaviour, ISerializable Fields gizmoColorOverride Declaration public Color gizmoColorOverride Field Value Type Description Color gizmosDrawNotSelected Declaration public bool gizmosDrawNotSelected Field Value Type Description Boolean gizmosVisible Declaration public bool gizmosVisible Field Value Type Description Boolean useGizmoColorOverride Declaration public bool useGizmoColorOverride Field Value Type Description Boolean Properties DefaultGizmoColor Declaration protected virtual Color DefaultGizmoColor { get; } Property Value Type Description Color GizmoColor Declaration protected Color GizmoColor { get; } Property Value Type Description Color SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean VisibleInGameView Declaration public static bool VisibleInGameView { get; } Property Value Type Description Boolean ZoneDebugMode Declaration public static bool ZoneDebugMode { get; set; } Property Value Type Description Boolean ZoneDebugName Declaration protected virtual string ZoneDebugName { get; } Property Value Type Description String Methods Load(DataContainer) Declaration public void Load(DataContainer content) Parameters Type Name Description DataContainer content OnDrawGizmos() Declaration protected virtual void OnDrawGizmos() OnDrawGizmosSelected() Declaration protected virtual void OnDrawGizmosSelected() OnStart() Declaration protected virtual void OnStart() OnUpdate() Declaration protected virtual void OnUpdate() OnZoneEnter(Transform) Declaration public virtual void OnZoneEnter(Transform player) Parameters Type Name Description Transform player OnZoneEnterNonPlayer(Collider) Declaration public virtual void OnZoneEnterNonPlayer(Collider c) Parameters Type Name Description Collider c OnZoneExit(Transform) Declaration public virtual void OnZoneExit(Transform player) Parameters Type Name Description Transform player OnZoneExitNonPlayer(Collider) Declaration public virtual void OnZoneExitNonPlayer(Collider c) Parameters Type Name Description Collider c Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Start() Declaration protected void Start() ToggleZoneVisibility(Boolean) Declaration public static void ToggleZoneVisibility(bool visibility) Parameters Type Name Description Boolean visibility"
  },
  "api/D3T.Triggers.Zones.html": {
    "href": "api/D3T.Triggers.Zones.html",
    "title": "Namespace D3T.Triggers.Zones | D3T - Action Core | 1.0.2",
    "keywords": "Namespace D3T.Triggers.Zones Classes ActivationZone Activates or deactivates the target objects. ControlDoors Controls the open/closed and locked state of multiple doors in the level. ControlDoors.DoorControlSetting DamageZone Applies damage to entities entering the zone. DeathZone Kills entities entering the zone. MultiSignalZone Sends multiple signals when the player enters or leaves the zone. MultiSignalZone.SignalSettings MusicZone Plays music while the player enters/stays inside the zone. SaveZone Triggers savegame serialization when the player enters the zone. SignalZone Sends a signal to a target when the player enters/leaves the zone. SoundPlayerZone Plays the attached AudioSource when the player enters the zone. TriggerControllerZone Triggers a Trigger Controller evaluation when the player enters/leaves the zone. Zone Base class to derive Zone components from. Enums ActivationZone.Action ControlDoors.DoorControlSetting.DoorAction"
  },
  "api/D3T.Triggers.Zones.MultiSignalZone.SignalSettings.html": {
    "href": "api/D3T.Triggers.Zones.MultiSignalZone.SignalSettings.html",
    "title": "Class MultiSignalZone.SignalSettings | D3T - Action Core | 1.0.2",
    "keywords": "Class MultiSignalZone.SignalSettings Inheritance Object MultiSignalZone.SignalSettings Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SignalSettings Fields delay Declaration public float delay Field Value Type Description Single extraData Declaration public int extraData Field Value Type Description Int32 state Declaration public bool state Field Value Type Description Boolean target Declaration public Transform target Field Value Type Description Transform"
  }
}