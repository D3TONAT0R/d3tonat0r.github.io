{
  "api/D3T.Serialization.DataDeserializer.html": {
    "href": "api/D3T.Serialization.DataDeserializer.html",
    "title": "Class DataDeserializer | D3T - Core | 0.9.34",
    "keywords": "Class DataDeserializer Inheritance Object DataDeserializer BinaryDeserializer XMLDeserializer Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class DataDeserializer Constructors DataDeserializer(Stream) Declaration public DataDeserializer(Stream stream) Parameters Type Name Description Stream stream Fields stream Declaration protected Stream stream Field Value Type Description Stream Methods CreateDeserializer(Stream) Determines the type of file based on the start of the stream and returns the corresponding deserializer. Declaration public static DataDeserializer CreateDeserializer(Stream stream) Parameters Type Name Description Stream stream Returns Type Description DataDeserializer Deserialize() Declaration public abstract DataContainer Deserialize() Returns Type Description DataContainer"
  },
  "api/D3T.NullableValueUtility.html": {
    "href": "api/D3T.NullableValueUtility.html",
    "title": "Class NullableValueUtility | D3T - Core | 0.9.34",
    "keywords": "Class NullableValueUtility Inheritance Object NullableValueUtility Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class NullableValueUtility Methods GetNullable<T>(INullableValue<T>) Declaration public static T? GetNullable<T>(INullableValue<T> nullable) where T : struct Parameters Type Name Description INullableValue <T> nullable Returns Type Description Nullable <T> Type Parameters Name Description T GetOrDefault<T>(INullableValue<T>, T) Declaration public static T GetOrDefault<T>(INullableValue<T> nullable, T defaultValue) where T : struct Parameters Type Name Description INullableValue <T> nullable T defaultValue Returns Type Description T Type Parameters Name Description T GetValue<T>(INullableValue<T>, T) Declaration public static T GetValue<T>(INullableValue<T> nullable, T actualValue) where T : struct Parameters Type Name Description INullableValue <T> nullable T actualValue Returns Type Description T Type Parameters Name Description T"
  },
  "api/D3T.NullableInt.html": {
    "href": "api/D3T.NullableInt.html",
    "title": "Struct NullableInt | D3T - Core | 0.9.34",
    "keywords": "Struct NullableInt Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct NullableInt : INullableValue<int> Constructors NullableInt(Boolean, Int32) Declaration public NullableInt(bool hasStartValue, int startValue) Parameters Type Name Description Boolean hasStartValue Int32 startValue NullableInt(Nullable<Int32>, Int32) Declaration public NullableInt(int? startValue, int defaultValue = 0) Parameters Type Name Description Nullable < Int32 > startValue Int32 defaultValue Fields backingValue Declaration public int backingValue Field Value Type Description Int32 Properties HasValue Declaration public bool HasValue { get; set; } Property Value Type Description Boolean Implements INullableValue<T>.HasValue Nullable Declaration public int? Nullable { get; } Property Value Type Description Nullable < Int32 > Implements INullableValue<T>.Nullable Value Declaration public int Value { get; set; } Property Value Type Description Int32 Implements INullableValue<T>.Value Methods GetOrDefault(Int32) Declaration public int GetOrDefault(int defaultValue) Parameters Type Name Description Int32 defaultValue Returns Type Description Int32 Implements INullableValue<T>.GetOrDefault(T) Operators Implicit(NullableInt to Boolean) Declaration public static implicit operator bool (NullableInt v) Parameters Type Name Description NullableInt v Returns Type Description Boolean Implicit(NullableInt to Nullable<Int32>) Declaration public static implicit operator int? (NullableInt v) Parameters Type Name Description NullableInt v Returns Type Description Nullable < Int32 >"
  },
  "api/D3T.DevTools.CmdArgs.html": {
    "href": "api/D3T.DevTools.CmdArgs.html",
    "title": "Class CmdArgs | D3T - Core | 0.9.34",
    "keywords": "Class CmdArgs Inheritance Object CmdArgs CmdArgs<T> CmdArgs<T0, T1> CmdArgs<T0, T1, T2> CmdArgs<T0, T1, T2, T3> Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class CmdArgs Constructors CmdArgs() Declaration protected CmdArgs() Methods Parse<T>(String) Declaration protected T Parse<T>(string s) Parameters Type Name Description String s Returns Type Description T Type Parameters Name Description T Parse<C>(String[], Int32, out C, Boolean) Declaration public static bool Parse<C>(string[] args, int argCount, out C parsed, bool printError) where C : CmdArgs, new() Parameters Type Name Description String [] args Int32 argCount C parsed Boolean printError Returns Type Description Boolean Type Parameters Name Description C ParseArgs(String[]) Declaration protected abstract void ParseArgs(string[] args) Parameters Type Name Description String [] args"
  },
  "api/D3T.DevTools.CmdArgs-4.html": {
    "href": "api/D3T.DevTools.CmdArgs-4.html",
    "title": "Class CmdArgs<T0, T1, T2, T3> | D3T - Core | 0.9.34",
    "keywords": "Class CmdArgs<T0, T1, T2, T3> Inheritance Object CmdArgs CmdArgs<T0, T1, T2, T3> Inherited Members CmdArgs.Parse<T>(String) CmdArgs.Parse<C>(String[], Int32, C, Boolean) Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CmdArgs<T0, T1, T2, T3> : CmdArgs Type Parameters Name Description T0 T1 T2 T3 Fields arg0 Declaration public T0 arg0 Field Value Type Description T0 arg1 Declaration public T1 arg1 Field Value Type Description T1 arg2 Declaration public T2 arg2 Field Value Type Description T2 arg3 Declaration public T3 arg3 Field Value Type Description T3 Methods ParseArgs(String[]) Declaration protected override void ParseArgs(string[] args) Parameters Type Name Description String [] args Overrides CmdArgs.ParseArgs(String[])"
  },
  "api/D3T.CurveRemappedVCComponent.html": {
    "href": "api/D3T.CurveRemappedVCComponent.html",
    "title": "Class CurveRemappedVCComponent | D3T - Core | 0.9.34",
    "keywords": "Class CurveRemappedVCComponent Base class for controlling arbitrary components with the provided value with curve remapping applied. Inheritance Object VCComponent CurveRemappedVCComponent AudioSourceIntensityController Inherited Members VCComponent.ControlValue VCComponent.Update() VCComponent.OnUpdate() VCComponent.SetControlValue(Single) Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class CurveRemappedVCComponent : VCComponent Fields remapCurve Declaration public AnimationCurve remapCurve Field Value Type Description AnimationCurve Methods RemapValue(Single) Declaration protected override float RemapValue(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides VCComponent.RemapValue(Single)"
  },
  "api/D3T.CoroutineRunner.html": {
    "href": "api/D3T.CoroutineRunner.html",
    "title": "Class CoroutineRunner | D3T - Core | 0.9.34",
    "keywords": "Class CoroutineRunner Allows for running coroutines that are independent from other scene objects. Inheritance Object CoroutineRunner Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CoroutineRunner Methods InvokeDelayed(Action, MonoBehaviour, Single) Declaration public static Coroutine InvokeDelayed(Action action, MonoBehaviour owner, float delay) Parameters Type Name Description Action action MonoBehaviour owner Single delay Returns Type Description Coroutine InvokeDelayed(Action, Single) Declaration public static Coroutine InvokeDelayed(Action action, float delay) Parameters Type Name Description Action action Single delay Returns Type Description Coroutine Run(IEnumerator, MonoBehaviour, Single) Declaration public static Coroutine Run(IEnumerator routine, MonoBehaviour owner, float delay = 0F) Parameters Type Name Description IEnumerator routine MonoBehaviour owner Single delay Returns Type Description Coroutine Run(IEnumerator, Single) Declaration public static Coroutine Run(IEnumerator routine, float delay = 0F) Parameters Type Name Description IEnumerator routine Single delay Returns Type Description Coroutine Stop(Coroutine) Declaration public static void Stop(Coroutine coroutine) Parameters Type Name Description Coroutine coroutine Stop(Coroutine, MonoBehaviour) Declaration public static void Stop(Coroutine coroutine, MonoBehaviour owner) Parameters Type Name Description Coroutine coroutine MonoBehaviour owner"
  },
  "api/D3T.Cameras.ICameraShakeSource.html": {
    "href": "api/D3T.Cameras.ICameraShakeSource.html",
    "title": "Interface ICameraShakeSource | D3T - Core | 0.9.34",
    "keywords": "Interface ICameraShakeSource Interface for adding camera shake sources to the scene. Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ICameraShakeSource Methods GetShakeAmount(Vector3) Declaration float GetShakeAmount(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Single"
  },
  "api/D3T.Cameras.FreeLookCamera.html": {
    "href": "api/D3T.Cameras.FreeLookCamera.html",
    "title": "Class FreeLookCamera | D3T - Core | 0.9.34",
    "keywords": "Class FreeLookCamera A simple smooth free look camera Inheritance Object FreeLookCamera Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FreeLookCamera : MonoBehaviour, ISerializable Fields enableToolbox Declaration public bool enableToolbox Field Value Type Description Boolean fieldOfViewLimits Declaration public Vector2 fieldOfViewLimits Field Value Type Description Vector2 freeRotationAxis Declaration public bool freeRotationAxis Field Value Type Description Boolean lookSensitivity Declaration public NullableFloat lookSensitivity Field Value Type Description NullableFloat lookSmoothing Declaration public NullableFloat lookSmoothing Field Value Type Description NullableFloat mouseWheelZoomStep Declaration public NullableFloat mouseWheelZoomStep Field Value Type Description NullableFloat movementSmoothing Declaration public NullableFloat movementSmoothing Field Value Type Description NullableFloat movementVelocity Declaration public NullableFloat movementVelocity Field Value Type Description NullableFloat pgUpDownZoomSpeed Declaration public NullableFloat pgUpDownZoomSpeed Field Value Type Description NullableFloat rollLock Declaration public bool rollLock Field Value Type Description Boolean slowDownMultiplier Declaration public NullableFloat slowDownMultiplier Field Value Type Description NullableFloat speedUpMultiplier Declaration public NullableFloat speedUpMultiplier Field Value Type Description NullableFloat useDefaultGUIFont Declaration public bool useDefaultGUIFont Field Value Type Description Boolean useUnscaledDeltaTime Declaration public bool useUnscaledDeltaTime Field Value Type Description Boolean verticalLock Declaration public bool verticalLock Field Value Type Description Boolean worldAxis Declaration public bool worldAxis Field Value Type Description Boolean zoomSmoothing Declaration public NullableFloat zoomSmoothing Field Value Type Description NullableFloat zoomSpeed Declaration public NullableFloat zoomSpeed Field Value Type Description NullableFloat Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.Cameras.EventCamera.html": {
    "href": "api/D3T.Cameras.EventCamera.html",
    "title": "Class EventCamera | D3T - Core | 0.9.34",
    "keywords": "Class EventCamera A simple IEventCamera implementation that automatically plays the specified Animator state, then cuts back to the MainCamera. Inheritance Object EventCamera Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EventCamera : MonoBehaviour, IEventCamera Fields stateName Declaration public string stateName Field Value Type Description String Methods OnCameraChanged() Declaration public void OnCameraChanged() Implements IEventCamera.OnCameraChanged()"
  },
  "api/D3T.Cameras.CameraShakeSource.html": {
    "href": "api/D3T.Cameras.CameraShakeSource.html",
    "title": "Class CameraShakeSource | D3T - Core | 0.9.34",
    "keywords": "Class CameraShakeSource Adds a local or global camera shake source to the scene. Inheritance Object AbstractSource CameraShakeSource Inherited Members AbstractSource.type AbstractSource.pointMinDistance AbstractSource.pointMaxDistance AbstractSource.volumeBlendDistance AbstractSource.Awake() AbstractSource.GetSourceIntensity(Vector3) Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CameraShakeSource : AbstractSource, ICameraShakeSource Fields intensity Declaration public float intensity Field Value Type Description Single Properties GizmoColor Declaration protected override Color GizmoColor { get; } Property Value Type Description Color Overrides AbstractSource.GizmoColor Methods GetShakeAmount(Vector3) Declaration public float GetShakeAmount(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Single Implements ICameraShakeSource.GetShakeAmount(Vector3)"
  },
  "api/D3T.Cameras.CameraFollowZoom.html": {
    "href": "api/D3T.Cameras.CameraFollowZoom.html",
    "title": "Class CameraFollowZoom | D3T - Core | 0.9.34",
    "keywords": "Class CameraFollowZoom Automatically zooms the camera towards the target transform. Inheritance Object CameraFollowZoom Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CameraFollowZoom : MonoBehaviour Fields maxFOV Declaration public float maxFOV Field Value Type Description Single minFOV Declaration public float minFOV Field Value Type Description Single smoothness Declaration public float smoothness Field Value Type Description Single target Declaration public Transform target Field Value Type Description Transform targetSize Declaration public float targetSize Field Value Type Description Single"
  },
  "api/D3T.BodyPart.html": {
    "href": "api/D3T.BodyPart.html",
    "title": "Class BodyPart | D3T - Core | 0.9.34",
    "keywords": "Class BodyPart Forwards any damage applied to this body part to the parent object. Inheritance Object BodyPart Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BodyPart : MonoBehaviour, IDamageable Fields damageMultiplier Declaration public float damageMultiplier Field Value Type Description Single Methods Hit(Single, String) Declaration public void Hit(float damage, string damageType) Parameters Type Name Description Single damage String damageType Implements IDamageable.Hit(Single, String)"
  },
  "api/D3T.Audio.No3DAudioSettingsAttribute.html": {
    "href": "api/D3T.Audio.No3DAudioSettingsAttribute.html",
    "title": "Class No3DAudioSettingsAttribute | D3T - Core | 0.9.34",
    "keywords": "Class No3DAudioSettingsAttribute Add this attribute to a AudioClipSettings field to hide the clip's spatial and range properties. Inheritance Object No3DAudioSettingsAttribute Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Field)] public class No3DAudioSettingsAttribute : PropertyAttribute"
  },
  "api/D3TEditor.Inspector.ToggleableFeatureDrawer.html": {
    "href": "api/D3TEditor.Inspector.ToggleableFeatureDrawer.html",
    "title": "Class ToggleableFeatureDrawer | D3T - Core | 0.9.34",
    "keywords": "Class ToggleableFeatureDrawer Inheritance Object ToggleableFeatureDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ToggleableFeatureDrawer : PropertyDrawer Methods GetChildren(SerializedProperty) Declaration public static IEnumerable<SerializedProperty> GetChildren(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description IEnumerable < SerializedProperty > GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.Inspector.SingletonIDDrawer.html": {
    "href": "api/D3TEditor.Inspector.SingletonIDDrawer.html",
    "title": "Class SingletonIDDrawer | D3T - Core | 0.9.34",
    "keywords": "Class SingletonIDDrawer Inheritance Object SingletonIDDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SingletonIDDrawer : PropertyDrawer Fields supportedSingletons Declaration public static List<SupportsSingletonIDAttribute> supportedSingletons Field Value Type Description List < SupportsSingletonIDAttribute > Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.Inspector.SignalTargetAttributeDrawer.html": {
    "href": "api/D3TEditor.Inspector.SignalTargetAttributeDrawer.html",
    "title": "Class SignalTargetAttributeDrawer | D3T - Core | 0.9.34",
    "keywords": "Class SignalTargetAttributeDrawer Inheritance Object SignalTargetAttributeDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SignalTargetAttributeDrawer : PropertyDrawer Methods LoadResources() Declaration public static void LoadResources() OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.Inspector.SeparateBaseFromChildFieldEditor.html": {
    "href": "api/D3TEditor.Inspector.SeparateBaseFromChildFieldEditor.html",
    "title": "Class SeparateBaseFromChildFieldEditor | D3T - Core | 0.9.34",
    "keywords": "Class SeparateBaseFromChildFieldEditor Inheritance Object SeparateBaseFromChildFieldEditor TriggerActionEditor TriggerConditionEditor Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class SeparateBaseFromChildFieldEditor : Editor Properties BaseType Declaration protected abstract Type BaseType { get; } Property Value Type Description Type Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/D3T.Utility.ReflectionUtility.html": {
    "href": "api/D3T.Utility.ReflectionUtility.html",
    "title": "Class ReflectionUtility | D3T - Core | 0.9.34",
    "keywords": "Class ReflectionUtility Utility class for common reflection functions. Inheritance Object ReflectionUtility Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ReflectionUtility Methods GetClassesWithAttribute<T>(Boolean) Declaration public static List<T> GetClassesWithAttribute<T>(bool includeStructs = false) where T : Attribute Parameters Type Name Description Boolean includeStructs Returns Type Description List <T> Type Parameters Name Description T GetGameAssemblies() Declaration public static List<Assembly> GetGameAssemblies() Returns Type Description List < Assembly > GetMethodsWithAttribute<T>(Boolean, Boolean, Boolean) Returns all methods with attribute T. Declaration public static List<MethodInfo> GetMethodsWithAttribute<T>(bool staticMethods, bool includeNonPublic = true, bool includeStructs = true) where T : Attribute Parameters Type Name Description Boolean staticMethods true to list static methods, false to list instance methods. Boolean includeNonPublic Whether to include private/protected/internal methods in the returned list. Boolean includeStructs Returns Type Description List < MethodInfo > Type Parameters Name Description T The type of attribute to search for."
  },
  "api/D3T.Utility.PersistentFileManager.html": {
    "href": "api/D3T.Utility.PersistentFileManager.html",
    "title": "Class PersistentFileManager | D3T - Core | 0.9.34",
    "keywords": "Class PersistentFileManager Inheritance Object PersistentFileManager Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PersistentFileManager Properties DefaultFileLocation Declaration public static PersistentFileManager.FileLocation DefaultFileLocation { get; set; } Property Value Type Description PersistentFileManager.FileLocation DefaultRootPath Declaration public static string DefaultRootPath { get; } Property Value Type Description String Methods GetFullPath(PersistentFileManager.FileLocation, String) Declaration public static string GetFullPath(PersistentFileManager.FileLocation location, string relativePath) Parameters Type Name Description PersistentFileManager.FileLocation location String relativePath Returns Type Description String GetFullPath(String) Declaration public static string GetFullPath(string relativePath) Parameters Type Name Description String relativePath Returns Type Description String GetRootPathForLocation(PersistentFileManager.FileLocation) Declaration public static string GetRootPathForLocation(PersistentFileManager.FileLocation location) Parameters Type Name Description PersistentFileManager.FileLocation location Returns Type Description String"
  },
  "api/D3T.Utility.PersistentFileManager.FileLocation.html": {
    "href": "api/D3T.Utility.PersistentFileManager.FileLocation.html",
    "title": "Enum PersistentFileManager.FileLocation | D3T - Core | 0.9.34",
    "keywords": "Enum PersistentFileManager.FileLocation Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum FileLocation Fields Name Description DataPath The \"_Data\" folder next to the game's executable or the Assets folder in the editor. Documents The current user's documents folder defined by the operating system. DocumentsOrAssetsInEditor Same as Documents , but refers to the Assets folder when in the editor. PersistentDataPath Windows: Usually points to %userprofile%\\AppData\\LocalLow(companyname)(productname). Mac: Points to the user Library folder. (This folder is often hidden) PersistentDataPathOrAssetsInEditor Same as PersistentDataPath , but refers to the Assets folder when in the editor."
  },
  "api/D3T.Utility.MonoInstance.html": {
    "href": "api/D3T.Utility.MonoInstance.html",
    "title": "Class MonoInstance | D3T - Core | 0.9.34",
    "keywords": "Class MonoInstance An empty MonoBehaviour script. Inheritance Object MonoInstance Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MonoInstance : MonoBehaviour"
  },
  "api/D3T.Serialization.ISerializablePrefabInstantiator.html": {
    "href": "api/D3T.Serialization.ISerializablePrefabInstantiator.html",
    "title": "Interface ISerializablePrefabInstantiator | D3T - Core | 0.9.34",
    "keywords": "Interface ISerializablePrefabInstantiator Interface for allowing the script to re-instantiate saved prefabs when loading a saved game. Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ISerializablePrefabInstantiator Methods InstantiateSerializedObject(String, DataContainer) Declaration void InstantiateSerializedObject(string prefabName, DataContainer cont) Parameters Type Name Description String prefabName DataContainer cont"
  },
  "api/D3T.Serialization.ISerializable.html": {
    "href": "api/D3T.Serialization.ISerializable.html",
    "title": "Interface ISerializable | D3T - Core | 0.9.34",
    "keywords": "Interface ISerializable Interface used to enable savegame serialization on this component. Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ISerializable Properties SerializationEnabled Declaration bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Load(DataContainer) Declaration void Load(DataContainer container) Parameters Type Name Description DataContainer container Save(DataContainer) Declaration void Save(DataContainer container) Parameters Type Name Description DataContainer container"
  },
  "api/D3T.Serialization.DataSerializer.html": {
    "href": "api/D3T.Serialization.DataSerializer.html",
    "title": "Class DataSerializer | D3T - Core | 0.9.34",
    "keywords": "Class DataSerializer Inheritance Object DataSerializer BinarySerializer XMLSerializer Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class DataSerializer Fields supportedBaseTypes Declaration protected static readonly List<Type> supportedBaseTypes Field Value Type Description List < Type > Methods GetMarkerByType(Type) Declaration public static DataSerializer.DataMarker GetMarkerByType(Type t) Parameters Type Name Description Type t Returns Type Description DataSerializer.DataMarker GetTypeByMarker(DataSerializer.DataMarker) Declaration public static Type GetTypeByMarker(DataSerializer.DataMarker marker) Parameters Type Name Description DataSerializer.DataMarker marker Returns Type Description Type IsTypeSupported(Type) Declaration public static bool IsTypeSupported(Type t) Parameters Type Name Description Type t Returns Type Description Boolean Serialize(DataContainer, Stream) Declaration public abstract void Serialize(DataContainer root, Stream stream) Parameters Type Name Description DataContainer root Stream stream"
  },
  "api/D3T.Serialization.DataSerializer.DataSerializationMode.html": {
    "href": "api/D3T.Serialization.DataSerializer.DataSerializationMode.html",
    "title": "Enum DataSerializer.DataSerializationMode | D3T - Core | 0.9.34",
    "keywords": "Enum DataSerializer.DataSerializationMode Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum DataSerializationMode Fields Name Description Binary XML"
  },
  "api/D3T.NullableColor.html": {
    "href": "api/D3T.NullableColor.html",
    "title": "Struct NullableColor | D3T - Core | 0.9.34",
    "keywords": "Struct NullableColor Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct NullableColor : INullableValue<Color> Constructors NullableColor(Boolean, Color) Declaration public NullableColor(bool hasStartValue, Color startValue) Parameters Type Name Description Boolean hasStartValue Color startValue NullableColor(Nullable<Color>) Declaration public NullableColor(Color? startValue) Parameters Type Name Description Nullable < Color > startValue NullableColor(Nullable<Color>, Color) Declaration public NullableColor(Color? startValue, Color defaultValue) Parameters Type Name Description Nullable < Color > startValue Color defaultValue Fields backingValue Declaration public Color backingValue Field Value Type Description Color Properties HasValue Declaration public bool HasValue { get; set; } Property Value Type Description Boolean Implements INullableValue<T>.HasValue Nullable Declaration public Color? Nullable { get; } Property Value Type Description Nullable < Color > Implements INullableValue<T>.Nullable Value Declaration public Color Value { get; set; } Property Value Type Description Color Implements INullableValue<T>.Value Methods GetOrDefault(Color) Declaration public Color GetOrDefault(Color defaultValue) Parameters Type Name Description Color defaultValue Returns Type Description Color Implements INullableValue<T>.GetOrDefault(T) Operators Implicit(NullableColor to Boolean) Declaration public static implicit operator bool (NullableColor v) Parameters Type Name Description NullableColor v Returns Type Description Boolean Implicit(NullableColor to Nullable<Color>) Declaration public static implicit operator Color? (NullableColor v) Parameters Type Name Description NullableColor v Returns Type Description Nullable < Color >"
  },
  "api/D3T.MeshBuilder.html": {
    "href": "api/D3T.MeshBuilder.html",
    "title": "Class MeshBuilder | D3T - Core | 0.9.34",
    "keywords": "Class MeshBuilder Factory class for generating meshes from scratch. Inheritance Object MeshBuilder Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MeshBuilder Constructors MeshBuilder() Declaration public MeshBuilder() MeshBuilder(Int32) Declaration public MeshBuilder(int vertexCapacity) Parameters Type Name Description Int32 vertexCapacity Fields normals Declaration public List<Vector3> normals Field Value Type Description List < Vector3 > tris Declaration public List<int> tris Field Value Type Description List < Int32 > uv0 Declaration public List<Vector2> uv0 Field Value Type Description List < Vector2 > vertexColors Declaration public List<Color32> vertexColors Field Value Type Description List < Color32 > verts Declaration public List<Vector3> verts Field Value Type Description List < Vector3 > Methods AddCapsule(Matrix4x4, Single, Single, Int32, Int32) Adds a sphere to the mesh, transformed by the given matrix. Declaration public void AddCapsule(Matrix4x4 matrix, float radius, float height, int latDetail = 32, int lonDetail = 32) Parameters Type Name Description Matrix4x4 matrix Single radius Single height Int32 latDetail Int32 lonDetail AddCapsule(Vector3, MeshBuilder.Axis, Single, Single, Int32, Int32) Adds a capsule to the mesh. Declaration public void AddCapsule(Vector3 pos, MeshBuilder.Axis axis, float radius, float height, int latDetail = 32, int lonDetail = 32) Parameters Type Name Description Vector3 pos MeshBuilder.Axis axis Single radius Single height Int32 latDetail Int32 lonDetail AddCube(Vector3, Vector3) Adds a cube with the given center position and size to the mesh. Declaration public void AddCube(Vector3 pos, Vector3 size) Parameters Type Name Description Vector3 pos Vector3 size AddCubeFromTo(Vector3, Vector3) Adds a cube with the given lower and upper bound points to the mesh. Declaration public void AddCubeFromTo(Vector3 a, Vector3 b) Parameters Type Name Description Vector3 a Vector3 b AddMesh(Mesh) Adds another mesh to this mesh. Declaration public void AddMesh(Mesh otherMesh) Parameters Type Name Description Mesh otherMesh AddMesh(Mesh, Matrix4x4) Adds another mesh to this mesh, transformed by the given matrix. Declaration public void AddMesh(Mesh otherMesh, Matrix4x4 matrix) Parameters Type Name Description Mesh otherMesh Matrix4x4 matrix AddQuad(Vector3, Vector3, Vector3, Vector3, Vector3) Adds a rectangular face (made of two triangles) to the mesh, using default uv mappings. Declaration public void AddQuad(Vector3 ll, Vector3 lr, Vector3 ul, Vector3 ur, Vector3 normal) Parameters Type Name Description Vector3 ll Vector3 lr Vector3 ul Vector3 ur Vector3 normal AddQuad(Vector3, Vector3, Vector3, Vector3, Vector3, Vector2, Vector2, Vector2, Vector2) Adds a rectangular face (made of two triangles) to the mesh. Declaration public void AddQuad(Vector3 ll, Vector3 lr, Vector3 ul, Vector3 ur, Vector3 normal, Vector2 uv_ll, Vector2 uv_lr, Vector2 uv_ul, Vector2 uv_ur) Parameters Type Name Description Vector3 ll Vector3 lr Vector3 ul Vector3 ur Vector3 normal Vector2 uv_ll Vector2 uv_lr Vector2 uv_ul Vector2 uv_ur AddSphere(Vector3, Single, Int32, Int32) Adds a sphere to the mesh. Declaration public void AddSphere(Vector3 pos, float radius, int latDetail = 32, int lonDetail = 32) Parameters Type Name Description Vector3 pos Single radius Int32 latDetail Int32 lonDetail AddTriangle(Vector3, Vector3, Vector3, Vector3, Vector2, Vector2, Vector2) Adds a (flat shaded) triangle to the mesh. Vertices should be arranged clockwise for correct facing. Declaration public void AddTriangle(Vector3 a, Vector3 b, Vector3 c, Vector3 normal, Vector2 uv_a, Vector2 uv_b, Vector2 uv_c) Parameters Type Name Description Vector3 a Vector3 b Vector3 c Vector3 normal Vector2 uv_a Vector2 uv_b Vector2 uv_c BuildMesh(Mesh, Boolean) Declaration public void BuildMesh(Mesh mesh, bool recalculateTangents = true) Parameters Type Name Description Mesh mesh Boolean recalculateTangents Clear() Declaration public void Clear() CreateMesh() Declaration public Mesh CreateMesh() Returns Type Description Mesh"
  },
  "api/D3T.MeshBuilder.Axis.html": {
    "href": "api/D3T.MeshBuilder.Axis.html",
    "title": "Enum MeshBuilder.Axis | D3T - Core | 0.9.34",
    "keywords": "Enum MeshBuilder.Axis Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Axis Fields Name Description X Y Z"
  },
  "api/D3T.LevelManager.html": {
    "href": "api/D3T.LevelManager.html",
    "title": "Class LevelManager | D3T - Core | 0.9.34",
    "keywords": "Class LevelManager A wrapper for unity's SceneManager with additional callacks. Consider using these methods instead of unity's SceneManager. Inheritance Object LevelManager Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class LevelManager Methods Init() Declaration public static void Init() LoadLevel(String, LoadSceneMode) Declaration public static void LoadLevel(string levelName, LoadSceneMode mode = null) Parameters Type Name Description String levelName LoadSceneMode mode LoadSceneAsync(String) Declaration public static AsyncOperation LoadSceneAsync(string level) Parameters Type Name Description String level Returns Type Description AsyncOperation SetActiveScene(Scene) Declaration public static void SetActiveScene(Scene scene) Parameters Type Name Description Scene scene UnloadLevel(Scene) Declaration public static void UnloadLevel(Scene scene) Parameters Type Name Description Scene scene Events ActiveSceneChanged Declaration public static event UnityAction<Scene, Scene> ActiveSceneChanged Event Type Type Description UnityAction < Scene , Scene > SceneLoaded Declaration public static event UnityAction<Scene, LoadSceneMode> SceneLoaded Event Type Type Description UnityAction < Scene , LoadSceneMode > SceneUnloaded Declaration public static event UnityAction<Scene> SceneUnloaded Event Type Type Description UnityAction < Scene > SceneUnloading Declaration public static event UnityAction<Scene> SceneUnloading Event Type Type Description UnityAction < Scene >"
  },
  "api/D3T.Cameras.CameraShakeController.html": {
    "href": "api/D3T.Cameras.CameraShakeController.html",
    "title": "Class CameraShakeController | D3T - Core | 0.9.34",
    "keywords": "Class CameraShakeController Handles and calculates shaking amplitudes for cameras in the scene. Inheritance Object CameraShakeController Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CameraShakeController Methods GetIntensityAtPoint(Vector3) Returns the shaking amplitude at the given point in the scene. Declaration public static float GetIntensityAtPoint(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Single RegisterShakeSource(ICameraShakeSource) Adds the given source to the list of active sources. Declaration public static void RegisterShakeSource(ICameraShakeSource src) Parameters Type Name Description ICameraShakeSource src RemoveShakeSource(ICameraShakeSource) Removes the given source from the list of active sources. Declaration public static void RemoveShakeSource(ICameraShakeSource src) Parameters Type Name Description ICameraShakeSource src"
  },
  "api/D3T.Cameras.CameraPair.html": {
    "href": "api/D3T.Cameras.CameraPair.html",
    "title": "Class CameraPair | D3T - Core | 0.9.34",
    "keywords": "Class CameraPair Utility script for syncing a parent camera with one or more child (or overlay) cameras. Inheritance Object CameraPair Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CameraPair : MonoBehaviour Fields childCameras Declaration public CameraPair.ChildCamera[] childCameras Field Value Type Description CameraPair.ChildCamera [] Methods SyncUpdate(Boolean) Declaration public void SyncUpdate(bool forceUpdate) Parameters Type Name Description Boolean forceUpdate"
  },
  "api/D3T.AudioSourceIntensityController.html": {
    "href": "api/D3T.AudioSourceIntensityController.html",
    "title": "Class AudioSourceIntensityController | D3T - Core | 0.9.34",
    "keywords": "Class AudioSourceIntensityController Controls the attached AudioSource's volume/pitch using the provided value. Inheritance Object VCComponent CurveRemappedVCComponent AudioSourceIntensityController Inherited Members CurveRemappedVCComponent.remapCurve CurveRemappedVCComponent.RemapValue(Single) VCComponent.ControlValue VCComponent.Update() VCComponent.SetControlValue(Single) Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AudioSourceIntensityController : CurveRemappedVCComponent Fields controlPitch Declaration public bool controlPitch Field Value Type Description Boolean multiplyWithStartPitch Declaration public bool multiplyWithStartPitch Field Value Type Description Boolean multiplyWithStartVolume Declaration public bool multiplyWithStartVolume Field Value Type Description Boolean pitchCurve Declaration public AnimationCurve pitchCurve Field Value Type Description AnimationCurve volumeCurve Declaration public AnimationCurve volumeCurve Field Value Type Description AnimationCurve Methods OnUpdate() Declaration protected override void OnUpdate() Overrides VCComponent.OnUpdate()"
  },
  "api/D3T.Audio.html": {
    "href": "api/D3T.Audio.html",
    "title": "Namespace D3T.Audio | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Audio Classes AudioClipCollection A set of AudioClips with built-in ordered or randomized playing orders. AudioClipLibrary Storage object for AudioClips to allow them to be loaded by name. AudioClipSettingsOverride A collection of parameters for overriding or modifying the settings defined in an AudioClipSettings field. AudioLine Simulates a linear AudioSource by moving the attached AudioSource along the closest point to the listener on a line between two positions. AudioManager Manager class for audio volume control and playing sound effects. AudioRandomizer Plays the attached AudioSource in random intervals MusicPlayer Singleton component for playing music. MusicPlayer.Playlist No3DAudioSettingsAttribute Add this attribute to a AudioClipSettings field to hide the clip's spatial and range properties. SnapshotBlendSource Adds a local or global Mixer Snapshot blending source to the scene. Structs AudioClipSettings A container for AudioClips with optional volume, pitch and loop settings and built-in playing functions. Interfaces IMixerSnapshotBlendSource Enums AudioClipCollection.PlayOrder AudioClipSettingsOverride.OverrideMode"
  },
  "api/D3T.Audio.MusicPlayer.html": {
    "href": "api/D3T.Audio.MusicPlayer.html",
    "title": "Class MusicPlayer | D3T - Core | 0.9.34",
    "keywords": "Class MusicPlayer Singleton component for playing music. Inheritance Object MusicPlayer Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MusicPlayer : MonoBehaviour, ISerializable Fields fadeTime Declaration public float fadeTime Field Value Type Description Single instance Declaration public static MusicPlayer instance Field Value Type Description MusicPlayer musicClipLibrary Declaration public static AudioClipLibrary musicClipLibrary Field Value Type Description AudioClipLibrary playlist Declaration public MusicPlayer.Playlist playlist Field Value Type Description MusicPlayer.Playlist Properties IsPlaying Declaration public static bool IsPlaying { get; } Property Value Type Description Boolean SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods GetCurrentClip() Returns the currently playing music clip. Declaration public static AudioClip GetCurrentClip() Returns Type Description AudioClip Init(GameSettings) Declaration public static void Init(GameSettings settings) Parameters Type Name Description GameSettings settings Load(DataContainer) Declaration public void Load(DataContainer content) Parameters Type Name Description DataContainer content Implements ISerializable.Load(DataContainer) Play(AudioClipSettings) Plays the given music clip with fade-in. Declaration public static void Play(AudioClipSettings clip) Parameters Type Name Description AudioClipSettings clip PlayImmediate(AudioClipSettings) Immediately starts playing the given music clip without any fading. Declaration public static void PlayImmediate(AudioClipSettings clip) Parameters Type Name Description AudioClipSettings clip Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer) SetVolume(Single) Sets the current music volume. Declaration public static void SetVolume(float volume) Parameters Type Name Description Single volume Stop() Stops the currently playing music by gradually fading it out. Declaration public static void Stop() StopImmediate() Immediately stops the currently playing music without any fading. Declaration public static void StopImmediate()"
  },
  "api/D3T.Audio.AudioRandomizer.html": {
    "href": "api/D3T.Audio.AudioRandomizer.html",
    "title": "Class AudioRandomizer | D3T - Core | 0.9.34",
    "keywords": "Class AudioRandomizer Plays the attached AudioSource in random intervals Inheritance Object AudioRandomizer Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AudioRandomizer : MonoBehaviour"
  },
  "api/D3T.Audio.AudioClipSettingsOverride.html": {
    "href": "api/D3T.Audio.AudioClipSettingsOverride.html",
    "title": "Class AudioClipSettingsOverride | D3T - Core | 0.9.34",
    "keywords": "Class AudioClipSettingsOverride A collection of parameters for overriding or modifying the settings defined in an AudioClipSettings field. Inheritance Object AudioClipSettingsOverride Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class AudioClipSettingsOverride Constructors AudioClipSettingsOverride(AudioClipSettingsOverride.OverrideMode) Declaration public AudioClipSettingsOverride(AudioClipSettingsOverride.OverrideMode defaultMode) Parameters Type Name Description AudioClipSettingsOverride.OverrideMode defaultMode Fields pitchOverride Declaration public NullableFloat pitchOverride Field Value Type Description NullableFloat pitchOverrideMode Declaration public AudioClipSettingsOverride.OverrideMode pitchOverrideMode Field Value Type Description AudioClipSettingsOverride.OverrideMode rangeOverride Declaration public NullableFloat rangeOverride Field Value Type Description NullableFloat rangeOverrideMode Declaration public AudioClipSettingsOverride.OverrideMode rangeOverrideMode Field Value Type Description AudioClipSettingsOverride.OverrideMode spatialBlendFalloffOverride Declaration public NullableFloat spatialBlendFalloffOverride Field Value Type Description NullableFloat spatialBlendOverride Declaration public NullableFloat spatialBlendOverride Field Value Type Description NullableFloat volumeOverride Declaration public NullableFloat volumeOverride Field Value Type Description NullableFloat volumeOverrideMode Declaration public AudioClipSettingsOverride.OverrideMode volumeOverrideMode Field Value Type Description AudioClipSettingsOverride.OverrideMode Methods Apply(AudioClipSettings) Declaration public AudioClipSettings Apply(AudioClipSettings settings) Parameters Type Name Description AudioClipSettings settings Returns Type Description AudioClipSettings"
  },
  "api/D3T.Audio.AudioClipLibrary.html": {
    "href": "api/D3T.Audio.AudioClipLibrary.html",
    "title": "Class AudioClipLibrary | D3T - Core | 0.9.34",
    "keywords": "Class AudioClipLibrary Storage object for AudioClips to allow them to be loaded by name. Inheritance Object AudioClipLibrary Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AudioClipLibrary : ScriptableObject Fields clips Declaration public AudioClip[] clips Field Value Type Description AudioClip [] Methods ContainsClip(AudioClip) Does this library contain the given AudioClip? Declaration public bool ContainsClip(AudioClip clip) Parameters Type Name Description AudioClip clip Returns Type Description Boolean GetClipByName(String) Returns the AudioClip with the given name. Declaration public AudioClip GetClipByName(string name) Parameters Type Name Description String name Returns Type Description AudioClip The AudioClip named name, or null if it isn't in the list."
  },
  "api/D3TEditor.L10N.html": {
    "href": "api/D3TEditor.L10N.html",
    "title": "Namespace D3TEditor.L10N | D3T - Core | 0.9.34",
    "keywords": "Namespace D3TEditor.L10N Classes CheckForComponentsAttributeDrawer L10NAttributeDrawer LanguageEditor LanguageEditor.AddKeyWindow LanguageEditor.Entry LocalizationBuildPostProcess LocalizerStructureInstaller"
  },
  "api/D3TEditor.L10N.LocalizerStructureInstaller.html": {
    "href": "api/D3TEditor.L10N.LocalizerStructureInstaller.html",
    "title": "Class LocalizerStructureInstaller | D3T - Core | 0.9.34",
    "keywords": "Class LocalizerStructureInstaller Inheritance Object LocalizerStructureInstaller Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class LocalizerStructureInstaller Methods InstallLocalizerFileStructure() Declaration public static void InstallLocalizerFileStructure()"
  },
  "api/D3TEditor.L10N.LocalizationBuildPostProcess.html": {
    "href": "api/D3TEditor.L10N.LocalizationBuildPostProcess.html",
    "title": "Class LocalizationBuildPostProcess | D3T - Core | 0.9.34",
    "keywords": "Class LocalizationBuildPostProcess Inheritance Object LocalizationBuildPostProcess Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class LocalizationBuildPostProcess Methods OnBuildPostProcess(BuildTarget, String) Declaration public static void OnBuildPostProcess(BuildTarget target, string buildPath) Parameters Type Name Description BuildTarget target String buildPath"
  },
  "api/D3TEditor.L10N.LanguageEditor.html": {
    "href": "api/D3TEditor.L10N.LanguageEditor.html",
    "title": "Class LanguageEditor | D3T - Core | 0.9.34",
    "keywords": "Class LanguageEditor Inheritance Object LanguageEditor Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LanguageEditor : EditorWindow Fields langFile Declaration public TextAsset langFile Field Value Type Description TextAsset otherLang Declaration public TextAsset otherLang Field Value Type Description TextAsset Methods ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/D3TEditor.L10N.LanguageEditor.Entry.html": {
    "href": "api/D3TEditor.L10N.LanguageEditor.Entry.html",
    "title": "Class LanguageEditor.Entry | D3T - Core | 0.9.34",
    "keywords": "Class LanguageEditor.Entry Inheritance Object LanguageEditor.Entry Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Entry Constructors Entry(String, String, String) Declaration public Entry(string k, string v, string v2) Parameters Type Name Description String k String v String v2 Fields key Declaration public string key Field Value Type Description String value Declaration public string value Field Value Type Description String value2 Declaration public string value2 Field Value Type Description String"
  },
  "api/D3T.ActionEventSet.html": {
    "href": "api/D3T.ActionEventSet.html",
    "title": "Class ActionEventSet | D3T - Core | 0.9.34",
    "keywords": "Class ActionEventSet A set of actions containing signal targets and UnityEvents. Inheritance Object ActionEventSet Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ActionEventSet Fields enabled Declaration public bool enabled Field Value Type Description Boolean events Declaration public UnityEvent events Field Value Type Description UnityEvent signalState Declaration public bool signalState Field Value Type Description Boolean signalTargets Declaration public Transform[] signalTargets Field Value Type Description Transform [] Methods InvokeIfEnabled() Declaration public void InvokeIfEnabled()"
  },
  "api/D3TEditor.Tools.html": {
    "href": "api/D3TEditor.Tools.html",
    "title": "Namespace D3TEditor.Tools | D3T - Core | 0.9.34",
    "keywords": "Namespace D3TEditor.Tools Classes CableEditor SaveFileExplorer TapeMeasure"
  },
  "api/D3T.SingletonPointer.Action.html": {
    "href": "api/D3T.SingletonPointer.Action.html",
    "title": "Enum SingletonPointer.Action | D3T - Core | 0.9.34",
    "keywords": "Enum SingletonPointer.Action Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Action Fields Name Description DisableComponent DisableGameObject Nothing"
  },
  "api/D3T.SingletonIDAttribute.html": {
    "href": "api/D3T.SingletonIDAttribute.html",
    "title": "Class SingletonIDAttribute | D3T - Core | 0.9.34",
    "keywords": "Class SingletonIDAttribute Add this attribute to a string field to have a dropdown where you can choose from supported Singleton IDs. Inheritance Object SingletonIDAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SingletonIDAttribute : PropertyAttribute"
  },
  "api/D3T.Serialization.html": {
    "href": "api/D3T.Serialization.html",
    "title": "Namespace D3T.Serialization | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Serialization Classes BinaryDeserializer BinarySerializer DataContainer A container object for storing data most often used during serialization. DataDeserializer DataSerializer PersistentBetweenScenesObject Add this component to a game object to make it persistent between scene loads. SaveManager Manager class for saving and loading saved games. SaveSession Class representing a save file location for the current save state session. SerializableExtensions SerializablePrefabInstance A component that can be re-instantiated by it's creator when a saved game is loaded. SerializationDebugger Helper class for generating list text files from DataContainers. SerializationUtility Utility class for saving common components and iterate over serialized members. SerializeAllFieldsAttribute Automatically include all fields of this class for savegame serialization. SerializeAnimator Includes the animator's state when saving the game. SerializeGameObjectActiveState Includes the GameObject's active state when saving the game. SerializeRigidbody Includes the rigidbody's state when saving the game. SerializeTransform Includes the transform's position, rotation and scale when saving the game. SerializeVarAttribute Enables automatic serialization/deserialization of this member in saves. StaticLoadAttribute Call this static method whenever a saved game is being loaded (before all scene objects are loaded.) StaticSaveAttribute Call this static method whenever the game is saved (before all scene objects are saved). XMLDeserializer XMLSerializer Interfaces ISerializable Interface used to enable savegame serialization on this component. ISerializablePrefabInstantiator Interface for allowing the script to re-instantiate saved prefabs when loading a saved game. Enums DataSerializer.DataMarker DataSerializer.DataSerializationMode SaveMode"
  },
  "api/D3T.Serialization.XMLSerializer.html": {
    "href": "api/D3T.Serialization.XMLSerializer.html",
    "title": "Class XMLSerializer | D3T - Core | 0.9.34",
    "keywords": "Class XMLSerializer Inheritance Object DataSerializer XMLSerializer Inherited Members DataSerializer.supportedBaseTypes DataSerializer.IsTypeSupported(Type) DataSerializer.GetMarkerByType(Type) DataSerializer.GetTypeByMarker(DataSerializer.DataMarker) Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class XMLSerializer : DataSerializer Methods Serialize(DataContainer, Stream) Declaration public override void Serialize(DataContainer root, Stream stream) Parameters Type Name Description DataContainer root Stream stream Overrides DataSerializer.Serialize(DataContainer, Stream) SerializeToString(DataContainer) Declaration public static string SerializeToString(DataContainer root) Parameters Type Name Description DataContainer root Returns Type Description String"
  },
  "api/D3T.Serialization.XMLDeserializer.html": {
    "href": "api/D3T.Serialization.XMLDeserializer.html",
    "title": "Class XMLDeserializer | D3T - Core | 0.9.34",
    "keywords": "Class XMLDeserializer Inheritance Object DataDeserializer XMLDeserializer Inherited Members DataDeserializer.CreateDeserializer(Stream) DataDeserializer.stream Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class XMLDeserializer : DataDeserializer Constructors XMLDeserializer(Stream) Declaration public XMLDeserializer(Stream stream) Parameters Type Name Description Stream stream Methods Deserialize() Declaration public override DataContainer Deserialize() Returns Type Description DataContainer Overrides DataDeserializer.Deserialize() DeserializeFromString(String) Declaration public static DataContainer DeserializeFromString(string s) Parameters Type Name Description String s Returns Type Description DataContainer"
  },
  "api/D3T.Serialization.StaticSaveAttribute.html": {
    "href": "api/D3T.Serialization.StaticSaveAttribute.html",
    "title": "Class StaticSaveAttribute | D3T - Core | 0.9.34",
    "keywords": "Class StaticSaveAttribute Call this static method whenever the game is saved (before all scene objects are saved). Inheritance Object Attribute StaticSaveAttribute Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method)] public class StaticSaveAttribute : Attribute, _Attribute"
  },
  "api/D3T.Serialization.StaticLoadAttribute.html": {
    "href": "api/D3T.Serialization.StaticLoadAttribute.html",
    "title": "Class StaticLoadAttribute | D3T - Core | 0.9.34",
    "keywords": "Class StaticLoadAttribute Call this static method whenever a saved game is being loaded (before all scene objects are loaded.) Inheritance Object Attribute StaticLoadAttribute Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method)] public class StaticLoadAttribute : Attribute, _Attribute"
  },
  "api/D3T.Serialization.SerializablePrefabInstance.html": {
    "href": "api/D3T.Serialization.SerializablePrefabInstance.html",
    "title": "Class SerializablePrefabInstance | D3T - Core | 0.9.34",
    "keywords": "Class SerializablePrefabInstance A component that can be re-instantiated by it's creator when a saved game is loaded. Inheritance Object SerializablePrefabInstance Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SerializablePrefabInstance : MonoBehaviour, ISerializable Fields instanceOwner Declaration protected ISerializablePrefabInstantiator instanceOwner Field Value Type Description ISerializablePrefabInstantiator prefabIdentifier Declaration protected string prefabIdentifier Field Value Type Description String wasLoaded Declaration protected bool wasLoaded Field Value Type Description Boolean Properties SerializationEnabled Declaration public virtual bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) LoadInstance(DataContainer) Declaration public void LoadInstance(DataContainer data) Parameters Type Name Description DataContainer data OnLoad(DataContainer) Declaration protected virtual void OnLoad(DataContainer data) Parameters Type Name Description DataContainer data OnSave(DataContainer) Declaration protected virtual void OnSave(DataContainer container) Parameters Type Name Description DataContainer container Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer) SetInstanceOwner(ISerializablePrefabInstantiator, String) Declaration public void SetInstanceOwner(ISerializablePrefabInstantiator instantiator, string prefabID) Parameters Type Name Description ISerializablePrefabInstantiator instantiator String prefabID"
  },
  "api/D3T.Serialization.SerializableExtensions.html": {
    "href": "api/D3T.Serialization.SerializableExtensions.html",
    "title": "Class SerializableExtensions | D3T - Core | 0.9.34",
    "keywords": "Class SerializableExtensions Inheritance Object SerializableExtensions Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class SerializableExtensions Methods InstantiateSerializable(MonoBehaviour, GameObject, String) Instantiates a prefab and sets it's owner to allow for loading (the owner must implement ISerializablePrefabInstantiator) Declaration public static SerializablePrefabInstance InstantiateSerializable(this MonoBehaviour owner, GameObject prefab, string prefabID) Parameters Type Name Description MonoBehaviour owner GameObject prefab String prefabID Returns Type Description SerializablePrefabInstance InstantiateSerializable(MonoBehaviour, GameObject, String, Vector3, Quaternion) Instantiates a prefab and sets it's owner to allow for loading (the owner must implement ISerializablePrefabInstantiator) Declaration public static SerializablePrefabInstance InstantiateSerializable(this MonoBehaviour owner, GameObject prefab, string prefabID, Vector3 position, Quaternion rotation) Parameters Type Name Description MonoBehaviour owner GameObject prefab String prefabID Vector3 position Quaternion rotation Returns Type Description SerializablePrefabInstance"
  },
  "api/D3T.Serialization.SaveSession.html": {
    "href": "api/D3T.Serialization.SaveSession.html",
    "title": "Class SaveSession | D3T - Core | 0.9.34",
    "keywords": "Class SaveSession Class representing a save file location for the current save state session. Inheritance Object SaveSession Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SaveSession Properties EncryptKeys Should object keys be encrypted (obfuscated) when saving? Declaration public bool EncryptKeys { get; set; } Property Value Type Description Boolean IsDirectory If set to true , each session will have it's own save file directory. Declaration public bool IsDirectory { get; } Property Value Type Description Boolean IsTemplate Declaration public bool IsTemplate { get; } Property Value Type Description Boolean LastSaveTimestamp The timestamp of the last time a save was created in this session. Declaration public DateTime LastSaveTimestamp { get; } Property Value Type Description DateTime MaxBackupCount The maximum amount of backup files to keep. Declaration public int MaxBackupCount { get; } Property Value Type Description Int32 NeedsCompatibleNames Whether the chosen serialization mode requires compatible names (no spaces or special characters). Declaration public bool NeedsCompatibleNames { get; } Property Value Type Description Boolean SerializationMode Determines the type of serialization that should be used. Defaults to binary. Declaration public DataSerializer.DataSerializationMode SerializationMode { get; set; } Property Value Type Description DataSerializer.DataSerializationMode SessionName The name of this session used to write the files. Declaration public string SessionName { get; } Property Value Type Description String Methods CreateNew(SaveSession, String, String) Creates a new Save Session named name . Declaration public static SaveSession CreateNew(SaveSession template, string rootPath, string name = null) Parameters Type Name Description SaveSession template The template to copy settings from. String rootPath The root directory to save this session in. String name The name of the session used to write the files. If left at null, the name will be \"Save_[current date]\" Returns Type Description SaveSession CreateNew(String) Creates a new Save Session named name using the default template and root location. Declaration public static SaveSession CreateNew(string name = null) Parameters Type Name Description String name The name of the session used to write the files. If left at null, the name will be \"Save_[current date]\" Returns Type Description SaveSession CreateTemplate(Int32, Boolean, Boolean, DataSerializer.DataSerializationMode) Declaration public static SaveSession CreateTemplate(int backupCount, bool createDirectory, bool encrypt, DataSerializer.DataSerializationMode mode = DataSerializer.DataSerializationMode.Binary) Parameters Type Name Description Int32 backupCount Boolean createDirectory Boolean encrypt DataSerializer.DataSerializationMode mode Returns Type Description SaveSession LoadBackupSaveFile(Int32) Loads a backup file from this session. The lower the index, the newer the backup is. Declaration public DataContainer LoadBackupSaveFile(int backupIndex) Parameters Type Name Description Int32 backupIndex Returns Type Description DataContainer LoadFromLocation(String, String, Boolean) Declaration public static SaveSession LoadFromLocation(string rootPath, string name, bool isDirectory) Parameters Type Name Description String rootPath String name Boolean isDirectory Returns Type Description SaveSession LoadSaveFile() Loads the main save from this session. Declaration public DataContainer LoadSaveFile() Returns Type Description DataContainer Save(DataContainer) Writes a save file for this session and creates a backup of the old one if enabled. Declaration public void Save(DataContainer savedData) Parameters Type Name Description DataContainer savedData"
  },
  "api/D3T.Serialization.SaveMode.html": {
    "href": "api/D3T.Serialization.SaveMode.html",
    "title": "Enum SaveMode | D3T - Core | 0.9.34",
    "keywords": "Enum SaveMode Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum SaveMode Fields Name Description ActiveSceneNameOnly Only include the name of the active scene with no additional data (Useful for loading a level from the start). FullSceneContent Include all serializable components in the active scene."
  },
  "api/D3T.Serialization.DataContainer.html": {
    "href": "api/D3T.Serialization.DataContainer.html",
    "title": "Class DataContainer | D3T - Core | 0.9.34",
    "keywords": "Class DataContainer A container object for storing data most often used during serialization. Inheritance Object DataContainer Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DataContainer Constructors DataContainer() Declaration public DataContainer() Fields foldoutContent Helper field for displaying this container in tree views. Declaration public bool foldoutContent Field Value Type Description Boolean Properties CompatibleNames Declaration public bool CompatibleNames { get; } Property Value Type Description Boolean ContentCount Declaration public int ContentCount { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Methods Add(String, Object) Declaration public void Add(string key, object data) Parameters Type Name Description String key Object data ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Get(String) Declaration public object Get(string key) Parameters Type Name Description String key Returns Type Description Object Get<T>(String) Declaration public T Get<T>(string key) Parameters Type Name Description String key Returns Type Description T Type Parameters Name Description T GetAll() Declaration public Dictionary<string, object> GetAll() Returns Type Description Dictionary < String , Object > GetCompatibleKey(String) Declaration public static string GetCompatibleKey(string name) Parameters Type Name Description String name Returns Type Description String GetContainer(String) Declaration public DataContainer GetContainer(string key) Parameters Type Name Description String key Returns Type Description DataContainer GetContainerOrNew(String) Declaration public DataContainer GetContainerOrNew(string key) Parameters Type Name Description String key Returns Type Description DataContainer GetKeys(Type) Declaration public string[] GetKeys(Type objectType = null) Parameters Type Name Description Type objectType Returns Type Description String [] GetOrDefault<T>(String, T) Declaration public T GetOrDefault<T>(string key, T defaultValue) Parameters Type Name Description String key T defaultValue Returns Type Description T Type Parameters Name Description T Load(Stream, Boolean) Creates a DataContainer from the given byte stream. Declaration public static DataContainer Load(Stream stream, bool markReadOnly) Parameters Type Name Description Stream stream Boolean markReadOnly Returns Type Description DataContainer Load(String, Boolean) Creates a DataContainer from the given file. Declaration public static DataContainer Load(string filePath, bool markReadOnly) Parameters Type Name Description String filePath Boolean markReadOnly Returns Type Description DataContainer MakeCompatible() Declaration public void MakeCompatible() MarkReadOnly() Prevent further modifications to this container and all it's subcontainers. This cannot be undone. Declaration public void MarkReadOnly() Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean Set(String, Object) Declaration public void Set(string key, object data) Parameters Type Name Description String key Object data TryGet(String, out Object) Declaration public bool TryGet(string key, out object value) Parameters Type Name Description String key Object value Returns Type Description Boolean TryGet<T>(String, out T) Declaration public bool TryGet<T>(string key, out T value) Parameters Type Name Description String key T value Returns Type Description Boolean Type Parameters Name Description T TryGetContainer(String, out DataContainer) Declaration public bool TryGetContainer(string key, out DataContainer container) Parameters Type Name Description String key DataContainer container Returns Type Description Boolean WriteToFile(String, DataSerializer.DataSerializationMode) Declaration public void WriteToFile(string path, DataSerializer.DataSerializationMode mode = DataSerializer.DataSerializationMode.Binary) Parameters Type Name Description String path DataSerializer.DataSerializationMode mode"
  },
  "api/D3T.Serialization.BinarySerializer.html": {
    "href": "api/D3T.Serialization.BinarySerializer.html",
    "title": "Class BinarySerializer | D3T - Core | 0.9.34",
    "keywords": "Class BinarySerializer Inheritance Object DataSerializer BinarySerializer Inherited Members DataSerializer.supportedBaseTypes DataSerializer.IsTypeSupported(Type) DataSerializer.GetMarkerByType(Type) DataSerializer.GetTypeByMarker(DataSerializer.DataMarker) Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BinarySerializer : DataSerializer Methods Serialize(DataContainer, Stream) Declaration public override void Serialize(DataContainer root, Stream stream) Parameters Type Name Description DataContainer root Stream stream Overrides DataSerializer.Serialize(DataContainer, Stream) SerializeContainer(Object, out Byte[], out DataSerializer.DataMarker) Declaration public void SerializeContainer(object o, out byte[] data, out DataSerializer.DataMarker marker) Parameters Type Name Description Object o Byte [] data DataSerializer.DataMarker marker SerializeFloatArray(Single[]) Declaration public byte[] SerializeFloatArray(params float[] values) Parameters Type Name Description Single [] values Returns Type Description Byte []"
  },
  "api/D3T.Serialization.BinaryDeserializer.html": {
    "href": "api/D3T.Serialization.BinaryDeserializer.html",
    "title": "Class BinaryDeserializer | D3T - Core | 0.9.34",
    "keywords": "Class BinaryDeserializer Inheritance Object DataDeserializer BinaryDeserializer Inherited Members DataDeserializer.CreateDeserializer(Stream) DataDeserializer.stream Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BinaryDeserializer : DataDeserializer Constructors BinaryDeserializer(Stream) Declaration public BinaryDeserializer(Stream stream) Parameters Type Name Description Stream stream Methods Deserialize() Declaration public override DataContainer Deserialize() Returns Type Description DataContainer Overrides DataDeserializer.Deserialize()"
  },
  "api/D3T.RandomUtilities.html": {
    "href": "api/D3T.RandomUtilities.html",
    "title": "Class RandomUtilities | D3T - Core | 0.9.34",
    "keywords": "Class RandomUtilities Helper class for random operations. Inheritance Object RandomUtilities Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class RandomUtilities Methods PickRandom<T>(T[]) Picks a random item from the given array. Declaration public static T PickRandom<T>(T[] array) Parameters Type Name Description T[] array Returns Type Description T A random item from the array. Type Parameters Name Description T PickRandom<T>(List<T>) Picks a random item from the given list. Declaration public static T PickRandom<T>(List<T> list) Parameters Type Name Description List <T> list Returns Type Description T A random item from the list. Type Parameters Name Description T PickRandomWeighted(Single[]) Picks a random weighted index using the given weighted array. Declaration public static int PickRandomWeighted(float[] weights) Parameters Type Name Description Single [] weights A weighted array. Higher values have a greater chance of being picked. Returns Type Description Int32 The picked item's index. Probability(Single) Generates a random boolean using the given probability. Declaration public static bool Probability(float prob) Parameters Type Name Description Single prob Returns Type Description Boolean"
  },
  "api/D3T.L10N.LocalizerCommands.html": {
    "href": "api/D3T.L10N.LocalizerCommands.html",
    "title": "Class LocalizerCommands | D3T - Core | 0.9.34",
    "keywords": "Class LocalizerCommands Inheritance Object LocalizerCommands Namespace : D3T.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class LocalizerCommands Methods ListLandDict(String[]) Declaration [ConsoleCommand(\"lang_dict\", new string[]{\"?search_pattern\"})] public static bool ListLandDict(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ListLandIDs(String[]) Declaration [ConsoleCommand(\"lang_ids\", new string[]{})] public static bool ListLandIDs(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean LocalizeString(String[]) Declaration [ConsoleCommand(\"localize\", new string[]{\"key\"})] public static bool LocalizeString(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ReloadLocalizer(String[]) Declaration [ConsoleCommand(\"reload_lang\", new string[]{})] public static bool ReloadLocalizer(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetLang(String[]) Declaration [ConsoleCommand(\"set_lang\", new string[]{\"id\"})] public static bool SetLang(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean"
  },
  "api/D3T.Audio.IMixerSnapshotBlendSource.html": {
    "href": "api/D3T.Audio.IMixerSnapshotBlendSource.html",
    "title": "Interface IMixerSnapshotBlendSource | D3T - Core | 0.9.34",
    "keywords": "Interface IMixerSnapshotBlendSource Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IMixerSnapshotBlendSource Methods GetSnapshotWeights(Vector3, out Single, out Single) Declaration void GetSnapshotWeights(Vector3 listenerPosition, out float mufflerLevel, out float submergedLevel) Parameters Type Name Description Vector3 listenerPosition Single mufflerLevel Single submergedLevel"
  },
  "api/D3T.Audio.AudioLine.html": {
    "href": "api/D3T.Audio.AudioLine.html",
    "title": "Class AudioLine | D3T - Core | 0.9.34",
    "keywords": "Class AudioLine Simulates a linear AudioSource by moving the attached AudioSource along the closest point to the listener on a line between two positions. Inheritance Object AudioLine Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AudioLine : MonoBehaviour Fields point1 Declaration public Transform point1 Field Value Type Description Transform point2 Declaration public Transform point2 Field Value Type Description Transform source Declaration public AudioSource source Field Value Type Description AudioSource volumeP1 Declaration public float volumeP1 Field Value Type Description Single volumeP2 Declaration public float volumeP2 Field Value Type Description Single"
  },
  "api/D3T.Audio.AudioClipSettings.html": {
    "href": "api/D3T.Audio.AudioClipSettings.html",
    "title": "Struct AudioClipSettings | D3T - Core | 0.9.34",
    "keywords": "Struct AudioClipSettings A container for AudioClips with optional volume, pitch and loop settings and built-in playing functions. Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct AudioClipSettings Constructors AudioClipSettings(AudioClip, Nullable<Single>, Nullable<Single>, Boolean, Nullable<Single>, Nullable<Single>, Single) Declaration public AudioClipSettings(AudioClip clip, float? volume = default(float? ), float? pitch = default(float? ), bool loop = false, float? range = default(float? ), float? spatialBlend = default(float? ), float spatialBlendFalloff = 0F) Parameters Type Name Description AudioClip clip Nullable < Single > volume Nullable < Single > pitch Boolean loop Nullable < Single > range Nullable < Single > spatialBlend Single spatialBlendFalloff Fields clip Declaration public AudioClip clip Field Value Type Description AudioClip loop Declaration public bool loop Field Value Type Description Boolean pitch Declaration public NullableFloat pitch Field Value Type Description NullableFloat range Declaration public NullableFloat range Field Value Type Description NullableFloat spatialBlend Declaration public NullableFloat spatialBlend Field Value Type Description NullableFloat spatialBlendFalloff Declaration public float spatialBlendFalloff Field Value Type Description Single volume Declaration public NullableFloat volume Field Value Type Description NullableFloat Properties Null Declaration public static AudioClipSettings Null { get; } Property Value Type Description AudioClipSettings Methods ApplyOverrides(AudioClipSettingsOverride) Declaration public AudioClipSettings ApplyOverrides(AudioClipSettingsOverride overrides) Parameters Type Name Description AudioClipSettingsOverride overrides Returns Type Description AudioClipSettings ApplySettings(AudioClip) Declaration public AudioClipSettings ApplySettings(AudioClip clip) Parameters Type Name Description AudioClip clip Returns Type Description AudioClipSettings Play(AudioSource) Declaration public bool Play(AudioSource source) Parameters Type Name Description AudioSource source Returns Type Description Boolean PlayAtLocation(Vector3, InstancePool<AudioSource>) Declaration public bool PlayAtLocation(Vector3 location, InstancePool<AudioSource> sourcePool = null) Parameters Type Name Description Vector3 location InstancePool < AudioSource > sourcePool Returns Type Description Boolean PlayOneShot(AudioSource) Declaration public bool PlayOneShot(AudioSource source) Parameters Type Name Description AudioSource source Returns Type Description Boolean Operators Implicit(AudioClipSettings to Boolean) Declaration public static implicit operator bool (AudioClipSettings s) Parameters Type Name Description AudioClipSettings s Returns Type Description Boolean"
  },
  "api/D3T.Audio.AudioClipCollection.PlayOrder.html": {
    "href": "api/D3T.Audio.AudioClipCollection.PlayOrder.html",
    "title": "Enum AudioClipCollection.PlayOrder | D3T - Core | 0.9.34",
    "keywords": "Enum AudioClipCollection.PlayOrder Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum PlayOrder Fields Name Description NaturalRandom Ordered Random"
  },
  "api/D3T.Animation.StateMachineCallbackSender.html": {
    "href": "api/D3T.Animation.StateMachineCallbackSender.html",
    "title": "Class StateMachineCallbackSender | D3T - Core | 0.9.34",
    "keywords": "Class StateMachineCallbackSender Inheritance Object StateMachineCallbackSender Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StateMachineCallbackSender : StateMachineBehaviour Fields ignoreWarnings Declaration public bool ignoreWarnings Field Value Type Description Boolean onEnter Declaration public bool onEnter Field Value Type Description Boolean onExit Declaration public bool onExit Field Value Type Description Boolean onUpdate Declaration public bool onUpdate Field Value Type Description Boolean receiverSearchMode Declaration public StateMachineCallbackSender.SearchMode receiverSearchMode Field Value Type Description StateMachineCallbackSender.SearchMode Methods OnStateEnter(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateExit(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateUpdate(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex"
  },
  "api/D3T.Animation.LinearMovementAnimation.Mode.html": {
    "href": "api/D3T.Animation.LinearMovementAnimation.Mode.html",
    "title": "Enum LinearMovementAnimation.Mode | D3T - Core | 0.9.34",
    "keywords": "Enum LinearMovementAnimation.Mode Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Mode Fields Name Description Loop PingPong PlayOnce"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedRect.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedRect.html",
    "title": "Class GUIStyleCollectionAsset.NamedRect | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedRect Inheritance Object GUIStyleCollectionAsset.NamedValue < Rect > GUIStyleCollectionAsset.NamedRect Inherited Members GUIStyleCollectionAsset.NamedValue<Rect>.name GUIStyleCollectionAsset.NamedValue<Rect>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedRect : GUIStyleCollectionAsset.NamedValue<Rect>"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedObject.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedObject.html",
    "title": "Class GUIStyleCollectionAsset.NamedObject | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedObject Inheritance Object GUIStyleCollectionAsset.NamedValue < Object > GUIStyleCollectionAsset.NamedObject Inherited Members GUIStyleCollectionAsset.NamedValue<Object>.name GUIStyleCollectionAsset.NamedValue<Object>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedObject : GUIStyleCollectionAsset.NamedValue<Object>"
  },
  "api/D3T.Graphics.PlanarReflection.html": {
    "href": "api/D3T.Graphics.PlanarReflection.html",
    "title": "Class PlanarReflection | D3T - Core | 0.9.34",
    "keywords": "Class PlanarReflection Unity's reflection camera script from the old water standrd assets. Inheritance Object PlanarReflection Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlanarReflection : MonoBehaviour Fields clearColor Declaration public Color clearColor Field Value Type Description Color clipPlaneOffset Declaration public float clipPlaneOffset Field Value Type Description Single m_Renderer Declaration public Renderer m_Renderer Field Value Type Description Renderer reflectionMask Declaration public LayerMask reflectionMask Field Value Type Description LayerMask reflectionSampler Declaration public string reflectionSampler Field Value Type Description String reflectSkybox Declaration public bool reflectSkybox Field Value Type Description Boolean resolutionScale Declaration public PlanarReflection.ResolutionScale resolutionScale Field Value Type Description PlanarReflection.ResolutionScale Methods LateUpdate() Declaration public void LateUpdate() OnDisable() Declaration public void OnDisable() OnEnable() Declaration public void OnEnable() RenderHelpCameras(Camera) Declaration public void RenderHelpCameras(Camera currentCam) Parameters Type Name Description Camera currentCam WaterTileBeingRendered(Camera) Declaration public void WaterTileBeingRendered(Camera currentCam) Parameters Type Name Description Camera currentCam"
  },
  "api/D3T.Graphics.PlanarReflection.ResolutionScale.html": {
    "href": "api/D3T.Graphics.PlanarReflection.ResolutionScale.html",
    "title": "Enum PlanarReflection.ResolutionScale | D3T - Core | 0.9.34",
    "keywords": "Enum PlanarReflection.ResolutionScale Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ResolutionScale Fields Name Description EighthRes FullRes HalfRes QuarterRes"
  },
  "api/D3T.Graphics.MaterialPropertyBlockSetter.html": {
    "href": "api/D3T.Graphics.MaterialPropertyBlockSetter.html",
    "title": "Class MaterialPropertyBlockSetter | D3T - Core | 0.9.34",
    "keywords": "Class MaterialPropertyBlockSetter Inheritance Object MaterialPropertyBlockSetter Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MaterialPropertyBlockSetter : MonoBehaviour Fields color Declaration public MaterialPropertyBlockSetter.ColorProperty color Field Value Type Description MaterialPropertyBlockSetter.ColorProperty emission Declaration public MaterialPropertyBlockSetter.EmissionProperty emission Field Value Type Description MaterialPropertyBlockSetter.EmissionProperty Methods ApplyProperties() Declaration public void ApplyProperties()"
  },
  "api/D3T.Graphics.MaterialPropertyBlockSetter.EmissionProperty.html": {
    "href": "api/D3T.Graphics.MaterialPropertyBlockSetter.EmissionProperty.html",
    "title": "Class MaterialPropertyBlockSetter.EmissionProperty | D3T - Core | 0.9.34",
    "keywords": "Class MaterialPropertyBlockSetter.EmissionProperty Inheritance Object MaterialPropertyBlockSetter.EmissionProperty Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class EmissionProperty Fields emissionColor Declaration public Color emissionColor Field Value Type Description Color enable Declaration public bool enable Field Value Type Description Boolean updateGi Declaration public bool updateGi Field Value Type Description Boolean"
  },
  "api/D3T.Audio.AudioClipCollection.html": {
    "href": "api/D3T.Audio.AudioClipCollection.html",
    "title": "Class AudioClipCollection | D3T - Core | 0.9.34",
    "keywords": "Class AudioClipCollection A set of AudioClips with built-in ordered or randomized playing orders. Inheritance Object AudioClipCollection Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class AudioClipCollection Fields clips Declaration public List<AudioClip> clips Field Value Type Description List < AudioClip > name Declaration public string name Field Value Type Description String pitch Declaration public float pitch Field Value Type Description Single pitchRandomness Declaration public float pitchRandomness Field Value Type Description Single playOrder Declaration public AudioClipCollection.PlayOrder playOrder Field Value Type Description AudioClipCollection.PlayOrder volume Declaration public float volume Field Value Type Description Single volumeRandomness Declaration public float volumeRandomness Field Value Type Description Single Methods PlayAtLocation(Vector3, AudioClipSettingsOverride, InstancePool<AudioSource>) Plays the next clip at the given position. Declaration public void PlayAtLocation(Vector3 position, AudioClipSettingsOverride customOverride = null, InstancePool<AudioSource> sourcePool = null) Parameters Type Name Description Vector3 position AudioClipSettingsOverride customOverride InstancePool < AudioSource > sourcePool PlayOneShotOnSource(AudioSource, AudioClipSettingsOverride) Plays one shot of the next clip on the given AudioSource. Declaration public void PlayOneShotOnSource(AudioSource target, AudioClipSettingsOverride customOverride = null) Parameters Type Name Description AudioSource target AudioClipSettingsOverride customOverride PlayOnSource(AudioSource, AudioClipSettingsOverride) Plays the next clip on the given AudioSource. Declaration public void PlayOnSource(AudioSource target, AudioClipSettingsOverride customOverride = null) Parameters Type Name Description AudioSource target AudioClipSettingsOverride customOverride"
  },
  "api/D3T.Animation.StateMachineCallbackSender.SearchMode.html": {
    "href": "api/D3T.Animation.StateMachineCallbackSender.SearchMode.html",
    "title": "Enum StateMachineCallbackSender.SearchMode | D3T - Core | 0.9.34",
    "keywords": "Enum StateMachineCallbackSender.SearchMode Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum SearchMode Fields Name Description ThisObject ThisOrChildren ThisOrParents"
  },
  "api/D3T.Animation.LinearMovementAnimation.html": {
    "href": "api/D3T.Animation.LinearMovementAnimation.html",
    "title": "Class LinearMovementAnimation | D3T - Core | 0.9.34",
    "keywords": "Class LinearMovementAnimation Use this component to create a linear animation between two points (e.g. moving platforms) Inheritance Object LinearMovementAnimation Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LinearMovementAnimation : MonoBehaviour, ISerializable Fields animatePhysics Declaration public bool animatePhysics Field Value Type Description Boolean duration Declaration [SerializeVar(null)] public float duration Field Value Type Description Single interpolationCurve Declaration public AnimationCurve interpolationCurve Field Value Type Description AnimationCurve playMode Declaration [SerializeVar(null)] public LinearMovementAnimation.Mode playMode Field Value Type Description LinearMovementAnimation.Mode pos1 Declaration public Vector3 pos1 Field Value Type Description Vector3 pos2 Declaration public Vector3 pos2 Field Value Type Description Vector3 Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.AbstractSource.Type.html": {
    "href": "api/D3T.AbstractSource.Type.html",
    "title": "Enum AbstractSource.Type | D3T - Core | 0.9.34",
    "keywords": "Enum AbstractSource.Type Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Type Fields Name Description Global Point Volumetric"
  },
  "api/D3T.html": {
    "href": "api/D3T.html",
    "title": "Namespace D3T | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T Classes AbstractSource Base class to implement global or location based blended sources of something. ActionEventSet A set of actions containing signal targets and UnityEvents. AudioSourceIntensityController Controls the attached AudioSource's volume/pitch using the provided value. BodyPart Forwards any damage applied to this body part to the parent object. CommonDamageTypes A list of commonly used damage type names. CommonMaterials A collection of commonly used default materials. CoroutineRunner Allows for running coroutines that are independent from other scene objects. CurveRemappedVCComponent Base class for controlling arbitrary components with the provided value with curve remapping applied. DamageModificationTable Use this class to implement damage resistance or weaknesses to certain types of damage. Extensions GameSettings Use (or extend) the GameSettings object to store global settings for the game. GameSettings.AudioSettings GameSettings.GUISettings GameSettings.NamedScriptableObject GameSettings.ScreenFaderSettings Initializer InputInitAttribute Add this attribute to static methods to have them initialize when the InputManager is loaded. InputManager Manager class for registering and querying player inputs. InputManager.Axis An input axis with an input state in the -1..1 range. InputManager.Button A simple button with a pressed/not pressed state. InputSystemInitAttribute Add this attribute to static methods to have them initialize when the InputSystemManager is loaded. Methods may have a InputActionAsset parameter. InputSystemManager InstancePool<T> LevelManager A wrapper for unity's SceneManager with additional callacks. Consider using these methods instead of unity's SceneManager. MeshBuilder Factory class for generating meshes from scratch. NullableValueUtility RandomUtilities Helper class for random operations. SingletonIDAttribute Add this attribute to a string field to have a dropdown where you can choose from supported Singleton IDs. SingletonPointer Registers the specified component in a named singleton dictionary for global access. StaticClassController The StaticClassController is used to invoke call static classe methods during various Unity script events. StaticInitAttribute Add this attribute to a static method to have it called during the static initialization step. Methods may have a GameSettings parameter. StaticPostInitAttribute Add this attribute to a static method to have it called after all other initializers have been called. Methods may have a GameSettings parameter. StaticPreInitAttribute Add this attribute to a static method to have it called before all other initializers have been called. Methods may have a GameSettings parameter. Sun Allows for real world based positioning of the sun based on the given lat/lon coordinates and local time. SunPosition SupportsSingletonIDAttribute Register a signelton ID to have it appear on dropdowns in strings with the SingletonID attribute. ToggleableFeature Base class for subclasses with an 'enabled' checkbox. UserPreferences Static class containing all possible user preferences for customizing a game. UserPreferences.AudioVolumeLevels UserPrefLoadAttribute Add this attribute to a static method to have it called right after the user preferences have been loaded. UserPrefSaveAttribute Add this attribute to a static method to have it called before the user preferences are saved. VCComponent Base class for controlling arbitrary components with the provided value. Structs NullableColor NullableFloat NullableInt Interfaces IDamageable Interface for receiving damage callbacks. INullableValue<T> Enums AbstractSource.Type MeshBuilder.Axis SingletonPointer.Action"
  },
  "api/D3TEditor.TaskListEditor.PrioComparer.html": {
    "href": "api/D3TEditor.TaskListEditor.PrioComparer.html",
    "title": "Class TaskListEditor.PrioComparer | D3T - Core | 0.9.34",
    "keywords": "Class TaskListEditor.PrioComparer Inheritance Object TaskListEditor.PrioComparer Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PrioComparer : IComparer<TaskList.Task> Methods Compare(TaskList.Task, TaskList.Task) Declaration public int Compare(TaskList.Task x, TaskList.Task y) Parameters Type Name Description TaskList.Task x TaskList.Task y Returns Type Description Int32"
  },
  "api/D3TEditor.TaskList.html": {
    "href": "api/D3TEditor.TaskList.html",
    "title": "Class TaskList | D3T - Core | 0.9.34",
    "keywords": "Class TaskList Inheritance Object TaskList Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TaskList : ScriptableObject Fields tasks Declaration public List<TaskList.Task> tasks Field Value Type Description List < TaskList.Task >"
  },
  "api/D3TEditor.TaskList.Task.html": {
    "href": "api/D3TEditor.TaskList.Task.html",
    "title": "Class TaskList.Task | D3T - Core | 0.9.34",
    "keywords": "Class TaskList.Task Inheritance Object TaskList.Task Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Task Constructors Task(Int32, String) Declaration public Task(int p, string cont) Parameters Type Name Description Int32 p String cont Fields content Declaration public string content Field Value Type Description String done Declaration public bool done Field Value Type Description Boolean highlight Declaration public bool highlight Field Value Type Description Boolean prio Declaration public int prio Field Value Type Description Int32"
  },
  "api/D3TEditor.SceneObjectReferenceDrawer.html": {
    "href": "api/D3TEditor.SceneObjectReferenceDrawer.html",
    "title": "Class SceneObjectReferenceDrawer | D3T - Core | 0.9.34",
    "keywords": "Class SceneObjectReferenceDrawer Inheritance Object SceneObjectReferenceDrawer Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SceneObjectReferenceDrawer : PropertyDrawer Methods DrawGUI(Rect, SerializedProperty, GUIContent, FieldInfo) Declaration public static void DrawGUI(Rect position, SerializedProperty property, GUIContent label, FieldInfo fieldInfo) Parameters Type Name Description Rect position SerializedProperty property GUIContent label FieldInfo fieldInfo OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.PropertyDrawerUtility.html": {
    "href": "api/D3TEditor.PropertyDrawerUtility.html",
    "title": "Class PropertyDrawerUtility | D3T - Core | 0.9.34",
    "keywords": "Class PropertyDrawerUtility Inheritance Object PropertyDrawerUtility Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PropertyDrawerUtility Methods GetAttribute<T>(SerializedProperty, Boolean) Declaration public static T GetAttribute<T>(SerializedProperty prop, bool inherit) where T : Attribute Parameters Type Name Description SerializedProperty prop Boolean inherit Returns Type Description T Type Parameters Name Description T GetParent(SerializedProperty) Declaration public static object GetParent(SerializedProperty prop) Parameters Type Name Description SerializedProperty prop Returns Type Description Object GetTargetObjectOfProperty(SerializedProperty) Gets the object the property represents. Declaration public static object GetTargetObjectOfProperty(SerializedProperty prop) Parameters Type Name Description SerializedProperty prop Returns Type Description Object GetValue(Object, String) Declaration public static object GetValue(object source, string name) Parameters Type Name Description Object source String name Returns Type Description Object GetValue(Object, String, Int32) Declaration public static object GetValue(object source, string name, int index) Parameters Type Name Description Object source String name Int32 index Returns Type Description Object TryGetAttribute<T>(SerializedProperty, Boolean, out T) Declaration public static bool TryGetAttribute<T>(SerializedProperty prop, bool inherit, out T attribute) where T : Attribute Parameters Type Name Description SerializedProperty prop Boolean inherit T attribute Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/D3TEditor.Tools.TapeMeasure.html": {
    "href": "api/D3TEditor.Tools.TapeMeasure.html",
    "title": "Class TapeMeasure | D3T - Core | 0.9.34",
    "keywords": "Class TapeMeasure Inheritance Object TapeMeasure Namespace : D3TEditor.Tools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TapeMeasure : EditorWindow Fields angle2d Declaration public float angle2d Field Value Type Description Single distance2d Declaration public float distance2d Field Value Type Description Single distance3d Declaration public float distance3d Field Value Type Description Single distanceVec Declaration public Vector3 distanceVec Field Value Type Description Vector3 enable Declaration public bool enable Field Value Type Description Boolean p1 Declaration public Vector3 p1 Field Value Type Description Vector3 p2 Declaration public Vector3 p2 Field Value Type Description Vector3 setPoint Declaration public int setPoint Field Value Type Description Int32"
  },
  "api/D3TEditor.Tools.SaveFileExplorer.html": {
    "href": "api/D3TEditor.Tools.SaveFileExplorer.html",
    "title": "Class SaveFileExplorer | D3T - Core | 0.9.34",
    "keywords": "Class SaveFileExplorer Inheritance Object SaveFileExplorer Namespace : D3TEditor.Tools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SaveFileExplorer : EditorWindow Methods ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/D3TEditor.Tools.CableEditor.html": {
    "href": "api/D3TEditor.Tools.CableEditor.html",
    "title": "Class CableEditor | D3T - Core | 0.9.34",
    "keywords": "Class CableEditor Inheritance Object CableEditor Namespace : D3TEditor.Tools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CableEditor : EditorWindow Fields bending Declaration public float bending Field Value Type Description Single distance2d Declaration public float distance2d Field Value Type Description Single distance3d Declaration public float distance3d Field Value Type Description Single distanceVec Declaration public Vector3 distanceVec Field Value Type Description Vector3 enable Declaration public bool enable Field Value Type Description Boolean material Declaration public Material material Field Value Type Description Material p1 Declaration public Vector3 p1 Field Value Type Description Vector3 p2 Declaration public Vector3 p2 Field Value Type Description Vector3 segments Declaration public int segments Field Value Type Description Int32 setPoint Declaration public int setPoint Field Value Type Description Int32 thickness Declaration public float thickness Field Value Type Description Single"
  },
  "api/D3TEditor.TextureFontAssetEditor.html": {
    "href": "api/D3TEditor.TextureFontAssetEditor.html",
    "title": "Class TextureFontAssetEditor | D3T - Core | 0.9.34",
    "keywords": "Class TextureFontAssetEditor Inheritance Object TextureFontAssetEditor Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TextureFontAssetEditor : Editor Methods HasPreviewGUI() Declaration public override bool HasPreviewGUI() Returns Type Description Boolean OnInspectorGUI() Declaration public override void OnInspectorGUI() OnPreviewGUI(Rect, GUIStyle) Declaration public override void OnPreviewGUI(Rect r, GUIStyle background) Parameters Type Name Description Rect r GUIStyle background"
  },
  "api/D3TEditor.TextureFontAssetEditor.Subset.html": {
    "href": "api/D3TEditor.TextureFontAssetEditor.Subset.html",
    "title": "Enum TextureFontAssetEditor.Subset | D3T - Core | 0.9.34",
    "keywords": "Enum TextureFontAssetEditor.Subset Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Subset Fields Name Description All Digits LowercaseCharacters Symbols UppercaseCharacters"
  },
  "api/D3TEditor.TaskListEditor.html": {
    "href": "api/D3TEditor.TaskListEditor.html",
    "title": "Class TaskListEditor | D3T - Core | 0.9.34",
    "keywords": "Class TaskListEditor Inheritance Object TaskListEditor Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TaskListEditor : EditorWindow Fields hidecompleted Declaration public bool hidecompleted Field Value Type Description Boolean listnames Declaration public string[] listnames Field Value Type Description String [] lists Declaration public TaskList[] lists Field Value Type Description TaskList [] selectedlist Declaration public int selectedlist Field Value Type Description Int32 tasklabel Declaration public GUIStyle tasklabel Field Value Type Description GUIStyle Methods CreateList() Declaration public static void CreateList() ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/D3TEditor.TaskListEditor.TaskListAuxWindow.html": {
    "href": "api/D3TEditor.TaskListEditor.TaskListAuxWindow.html",
    "title": "Class TaskListEditor.TaskListAuxWindow | D3T - Core | 0.9.34",
    "keywords": "Class TaskListEditor.TaskListAuxWindow Inheritance Object TaskListEditor.TaskListAuxWindow Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TaskListAuxWindow : EditorWindow Fields createnew Declaration public bool createnew Field Value Type Description Boolean l Declaration public TaskList l Field Value Type Description TaskList t Declaration public TaskList.Task t Field Value Type Description TaskList.Task"
  },
  "api/D3TEditor.Inspector.NullableValueDrawer.html": {
    "href": "api/D3TEditor.Inspector.NullableValueDrawer.html",
    "title": "Class NullableValueDrawer | D3T - Core | 0.9.34",
    "keywords": "Class NullableValueDrawer Inheritance Object NullableValueDrawer NullableColorDrawer NullableFloatDrawer NullableIntDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class NullableValueDrawer : PropertyDrawer Methods DrawValueField(Rect, SerializedProperty, String) Declaration protected abstract void DrawValueField(Rect position, SerializedProperty v, string displayName) Parameters Type Name Description Rect position SerializedProperty v String displayName OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.Inspector.NullableIntDrawer.html": {
    "href": "api/D3TEditor.Inspector.NullableIntDrawer.html",
    "title": "Class NullableIntDrawer | D3T - Core | 0.9.34",
    "keywords": "Class NullableIntDrawer Inheritance Object NullableValueDrawer NullableIntDrawer Inherited Members NullableValueDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class NullableIntDrawer : NullableValueDrawer Methods DrawValueField(Rect, SerializedProperty, String) Declaration protected override void DrawValueField(Rect position, SerializedProperty v, string displayName) Parameters Type Name Description Rect position SerializedProperty v String displayName Overrides NullableValueDrawer.DrawValueField(Rect, SerializedProperty, String)"
  },
  "api/D3TEditor.Inspector.NullableFloatDrawer.html": {
    "href": "api/D3TEditor.Inspector.NullableFloatDrawer.html",
    "title": "Class NullableFloatDrawer | D3T - Core | 0.9.34",
    "keywords": "Class NullableFloatDrawer Inheritance Object NullableValueDrawer NullableFloatDrawer Inherited Members NullableValueDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class NullableFloatDrawer : NullableValueDrawer Methods DrawValueField(Rect, SerializedProperty, String) Declaration protected override void DrawValueField(Rect position, SerializedProperty v, string displayName) Parameters Type Name Description Rect position SerializedProperty v String displayName Overrides NullableValueDrawer.DrawValueField(Rect, SerializedProperty, String)"
  },
  "api/D3TEditor.Inspector.NullableColorDrawer.html": {
    "href": "api/D3TEditor.Inspector.NullableColorDrawer.html",
    "title": "Class NullableColorDrawer | D3T - Core | 0.9.34",
    "keywords": "Class NullableColorDrawer Inheritance Object NullableValueDrawer NullableColorDrawer Inherited Members NullableValueDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class NullableColorDrawer : NullableValueDrawer Methods DrawValueField(Rect, SerializedProperty, String) Declaration protected override void DrawValueField(Rect position, SerializedProperty v, string displayName) Parameters Type Name Description Rect position SerializedProperty v String displayName Overrides NullableValueDrawer.DrawValueField(Rect, SerializedProperty, String)"
  },
  "api/D3TEditor.Inspector.LightTempWindow.html": {
    "href": "api/D3TEditor.Inspector.LightTempWindow.html",
    "title": "Class LightTempWindow | D3T - Core | 0.9.34",
    "keywords": "Class LightTempWindow Inheritance Object LightTempWindow Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LightTempWindow : ScriptableWizard Fields lights Declaration public Light[] lights Field Value Type Description Light []"
  },
  "api/D3TEditor.Inspector.LightEditor.html": {
    "href": "api/D3TEditor.Inspector.LightEditor.html",
    "title": "Class LightEditor | D3T - Core | 0.9.34",
    "keywords": "Class LightEditor Inheritance Object LightEditor Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LightEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/D3TEditor.Inspector.HelpBoxDecoratorDrawer.html": {
    "href": "api/D3TEditor.Inspector.HelpBoxDecoratorDrawer.html",
    "title": "Class HelpBoxDecoratorDrawer | D3T - Core | 0.9.34",
    "keywords": "Class HelpBoxDecoratorDrawer Inheritance Object HelpBoxDecoratorDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class HelpBoxDecoratorDrawer : DecoratorDrawer Methods GetHeight() Declaration public override float GetHeight() Returns Type Description Single OnGUI(Rect) Declaration public override void OnGUI(Rect position) Parameters Type Name Description Rect position"
  },
  "api/D3TEditor.Inspector.DrawBaseClassLastEditor-1.html": {
    "href": "api/D3TEditor.Inspector.DrawBaseClassLastEditor-1.html",
    "title": "Class DrawBaseClassLastEditor<T> | D3T - Core | 0.9.34",
    "keywords": "Class DrawBaseClassLastEditor<T> Inheritance Object DrawBaseClassLastEditor<T> AbstractSourceEditor Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class DrawBaseClassLastEditor<T> : Editor Type Parameters Name Description T Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/D3T.Utility.DownloadUtility.html": {
    "href": "api/D3T.Utility.DownloadUtility.html",
    "title": "Class DownloadUtility | D3T - Core | 0.9.34",
    "keywords": "Class DownloadUtility Utility class for downloading text files from the internet. Inheritance Object DownloadUtility Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DownloadUtility Constructors DownloadUtility(String, MonoBehaviour) Declaration public DownloadUtility(string link, MonoBehaviour caller) Parameters Type Name Description String link MonoBehaviour caller Fields error Declaration public string error Field Value Type Description String outputBytes Declaration public byte[] outputBytes Field Value Type Description Byte [] outputLines Declaration public string[] outputLines Field Value Type Description String [] progress Declaration public float progress Field Value Type Description Single state Declaration public DownloadUtility.DownloadState state Field Value Type Description DownloadUtility.DownloadState"
  },
  "api/D3T.Gui.MenuElement.ElementPauseOption.html": {
    "href": "api/D3T.Gui.MenuElement.ElementPauseOption.html",
    "title": "Enum MenuElement.ElementPauseOption | D3T - Core | 0.9.34",
    "keywords": "Enum MenuElement.ElementPauseOption Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ElementPauseOption Fields Name Description None PauseGame PauseGameAndMuteAudio"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.html",
    "title": "Class GUIStyleCollectionAsset | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset Inheritance Object GUIStyleCollectionAsset Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GUIStyleCollectionAsset : ScriptableObject Fields allowOverwrite Declaration public bool allowOverwrite Field Value Type Description Boolean audioClips Declaration public List<GUIStyleCollectionAsset.NamedAudioClip> audioClips Field Value Type Description List < GUIStyleCollectionAsset.NamedAudioClip > autoGenerateGUISkin Declaration public bool autoGenerateGUISkin Field Value Type Description Boolean autoSkinGenerationSettings Declaration public GUIStyleCollectionAsset.GUISkinAutoGenerationData autoSkinGenerationSettings Field Value Type Description GUIStyleCollectionAsset.GUISkinAutoGenerationData collectionName Declaration public string collectionName Field Value Type Description String colors Declaration public List<GUIStyleCollectionAsset.NamedColor> colors Field Value Type Description List < GUIStyleCollectionAsset.NamedColor > defaultFont Declaration public Font defaultFont Field Value Type Description Font defaultFontSize Declaration public int defaultFontSize Field Value Type Description Int32 floats Declaration public List<GUIStyleCollectionAsset.NamedFloat> floats Field Value Type Description List < GUIStyleCollectionAsset.NamedFloat > guiSkin Declaration public GUISkin guiSkin Field Value Type Description GUISkin objects Declaration public List<GUIStyleCollectionAsset.NamedObject> objects Field Value Type Description List < GUIStyleCollectionAsset.NamedObject > rects Declaration public List<GUIStyleCollectionAsset.NamedRect> rects Field Value Type Description List < GUIStyleCollectionAsset.NamedRect > styles Declaration public List<GUIStyle> styles Field Value Type Description List < GUIStyle > textures Declaration public List<GUIStyleCollectionAsset.NamedTexture2D> textures Field Value Type Description List < GUIStyleCollectionAsset.NamedTexture2D > vectors Declaration public List<GUIStyleCollectionAsset.NamedVector> vectors Field Value Type Description List < GUIStyleCollectionAsset.NamedVector >"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedVector.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedVector.html",
    "title": "Class GUIStyleCollectionAsset.NamedVector | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedVector Inheritance Object GUIStyleCollectionAsset.NamedValue < Vector4 > GUIStyleCollectionAsset.NamedVector Inherited Members GUIStyleCollectionAsset.NamedValue<Vector4>.name GUIStyleCollectionAsset.NamedValue<Vector4>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedVector : GUIStyleCollectionAsset.NamedValue<Vector4>"
  },
  "api/D3T.Triggers.MoveTransform.html": {
    "href": "api/D3T.Triggers.MoveTransform.html",
    "title": "Class MoveTransform | D3T - Core | 0.9.34",
    "keywords": "Class MoveTransform Moves the target transforms towards the given destination or with a specified offset. Inheritance Object TriggerComponent TriggerAction MoveTransform Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MoveTransform : TriggerAction, ISignalLink, ISerializable Fields applyRotation Declaration public bool applyRotation Field Value Type Description Boolean destination Declaration public SceneObjectReference destination Field Value Type Description SceneObjectReference mode Declaration public MoveTransform.Mode mode Field Value Type Description MoveTransform.Mode offset Declaration public Vector3 offset Field Value Type Description Vector3 offsetSpace Declaration public Space offsetSpace Field Value Type Description Space targets Declaration public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.ToggleableFeature.html": {
    "href": "api/D3T.ToggleableFeature.html",
    "title": "Class ToggleableFeature | D3T - Core | 0.9.34",
    "keywords": "Class ToggleableFeature Base class for subclasses with an 'enabled' checkbox. Inheritance Object ToggleableFeature MusicPlayer.Playlist FollowCamera.CollisionAvoidance CustomFadeSettings Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ToggleableFeature Constructors ToggleableFeature() Declaration public ToggleableFeature() ToggleableFeature(Boolean) Declaration public ToggleableFeature(bool enabled) Parameters Type Name Description Boolean enabled Properties Enabled Declaration public bool Enabled { get; set; } Property Value Type Description Boolean Methods OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable()"
  },
  "api/D3T.SupportsSingletonIDAttribute.html": {
    "href": "api/D3T.SupportsSingletonIDAttribute.html",
    "title": "Class SupportsSingletonIDAttribute | D3T - Core | 0.9.34",
    "keywords": "Class SupportsSingletonIDAttribute Register a signelton ID to have it appear on dropdowns in strings with the SingletonID attribute. Inheritance Object Attribute SupportsSingletonIDAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SupportsSingletonIDAttribute : Attribute, _Attribute Constructors SupportsSingletonIDAttribute(String) Declaration public SupportsSingletonIDAttribute(string id) Parameters Type Name Description String id Fields description Declaration public string description Field Value Type Description String id Declaration public string id Field Value Type Description String Properties PopupString Declaration public string PopupString { get; } Property Value Type Description String"
  },
  "api/D3T.SunPosition.html": {
    "href": "api/D3T.SunPosition.html",
    "title": "Class SunPosition | D3T - Core | 0.9.34",
    "keywords": "Class SunPosition Inheritance Object SunPosition Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class SunPosition Methods CalculateSunPosition(DateTime, Double, Double, out Double, out Double) Declaration public static void CalculateSunPosition(DateTime dateTime, double latitude, double longitude, out double outAzimuth, out double outAltitude) Parameters Type Name Description DateTime dateTime Double latitude Double longitude Double outAzimuth Double outAltitude"
  },
  "api/D3T.Triggers.TimedDestroy.html": {
    "href": "api/D3T.Triggers.TimedDestroy.html",
    "title": "Class TimedDestroy | D3T - Core | 0.9.34",
    "keywords": "Class TimedDestroy Destroys the attached GameObject in a given amount of time. Inheritance Object TimedDestroy Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TimedDestroy : MonoBehaviour Fields destroy Declaration public bool destroy Field Value Type Description Boolean seconds Declaration public float seconds Field Value Type Description Single"
  },
  "api/D3T.Triggers.StopMusic.html": {
    "href": "api/D3T.Triggers.StopMusic.html",
    "title": "Class StopMusic | D3T - Core | 0.9.34",
    "keywords": "Class StopMusic Stops any currently playing music. Inheritance Object TriggerComponent TriggerAction StopMusic Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StopMusic : TriggerAction, ISignalLink, ISerializable Fields noFadeOut Declaration public bool noFadeOut Field Value Type Description Boolean Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.StaticCondition.html": {
    "href": "api/D3T.Triggers.StaticCondition.html",
    "title": "Class StaticCondition | D3T - Core | 0.9.34",
    "keywords": "Class StaticCondition A placeholder or debugger condition that evaluates to it's internal boolean value. Inheritance Object TriggerComponent TriggerCondition StaticCondition Inherited Members TriggerCondition.DefaultGizmosColor TriggerCondition.invertCondition TriggerCondition.EvaluateCondition() TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StaticCondition : TriggerCondition Methods Evaluate() Declaration protected override bool Evaluate() Returns Type Description Boolean Overrides TriggerCondition.Evaluate()"
  },
  "api/D3T.Triggers.AreaCheckCondition.ConditionType.html": {
    "href": "api/D3T.Triggers.AreaCheckCondition.ConditionType.html",
    "title": "Enum AreaCheckCondition.ConditionType | D3T - Core | 0.9.34",
    "keywords": "Enum AreaCheckCondition.ConditionType Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ConditionType Fields Name Description All Any"
  },
  "api/D3T.Triggers.ApplyDamage.html": {
    "href": "api/D3T.Triggers.ApplyDamage.html",
    "title": "Class ApplyDamage | D3T - Core | 0.9.34",
    "keywords": "Class ApplyDamage Applies damage to the given targets. Inheritance Object TriggerComponent TriggerAction ApplyDamage Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ApplyDamage : TriggerAction, ISignalLink, ISerializable Fields damage Declaration public int damage Field Value Type Description Int32 damageType Declaration public string damageType Field Value Type Description String targets Declaration public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.html": {
    "href": "api/D3T.Triggers.Actions.html",
    "title": "Namespace D3T.Triggers.Actions | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Triggers.Actions Classes AddStat Sets or increases the specified player stat. ChangeMaterial Changes the target renderers' material with another material. IdleAction A placeholder or debugger action that prints it's own invocation to the console. InvokeUnityEvent Invokes a UnityEvent. LevelLoader Loads another level. SetComponentEnabled Toggles the target component's enabled state. SetObjectsActive Activates or deactivates the specified target GameObjects. SetRigidbodyKinematicState Toggles the isKinematic state of the specified rigidbodies. StartSender StartSender.SignalSettings Sends a signal as soon as the GameObject is activated. ToggleShaderKeyword Toggles a global shader keyword. Enums AddStat.StatType ToggleShaderKeyword.Mode"
  },
  "api/D3T.Triggers.Actions.ToggleShaderKeyword.html": {
    "href": "api/D3T.Triggers.Actions.ToggleShaderKeyword.html",
    "title": "Class ToggleShaderKeyword | D3T - Core | 0.9.34",
    "keywords": "Class ToggleShaderKeyword Toggles a global shader keyword. Inheritance Object TriggerComponent TriggerAction ToggleShaderKeyword Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ToggleShaderKeyword : TriggerAction, ISignalLink, ISerializable Fields mode Declaration public ToggleShaderKeyword.Mode mode Field Value Type Description ToggleShaderKeyword.Mode shaderKeyword Declaration public string shaderKeyword Field Value Type Description String Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.SetObjectsActive.html": {
    "href": "api/D3T.Triggers.Actions.SetObjectsActive.html",
    "title": "Class SetObjectsActive | D3T - Core | 0.9.34",
    "keywords": "Class SetObjectsActive Activates or deactivates the specified target GameObjects. Inheritance Object TriggerComponent TriggerAction SetObjectsActive Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SetObjectsActive : TriggerAction, ISignalLink, ISerializable Fields targets Declaration public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.SetComponentEnabled.html": {
    "href": "api/D3T.Triggers.Actions.SetComponentEnabled.html",
    "title": "Class SetComponentEnabled | D3T - Core | 0.9.34",
    "keywords": "Class SetComponentEnabled Toggles the target component's enabled state. Inheritance Object TriggerComponent TriggerAction SetComponentEnabled Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SetComponentEnabled : TriggerAction, ISignalLink, ISerializable Fields componentType Declaration public string componentType Field Value Type Description String targets Declaration public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.LevelLoader.html": {
    "href": "api/D3T.Triggers.Actions.LevelLoader.html",
    "title": "Class LevelLoader | D3T - Core | 0.9.34",
    "keywords": "Class LevelLoader Loads another level. Inheritance Object TriggerComponent TriggerAction LevelLoader Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LevelLoader : TriggerAction, ISignalLink, ISerializable Fields customFadeSettings Declaration public CustomFadeSettings customFadeSettings Field Value Type Description CustomFadeSettings fadeAudio Declaration public bool fadeAudio Field Value Type Description Boolean instance Declaration public static LevelLoader instance Field Value Type Description LevelLoader nextLevel Declaration public string nextLevel Field Value Type Description String saveLoadedLevel Declaration public bool saveLoadedLevel Field Value Type Description Boolean saveName Declaration public string saveName Field Value Type Description String useFade Declaration public bool useFade Field Value Type Description Boolean Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.InvokeUnityEvent.html": {
    "href": "api/D3T.Triggers.Actions.InvokeUnityEvent.html",
    "title": "Class InvokeUnityEvent | D3T - Core | 0.9.34",
    "keywords": "Class InvokeUnityEvent Invokes a UnityEvent. Inheritance Object TriggerComponent TriggerAction InvokeUnityEvent Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class InvokeUnityEvent : TriggerAction, ISignalLink, ISerializable Fields events Declaration public UnityEvent events Field Value Type Description UnityEvent Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.StaticInitAttribute.html": {
    "href": "api/D3T.StaticInitAttribute.html",
    "title": "Class StaticInitAttribute | D3T - Core | 0.9.34",
    "keywords": "Class StaticInitAttribute Add this attribute to a static method to have it called during the static initialization step. Methods may have a GameSettings parameter. Inheritance Object Attribute StaticInitAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class StaticInitAttribute : Attribute, _Attribute"
  },
  "api/D3T.Triggers.Effects.SignalSequencer.SignalSettings.html": {
    "href": "api/D3T.Triggers.Effects.SignalSequencer.SignalSettings.html",
    "title": "Class SignalSequencer.SignalSettings | D3T - Core | 0.9.34",
    "keywords": "Class SignalSequencer.SignalSettings Inheritance Object SignalSequencer.SignalSettings Namespace : D3T.Triggers.Effects <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SignalSettings Fields delay Declaration public float delay Field Value Type Description Single extraData Declaration public int extraData Field Value Type Description Int32 state Declaration public SignalSequencer.SignalState state Field Value Type Description SignalSequencer.SignalState target Declaration public SceneObjectReference target Field Value Type Description SceneObjectReference"
  },
  "api/D3T.Triggers.AreaCheckCondition.html": {
    "href": "api/D3T.Triggers.AreaCheckCondition.html",
    "title": "Class AreaCheckCondition | D3T - Core | 0.9.34",
    "keywords": "Class AreaCheckCondition Base class for area-based check conditions. Inheritance Object TriggerComponent TriggerCondition AreaCheckCondition ObjectsInArea Inherited Members TriggerCondition.DefaultGizmosColor TriggerCondition.invertCondition TriggerCondition.EvaluateCondition() TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class AreaCheckCondition : TriggerCondition Fields center Declaration public Vector3 center Field Value Type Description Vector3 condition Declaration public AreaCheckCondition.ConditionType condition Field Value Type Description AreaCheckCondition.ConditionType pivot Declaration public SceneObjectReference pivot Field Value Type Description SceneObjectReference radius Declaration public float radius Field Value Type Description Single shape Declaration public AreaCheckCondition.Shape shape Field Value Type Description AreaCheckCondition.Shape size Declaration public Vector3 size Field Value Type Description Vector3 useWorldPos Declaration public bool useWorldPos Field Value Type Description Boolean Methods Evaluate() Declaration protected override bool Evaluate() Returns Type Description Boolean Overrides TriggerCondition.Evaluate() GetTargets() Declaration protected abstract SceneObjectReference[] GetTargets() Returns Type Description SceneObjectReference [] OnGizmos(Boolean) Declaration protected override void OnGizmos(bool selected) Parameters Type Name Description Boolean selected Overrides TriggerComponent.OnGizmos(Boolean)"
  },
  "api/D3T.Triggers.TriggerController.html": {
    "href": "api/D3T.Triggers.TriggerController.html",
    "title": "Class TriggerController | D3T - Core | 0.9.34",
    "keywords": "Class TriggerController Root component for controlling the execution of a Trigger. Inheritance Object TriggerController Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TriggerController : MonoBehaviour, ISerializable Fields actionContainer Declaration public Transform actionContainer Field Value Type Description Transform actionExecutionType Declaration public TriggerController.ActionExecutionType actionExecutionType Field Value Type Description TriggerController.ActionExecutionType actionState Declaration public bool actionState Field Value Type Description Boolean conditionContainer Declaration public Transform conditionContainer Field Value Type Description Transform customUpdateInterval Declaration public float customUpdateInterval Field Value Type Description Single executionLimit Declaration public NullableInt executionLimit Field Value Type Description NullableInt matchAllConditions Declaration public bool matchAllConditions Field Value Type Description Boolean negativeActionContainer Declaration public Transform negativeActionContainer Field Value Type Description Transform negativeActionState Declaration public bool negativeActionState Field Value Type Description Boolean referencedObjects Declaration public Transform[] referencedObjects Field Value Type Description Transform [] updateRate Declaration public TriggerController.UpdateRate updateRate Field Value Type Description TriggerController.UpdateRate updateStartDelay Declaration public float updateStartDelay Field Value Type Description Single Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods EvaluateByEvent() Call or subscribe this method to events to trigger an Update if updateRate is set to Manual. Declaration public void EvaluateByEvent() GetReferencedObject(Int32) Returns the referenced transform at index i, or null if it is out of range. Declaration public Transform GetReferencedObject(int i) Parameters Type Name Description Int32 i Returns Type Description Transform Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.Triggers.TriggerController.UpdateRate.html": {
    "href": "api/D3T.Triggers.TriggerController.UpdateRate.html",
    "title": "Enum TriggerController.UpdateRate | D3T - Core | 0.9.34",
    "keywords": "Enum TriggerController.UpdateRate Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum UpdateRate Fields Name Description Custom EveryFixedUpdate High Low Manual Normal StartOnly VeryHigh VeryLow"
  },
  "api/D3T.Triggers.TriggerController.ActionExecutionType.html": {
    "href": "api/D3T.Triggers.TriggerController.ActionExecutionType.html",
    "title": "Enum TriggerController.ActionExecutionType | D3T - Core | 0.9.34",
    "keywords": "Enum TriggerController.ActionExecutionType Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ActionExecutionType Fields Name Description Always OnCheckChange"
  },
  "api/D3T.VCComponent.html": {
    "href": "api/D3T.VCComponent.html",
    "title": "Class VCComponent | D3T - Core | 0.9.34",
    "keywords": "Class VCComponent Base class for controlling arbitrary components with the provided value. Inheritance Object VCComponent CurveRemappedVCComponent Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class VCComponent : MonoBehaviour Properties ControlValue Declaration protected float ControlValue { get; } Property Value Type Description Single Methods OnUpdate() Declaration protected virtual void OnUpdate() RemapValue(Single) Override this to apply a remapping function for the control value. Declaration protected virtual float RemapValue(float value) Parameters Type Name Description Single value Returns Type Description Single SetControlValue(Single) Declaration public void SetControlValue(float i) Parameters Type Name Description Single i Update() Declaration protected void Update()"
  },
  "api/D3T.Utility.html": {
    "href": "api/D3T.Utility.html",
    "title": "Namespace D3T.Utility | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Utility Classes CreateAnimationClipButtonAttribute Add this attribute to an animation clip field to add a button that creates a new Animation Clip. DownloadUtility Utility class for downloading text files from the internet. FileUtility Utility class for writing data to text files. GIFixer Fixes broken realtime lightmaps that can appear when a scene is loaded with the current version of Unity. HelpBoxAttribute Add this attribute to a field to draw a help box above it in the inspector. MonoInstance An empty MonoBehaviour script. PersistentFileManager ReflectionUtility Utility class for common reflection functions. Screenshots Enums DownloadUtility.DownloadState HelpBoxType PersistentFileManager.FileLocation"
  },
  "api/D3T.Utility.Screenshots.html": {
    "href": "api/D3T.Utility.Screenshots.html",
    "title": "Class Screenshots | D3T - Core | 0.9.34",
    "keywords": "Class Screenshots Inheritance Object Screenshots Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class Screenshots Fields enableScreenshotKey Declaration public static bool enableScreenshotKey Field Value Type Description Boolean enableSuperScreenshots Declaration public static bool enableSuperScreenshots Field Value Type Description Boolean Methods CaptureScreenshot(Int32) Captures a screenshot and saves it to the default persistent file path. Declaration public static void CaptureScreenshot(int scale = 1) Parameters Type Name Description Int32 scale"
  },
  "api/D3T.Triggers.Actions.IdleAction.html": {
    "href": "api/D3T.Triggers.Actions.IdleAction.html",
    "title": "Class IdleAction | D3T - Core | 0.9.34",
    "keywords": "Class IdleAction A placeholder or debugger action that prints it's own invocation to the console. Inheritance Object TriggerComponent TriggerAction IdleAction Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class IdleAction : TriggerAction, ISignalLink, ISerializable Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.ChangeMaterial.html": {
    "href": "api/D3T.Triggers.Actions.ChangeMaterial.html",
    "title": "Class ChangeMaterial | D3T - Core | 0.9.34",
    "keywords": "Class ChangeMaterial Changes the target renderers' material with another material. Inheritance Object TriggerComponent TriggerAction ChangeMaterial Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ChangeMaterial : TriggerAction, ISignalLink, ISerializable Fields materialIndex Declaration public int materialIndex Field Value Type Description Int32 newMaterial Declaration public Material newMaterial Field Value Type Description Material targets Declaration [ReferenceRequiresComponent(typeof(Renderer))] public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedFloat.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedFloat.html",
    "title": "Class GUIStyleCollectionAsset.NamedFloat | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedFloat Inheritance Object GUIStyleCollectionAsset.NamedValue < Single > GUIStyleCollectionAsset.NamedFloat Inherited Members GUIStyleCollectionAsset.NamedValue<Single>.name GUIStyleCollectionAsset.NamedValue<Single>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedFloat : GUIStyleCollectionAsset.NamedValue<float>"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedColor.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedColor.html",
    "title": "Class GUIStyleCollectionAsset.NamedColor | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedColor Inheritance Object GUIStyleCollectionAsset.NamedValue < Color > GUIStyleCollectionAsset.NamedColor Inherited Members GUIStyleCollectionAsset.NamedValue<Color>.name GUIStyleCollectionAsset.NamedValue<Color>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedColor : GUIStyleCollectionAsset.NamedValue<Color>"
  },
  "api/D3T.Graphics.VisibilityPortal.html": {
    "href": "api/D3T.Graphics.VisibilityPortal.html",
    "title": "Class VisibilityPortal | D3T - Core | 0.9.34",
    "keywords": "Class VisibilityPortal Creates a visual portal to another part of the scene. Inheritance Object VisibilityPortal Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class VisibilityPortal : MonoBehaviour Fields autoSetMaterial Declaration public bool autoSetMaterial Field Value Type Description Boolean destinationViewPlane Declaration public Transform destinationViewPlane Field Value Type Description Transform farClipPlane Declaration public float farClipPlane Field Value Type Description Single intersectNearPlane Declaration public bool intersectNearPlane Field Value Type Description Boolean layerMask Declaration public LayerMask layerMask Field Value Type Description LayerMask materialCullMode Declaration public CullMode materialCullMode Field Value Type Description CullMode nearClipPlane Declaration public float nearClipPlane Field Value Type Description Single portalRenderers Declaration public Renderer[] portalRenderers Field Value Type Description Renderer [] projectionCamera Declaration public Camera projectionCamera Field Value Type Description Camera resolutionScale Declaration public VisibilityPortal.ResolutionScale resolutionScale Field Value Type Description VisibilityPortal.ResolutionScale sourceViewPlane Declaration public Transform sourceViewPlane Field Value Type Description Transform tint Declaration public Color tint Field Value Type Description Color worldScale Declaration public float worldScale Field Value Type Description Single"
  },
  "api/D3T.Graphics.VisibilityPortal.ResolutionScale.html": {
    "href": "api/D3T.Graphics.VisibilityPortal.ResolutionScale.html",
    "title": "Enum VisibilityPortal.ResolutionScale | D3T - Core | 0.9.34",
    "keywords": "Enum VisibilityPortal.ResolutionScale Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ResolutionScale Fields Name Description EighthRes FullRes HalfRes QuarterRes"
  },
  "api/D3T.DevTools.CoreCommands.html": {
    "href": "api/D3T.DevTools.CoreCommands.html",
    "title": "Class CoreCommands | D3T - Core | 0.9.34",
    "keywords": "Class CoreCommands Inheritance Object CoreCommands Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CoreCommands Methods BindKey(String[]) Declaration [ConsoleCommand(\"input_bind\", new string[]{\"action\", \"key\", \"?is_gamepad\"})] public static bool BindKey(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean Clear(String[]) Declaration [ConsoleCommand(\"clear\", new string[]{})] public static bool Clear(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean Help(String[]) Declaration [ConsoleCommand(\"help\", new string[]{})] public static bool Help(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ListInputs(String[]) Declaration [ConsoleCommand(\"input_list\", new string[]{})] public static bool ListInputs(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean Load(String[]) Declaration [ConsoleCommand(\"load\", new string[]{\"name\"})] public static bool Load(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean LoadNextLevel(String[]) Declaration [ConsoleCommand(\"nextlevel\", new string[]{})] public static bool LoadNextLevel(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ResetAllBindings(String[]) Declaration [ConsoleCommand(\"input_resetall\", new string[]{\"action\"})] public static bool ResetAllBindings(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ResetBinding(String[]) Declaration [ConsoleCommand(\"input_reset\", new string[]{\"action\"})] public static bool ResetBinding(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean Save(String[]) Declaration [ConsoleCommand(\"save\", new string[]{\"desc\", \"?session\"})] public static bool Save(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetFrameLimit(String[]) Declaration [ConsoleCommand(\"fpslimit\", new string[]{\"?limit\"})] public static bool SetFrameLimit(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetPhysicsTimestep(String[]) Declaration [ConsoleCommand(\"physstep\", new string[]{\"stepspersec\"})] public static bool SetPhysicsTimestep(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetSaveKeyEncryption(String[]) Declaration [ConsoleCommand(\"save_encryption\", new string[]{\"encrypt\"})] public static bool SetSaveKeyEncryption(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetTimeScale(String[]) Declaration [ConsoleCommand(\"timescale\", new string[]{\"?scale\"})] public static bool SetTimeScale(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean"
  },
  "api/D3T.Cameras.FollowCamera.CollisionAvoidance.html": {
    "href": "api/D3T.Cameras.FollowCamera.CollisionAvoidance.html",
    "title": "Class FollowCamera.CollisionAvoidance | D3T - Core | 0.9.34",
    "keywords": "Class FollowCamera.CollisionAvoidance Inheritance Object ToggleableFeature FollowCamera.CollisionAvoidance Inherited Members ToggleableFeature.Enabled ToggleableFeature.OnEnable() ToggleableFeature.OnDisable() Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class CollisionAvoidance : ToggleableFeature Constructors CollisionAvoidance() Declaration public CollisionAvoidance() Fields minDistance Declaration public float minDistance Field Value Type Description Single queryLayers Declaration public LayerMask queryLayers Field Value Type Description LayerMask queryRadius Declaration public float queryRadius Field Value Type Description Single"
  },
  "api/D3T.Animation.AnimationPlayer.html": {
    "href": "api/D3T.Animation.AnimationPlayer.html",
    "title": "Class AnimationPlayer | D3T - Core | 0.9.34",
    "keywords": "Class AnimationPlayer A basic single-clip animation player without the need of creating a separate AnimatorController. Inheritance Object AnimationPlayer Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AnimationPlayer : MonoBehaviour, IAnimationClipSource Fields clip Declaration public AnimationClip clip Field Value Type Description AnimationClip clips Declaration public List<AnimationClip> clips Field Value Type Description List < AnimationClip > playOnStart Declaration public bool playOnStart Field Value Type Description Boolean speed Declaration public float speed Field Value Type Description Single updateMode Declaration public DirectorUpdateMode updateMode Field Value Type Description DirectorUpdateMode Properties IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description Boolean Methods GetAnimationClips(List<AnimationClip>) Declaration public void GetAnimationClips(List<AnimationClip> results) Parameters Type Name Description List < AnimationClip > results Play(AnimationClip, Single) Plays the given AnimationClip Declaration public void Play(AnimationClip c, float speed = 1F) Parameters Type Name Description AnimationClip c Single speed Play(Int32, Single) Plays the AnimationClip at clipIndex from the list of animation clips. Declaration public void Play(int clipIndex, float speed = 1F) Parameters Type Name Description Int32 clipIndex Single speed Stop() Stops the currently playing animation. Declaration public void Stop()"
  },
  "api/D3T.Serialization.SerializationDebugger.html": {
    "href": "api/D3T.Serialization.SerializationDebugger.html",
    "title": "Class SerializationDebugger | D3T - Core | 0.9.34",
    "keywords": "Class SerializationDebugger Helper class for generating list text files from DataContainers. Inheritance Object SerializationDebugger Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class SerializationDebugger Methods ListSaveContentTree(DataContainer) Declaration public static string ListSaveContentTree(DataContainer cont) Parameters Type Name Description DataContainer cont Returns Type Description String"
  },
  "api/D3T.Serialization.SaveManager.html": {
    "href": "api/D3T.Serialization.SaveManager.html",
    "title": "Class SaveManager | D3T - Core | 0.9.34",
    "keywords": "Class SaveManager Manager class for saving and loading saved games. Inheritance Object SaveManager Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class SaveManager Fields currentSavingSession Declaration public static SaveSession currentSavingSession Field Value Type Description SaveSession isLoadingLevel Declaration public static bool isLoadingLevel Field Value Type Description Boolean Properties AutoSaveEnabled Disabling auto saves will only allow creation of saves with manualSave set to true. Declaration public static bool AutoSaveEnabled { get; set; } Property Value Type Description Boolean CurrentSaveSession The currently active save session. Declaration public static SaveSession CurrentSaveSession { get; set; } Property Value Type Description SaveSession HasSaveSession Returns whether a current save session has been set. Declaration public static bool HasSaveSession { get; } Property Value Type Description Boolean SaveFileExtension Extension for all save files. Declaration public static string SaveFileExtension { get; set; } Property Value Type Description String SaveFileLocation The root location where all save files should be saved in. If null, it refers to the default file location set in PersistentFileManager. Declaration public static PersistentFileManager.FileLocation? SaveFileLocation { get; set; } Property Value Type Description Nullable < PersistentFileManager.FileLocation > SaveFileRootPath The root path to the save file system. Declaration public static string SaveFileRootPath { get; } Property Value Type Description String TemplateSession The template session object used to determine the type of file system being used and the number of backup files that should be created. Declaration public static SaveSession TemplateSession { get; set; } Property Value Type Description SaveSession Methods GetKey(MonoBehaviour, Boolean, Boolean) Declaration public static string GetKey(MonoBehaviour comp, bool encrypt, bool compatible = false) Parameters Type Name Description MonoBehaviour comp Boolean encrypt Boolean compatible Returns Type Description String GetSaveNames() Declaration public static string[] GetSaveNames() Returns Type Description String [] GetSession(String) Gets the save session named name from the saves directory. Declaration public static SaveSession GetSession(string name) Parameters Type Name Description String name Returns Type Description SaveSession Hash(Object) Declaration public static uint Hash(object obj) Parameters Type Name Description Object obj Returns Type Description UInt32 Init() Declaration public static void Init() ListAvailableSaveSessions() Returns a list of all available save sessions, sorted by their last save timestamp. Declaration public static List<SaveSession> ListAvailableSaveSessions() Returns Type Description List < SaveSession > Load(String) Loads the session with the given name. Declaration public static void Load(string saveSessionName) Parameters Type Name Description String saveSessionName LoadComponent(MonoBehaviour, DataContainer) Declaration public static void LoadComponent(MonoBehaviour component, DataContainer container) Parameters Type Name Description MonoBehaviour component DataContainer container LoadFromSession(SaveSession) Loads the save file contained in the given session. Declaration public static void LoadFromSession(SaveSession session) Parameters Type Name Description SaveSession session LoadLastSavedSession() Loads the last saved session (the last save). Declaration public static void LoadLastSavedSession() ReloadCurrentSession() Reverts to the last save state in the current session (useful for checkpoints). Declaration public static void ReloadCurrentSession() Save(SaveSession, Boolean, String, SaveMode) Creates a save state for the given session. Declaration public static void Save(SaveSession session, bool manualSave, string saveStateName, SaveMode mode = SaveMode.FullSceneContent) Parameters Type Name Description SaveSession session Boolean manualSave Whether or not this save is invoked by the user or by the game's mechanics. String saveStateName The descriptive display name of the save state. SaveMode mode The type of content that should be saved. SaveComponent(MonoBehaviour, DataContainer) Saves all serializable data from the given component into the container. Declaration public static void SaveComponent(MonoBehaviour component, DataContainer container) Parameters Type Name Description MonoBehaviour component DataContainer container SaveCurrentSession(String, Boolean, SaveMode, Boolean) Creates a save state for the current session, or creates a new session if there is none. Declaration public static void SaveCurrentSession(string saveStateName, bool manualSave, SaveMode mode = SaveMode.FullSceneContent, bool allowNewSessionCreation = true) Parameters Type Name Description String saveStateName The descriptive display name of the save state. Boolean manualSave Whether or not this save is invoked by the user or by the game's mechanics. SaveMode mode The type of content that should be saved. Boolean allowNewSessionCreation Allow creation of a new session if no session is set. Throws an exception otherwise. Events CurrentLoadingDone Declaration public static event Action CurrentLoadingDone Event Type Type Description Action Saved Declaration public static event Action<SaveSession, string> Saved Event Type Type Description Action < SaveSession , String > SaveFailed Declaration public static event Action<SaveSession, string, Exception> SaveFailed Event Type Type Description Action < SaveSession , String , Exception >"
  },
  "api/D3T.Serialization.PersistentBetweenScenesObject.html": {
    "href": "api/D3T.Serialization.PersistentBetweenScenesObject.html",
    "title": "Class PersistentBetweenScenesObject | D3T - Core | 0.9.34",
    "keywords": "Class PersistentBetweenScenesObject Add this component to a game object to make it persistent between scene loads. Inheritance Object PersistentBetweenScenesObject Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PersistentBetweenScenesObject : MonoBehaviour Fields persistentObjectData Declaration public static DataContainer persistentObjectData Field Value Type Description DataContainer"
  },
  "api/D3T.Serialization.DataSerializer.DataMarker.html": {
    "href": "api/D3T.Serialization.DataSerializer.DataMarker.html",
    "title": "Enum DataSerializer.DataMarker | D3T - Core | 0.9.34",
    "keywords": "Enum DataSerializer.DataMarker Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum DataMarker : byte Fields Name Description Array Array2D Array3D BeginData Boolean Byte Container Double EndData Float Int Long Null Quaternion Short String Vector2 Vector3 Vector4"
  },
  "api/D3T.Gui.GUIStyleCollection.html": {
    "href": "api/D3T.Gui.GUIStyleCollection.html",
    "title": "Class GUIStyleCollection | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollection Runtime representation of a GUIStyleCollection asset. Inheritance Object GUIStyleCollection Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GUIStyleCollection Constructors GUIStyleCollection(GUIStyleCollectionAsset) Declaration public GUIStyleCollection(GUIStyleCollectionAsset asset) Parameters Type Name Description GUIStyleCollectionAsset asset Fields guiSkin Declaration public GUISkin guiSkin Field Value Type Description GUISkin Methods GenerateGUISkin(GUIStyleCollectionAsset, GUISkin) Declaration public GUISkin GenerateGUISkin(GUIStyleCollectionAsset asset, GUISkin skin) Parameters Type Name Description GUIStyleCollectionAsset asset GUISkin skin Returns Type Description GUISkin GetAudioClip(String, AudioClip) Declaration public AudioClip GetAudioClip(string name, AudioClip fallback = null) Parameters Type Name Description String name AudioClip fallback Returns Type Description AudioClip GetColor(String, Nullable<Color>) Declaration public Color GetColor(string name, Color? fallback = default(Color? )) Parameters Type Name Description String name Nullable < Color > fallback Returns Type Description Color GetObject(String, Object) Declaration public Object GetObject(string name, Object fallback = null) Parameters Type Name Description String name Object fallback Returns Type Description Object GetStyle(String, GUIStyle) Declaration public GUIStyle GetStyle(string name, GUIStyle fallback = null) Parameters Type Name Description String name GUIStyle fallback Returns Type Description GUIStyle GetTexture2D(String, Texture2D) Declaration public Texture2D GetTexture2D(string name, Texture2D fallback = null) Parameters Type Name Description String name Texture2D fallback Returns Type Description Texture2D GetValue<T>(String, T) Declaration public T GetValue<T>(string name, T fallback = null) Parameters Type Name Description String name T fallback Returns Type Description T Type Parameters Name Description T Merge(GUIStyleCollection, GUIStyleCollectionAsset) Declaration public void Merge(GUIStyleCollection other, GUIStyleCollectionAsset sourceAsset) Parameters Type Name Description GUIStyleCollection other GUIStyleCollectionAsset sourceAsset"
  },
  "api/D3T.Gui.GUIInitAttribute.html": {
    "href": "api/D3T.Gui.GUIInitAttribute.html",
    "title": "Class GUIInitAttribute | D3T - Core | 0.9.34",
    "keywords": "Class GUIInitAttribute Add this attribute to a static method to have it initialized when the GUI handler is being loaded. Inheritance Object Attribute GUIInitAttribute Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)] public class GUIInitAttribute : Attribute, _Attribute Constructors GUIInitAttribute() Declaration public GUIInitAttribute()"
  },
  "api/D3T.Gui.GUIHandler.html": {
    "href": "api/D3T.Gui.GUIHandler.html",
    "title": "Class GUIHandler | D3T - Core | 0.9.34",
    "keywords": "Class GUIHandler Manager class for displaying and handling IMGUI elements and menus. Inheritance Object GUIHandler Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [SupportsSingletonID(\"gui_audio\")] public static class GUIHandler Fields allowEscapeKey Does pressing escape close any currently open menus or open the pause menu? Declaration public static bool allowEscapeKey Field Value Type Description Boolean currentScene Declaration public static Scene currentScene Field Value Type Description Scene defaultGuiElementFadeInDuration Declaration public static float defaultGuiElementFadeInDuration Field Value Type Description Single defaultGuiElementFadeOutDuration Declaration public static float defaultGuiElementFadeOutDuration Field Value Type Description Single guiAudioSource Declaration public static AudioSource guiAudioSource Field Value Type Description AudioSource guiChangeRegistry Declaration public static List<GUIHandler.GuiChangeInfo> guiChangeRegistry Field Value Type Description List < GUIHandler.GuiChangeInfo > guiElementRegistry Declaration public static Dictionary<string, MenuElement> guiElementRegistry Field Value Type Description Dictionary < String , MenuElement > hud Declaration public static bool hud Field Value Type Description Boolean lastScroll Declaration public static Vector2 lastScroll Field Value Type Description Vector2 mouseEventLayerMask Declaration public static LayerMask mouseEventLayerMask Field Value Type Description LayerMask rawScroll Declaration public static Vector2 rawScroll Field Value Type Description Vector2 scroll Declaration public static Vector2 scroll Field Value Type Description Vector2 scrollLimits Declaration public static float scrollLimits Field Value Type Description Single smoothedScroll Declaration public static Vector2 smoothedScroll Field Value Type Description Vector2 styleCollections Declaration public static Dictionary<string, GUIStyleCollection> styleCollections Field Value Type Description Dictionary < String , GUIStyleCollection > Properties CurrentMenuItem Declaration public static string CurrentMenuItem { get; } Property Value Type Description String DefaultCollection Declaration public static GUIStyleCollection DefaultCollection { get; } Property Value Type Description GUIStyleCollection Enable3dMouseRaycasts Declaration public static bool Enable3dMouseRaycasts { get; } Property Value Type Description Boolean GUISkin Declaration public static GUISkin GUISkin { get; } Property Value Type Description GUISkin HasMenu Returns true if any menu element is currently open. Declaration public static bool HasMenu { get; } Property Value Type Description Boolean InputEnabled Declaration public static bool InputEnabled { get; } Property Value Type Description Boolean Methods ChangeMenu(String) Changes the currently open menu to the menu with the given ID. Declaration public static bool ChangeMenu(string menuID) Parameters Type Name Description String menuID Returns Type Description Boolean Whether the change was successful. DrawProgressBar(Rect, Single, Color, String) Draws a left-to-right progress bar. Declaration public static void DrawProgressBar(Rect r, float fill, Color fillColor, string styleName = \"progress_bar\") Parameters Type Name Description Rect r Single fill Color fillColor String styleName Init(GameSettings) Declaration public static void Init(GameSettings settings) Parameters Type Name Description GameSettings settings InitInputs(InputActionAsset) Declaration public static void InitInputs(InputActionAsset asset) Parameters Type Name Description InputActionAsset asset OnGUI() Declaration public static void OnGUI() PlayGuiSound(AudioClip, Single) Plays a sound on the GUI audio source. Declaration public static void PlayGuiSound(AudioClip clip, float volume = 1F) Parameters Type Name Description AudioClip clip Single volume PlayGuiSound(AudioClipSettings) Plays a sound on the GUI audio source. Declaration public static void PlayGuiSound(AudioClipSettings clip) Parameters Type Name Description AudioClipSettings clip RegisterCollection(GUIStyleCollectionAsset) Registers a GUIStyleCollection for use in drawing GUI elements. Declaration public static void RegisterCollection(GUIStyleCollectionAsset asset) Parameters Type Name Description GUIStyleCollectionAsset asset ResetColors() Declaration public static void ResetColors() Update() Declaration public static void Update() Events MenuChanged Declaration public static event Action<MenuElement, MenuElement> MenuChanged Event Type Type Description Action < MenuElement , MenuElement > PauseStateChanged Declaration public static event Action<bool> PauseStateChanged Event Type Type Description Action < Boolean > UpdateGUI Declaration public static event Action UpdateGUI Event Type Type Description Action"
  },
  "api/D3T.Gui.GUIHandler.GuiInfo.html": {
    "href": "api/D3T.Gui.GUIHandler.GuiInfo.html",
    "title": "Class GUIHandler.GuiInfo | D3T - Core | 0.9.34",
    "keywords": "Class GUIHandler.GuiInfo Inheritance Object GUIHandler.GuiInfo GUIHandler.GuiChangeInfo Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class GuiInfo Fields elementID Declaration public string elementID Field Value Type Description String Methods AreEqual(GUIHandler.GuiInfo, GUIHandler.GuiInfo) Declaration public static bool AreEqual(GUIHandler.GuiInfo a, GUIHandler.GuiInfo b) Parameters Type Name Description GUIHandler.GuiInfo a GUIHandler.GuiInfo b Returns Type Description Boolean"
  },
  "api/D3T.Gui.Crosshair.EightPartCrosshair.html": {
    "href": "api/D3T.Gui.Crosshair.EightPartCrosshair.html",
    "title": "Class Crosshair.EightPartCrosshair | D3T - Core | 0.9.34",
    "keywords": "Class Crosshair.EightPartCrosshair Inheritance Object Crosshair.EightPartCrosshair Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class EightPartCrosshair Fields bottomLeftPart Declaration public Image bottomLeftPart Field Value Type Description Image bottomPart Declaration public Image bottomPart Field Value Type Description Image bottomRightPart Declaration public Image bottomRightPart Field Value Type Description Image fadeoutMiddleDot Declaration public bool fadeoutMiddleDot Field Value Type Description Boolean fadeStartOffset Declaration public float fadeStartOffset Field Value Type Description Single idlePosition Declaration public float idlePosition Field Value Type Description Single leftPart Declaration public Image leftPart Field Value Type Description Image rightPart Declaration public Image rightPart Field Value Type Description Image tint Declaration public Color tint Field Value Type Description Color tintMiddleDot Declaration public bool tintMiddleDot Field Value Type Description Boolean topLeftPart Declaration public Image topLeftPart Field Value Type Description Image topPart Declaration public Image topPart Field Value Type Description Image topRightPart Declaration public Image topRightPart Field Value Type Description Image Properties Item[Int32] Declaration public Image this[int i] { get; } Parameters Type Name Description Int32 i Property Value Type Description Image Methods ApplyAnimation(Single, Image, Single, Single) Declaration public void ApplyAnimation(float state, Image middleDot, float extraSpread = 0F, float opacityMul = 1F) Parameters Type Name Description Single state Image middleDot Single extraSpread Single opacityMul"
  },
  "api/D3T.Graphics.html": {
    "href": "api/D3T.Graphics.html",
    "title": "Namespace D3T.Graphics | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Graphics Classes DistortionShaderUpdate FlickerLight LookAt MaterialPropertyBlockSetter MaterialPropertyBlockSetter.ColorProperty MaterialPropertyBlockSetter.EmissionProperty PlanarReflection Unity's reflection camera script from the old water standrd assets. SystemTimeAnalogClock Animates an analog clock and displays the system's current time. TextMeshDrawer Creates text meshes for 3D text. TextureFontAsset TextureFontAsset.CharacterInfo VisibilityPortal Creates a visual portal to another part of the scene. VolumetricLightCone Add this component to a spot light to draw a volumetric light cone. WaterObject Controls the appearance of water and caustics shaders. WaterObject.AmbientSettings WaterObject.CausticsSettings WaterObject.SurfaceSettings Enums PlanarReflection.ResolutionScale SystemTimeAnalogClock.Axis TextureFontAsset.CharacterSet VisibilityPortal.ResolutionScale WaterObject.LevelMode"
  },
  "api/D3T.Graphics.WaterObject.html": {
    "href": "api/D3T.Graphics.WaterObject.html",
    "title": "Class WaterObject | D3T - Core | 0.9.34",
    "keywords": "Class WaterObject Controls the appearance of water and caustics shaders. Inheritance Object WaterObject Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class WaterObject : MonoBehaviour Fields ambientSettings Declaration public WaterObject.AmbientSettings ambientSettings Field Value Type Description WaterObject.AmbientSettings causticsSettings Declaration public WaterObject.CausticsSettings causticsSettings Field Value Type Description WaterObject.CausticsSettings surfaceSettings Declaration public WaterObject.SurfaceSettings surfaceSettings Field Value Type Description WaterObject.SurfaceSettings waterYLevelOffset Declaration public float waterYLevelOffset Field Value Type Description Single waterYLevelReference Declaration public WaterObject.LevelMode waterYLevelReference Field Value Type Description WaterObject.LevelMode Properties WaterLevel Declaration public float WaterLevel { get; } Property Value Type Description Single Methods CreateInstances(Boolean) Declaration protected virtual void CreateInstances(bool enablePlanarRef) Parameters Type Name Description Boolean enablePlanarRef Update() Declaration protected virtual void Update()"
  },
  "api/D3T.Graphics.WaterObject.SurfaceSettings.html": {
    "href": "api/D3T.Graphics.WaterObject.SurfaceSettings.html",
    "title": "Class WaterObject.SurfaceSettings | D3T - Core | 0.9.34",
    "keywords": "Class WaterObject.SurfaceSettings Inheritance Object WaterObject.SurfaceSettings Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SurfaceSettings Fields fogColor Declaration public Color fogColor Field Value Type Description Color fogMinOpacity Declaration public float fogMinOpacity Field Value Type Description Single mesh Declaration public MeshRenderer mesh Field Value Type Description MeshRenderer viewDistanceAboveWater Declaration public float viewDistanceAboveWater Field Value Type Description Single waterColor Declaration public Color waterColor Field Value Type Description Color wavesBumpiness Declaration public float wavesBumpiness Field Value Type Description Single wavesRefractionScale Declaration public float wavesRefractionScale Field Value Type Description Single wavesScale Declaration public float wavesScale Field Value Type Description Single wavesSpeed Declaration public float wavesSpeed Field Value Type Description Single Methods UpdateSurface(Color) Declaration public void UpdateSurface(Color ambientLight) Parameters Type Name Description Color ambientLight"
  },
  "api/D3T.Graphics.TextureFontAsset.CharacterInfo.html": {
    "href": "api/D3T.Graphics.TextureFontAsset.CharacterInfo.html",
    "title": "Class TextureFontAsset.CharacterInfo | D3T - Core | 0.9.34",
    "keywords": "Class TextureFontAsset.CharacterInfo Inheritance Object TextureFontAsset.CharacterInfo Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class CharacterInfo Constructors CharacterInfo(Char) Declaration public CharacterInfo(char c) Parameters Type Name Description Char c Fields character Declaration public string character Field Value Type Description String width Declaration public float width Field Value Type Description Single Properties Char Declaration public char Char { get; } Property Value Type Description Char"
  },
  "api/D3T.Graphics.TextMeshDrawer.html": {
    "href": "api/D3T.Graphics.TextMeshDrawer.html",
    "title": "Class TextMeshDrawer | D3T - Core | 0.9.34",
    "keywords": "Class TextMeshDrawer Creates text meshes for 3D text. Inheritance Object TextMeshDrawer Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TextMeshDrawer : MonoBehaviour Fields anchor Declaration public TextAnchor anchor Field Value Type Description TextAnchor extraLeading Declaration public float extraLeading Field Value Type Description Single extraTracking Declaration public float extraTracking Field Value Type Description Single font Declaration public TextureFontAsset font Field Value Type Description TextureFontAsset fontSize Declaration public float fontSize Field Value Type Description Single forceLowercase Declaration public bool forceLowercase Field Value Type Description Boolean localizeInputText Declaration public bool localizeInputText Field Value Type Description Boolean maxSize Declaration public float maxSize Field Value Type Description Single slanting Declaration public float slanting Field Value Type Description Single targetLength Declaration public float targetLength Field Value Type Description Single textColor Declaration public Color textColor Field Value Type Description Color Properties Text Declaration public string Text { get; set; } Property Value Type Description String Methods Draw() Declaration public void Draw() Start() Declaration public void Start()"
  },
  "api/D3T.Graphics.SystemTimeAnalogClock.html": {
    "href": "api/D3T.Graphics.SystemTimeAnalogClock.html",
    "title": "Class SystemTimeAnalogClock | D3T - Core | 0.9.34",
    "keywords": "Class SystemTimeAnalogClock Animates an analog clock and displays the system's current time. Inheritance Object SystemTimeAnalogClock Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SystemTimeAnalogClock : MonoBehaviour Fields invertRotation Declaration public bool invertRotation Field Value Type Description Boolean pointerH Declaration public Transform pointerH Field Value Type Description Transform pointerM Declaration public Transform pointerM Field Value Type Description Transform pointerRotationAxis Declaration public SystemTimeAnalogClock.Axis pointerRotationAxis Field Value Type Description SystemTimeAnalogClock.Axis"
  },
  "api/D3T.Graphics.SystemTimeAnalogClock.Axis.html": {
    "href": "api/D3T.Graphics.SystemTimeAnalogClock.Axis.html",
    "title": "Enum SystemTimeAnalogClock.Axis | D3T - Core | 0.9.34",
    "keywords": "Enum SystemTimeAnalogClock.Axis Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Axis Fields Name Description X Y Z"
  },
  "api/D3T.Graphics.FlickerLight.html": {
    "href": "api/D3T.Graphics.FlickerLight.html",
    "title": "Class FlickerLight | D3T - Core | 0.9.34",
    "keywords": "Class FlickerLight Inheritance Object FlickerLight Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FlickerLight : MonoBehaviour Fields fixture Declaration public MeshRenderer fixture Field Value Type Description MeshRenderer flickerSmoothness Declaration public float flickerSmoothness Field Value Type Description Single maxIntensity Declaration public float maxIntensity Field Value Type Description Single maxInterval Declaration public float maxInterval Field Value Type Description Single minIntensity Declaration public float minIntensity Field Value Type Description Single minInterval Declaration public float minInterval Field Value Type Description Single offChance Declaration public float offChance Field Value Type Description Single probe Declaration public ReflectionProbe probe Field Value Type Description ReflectionProbe updateInEditMode Declaration public bool updateInEditMode Field Value Type Description Boolean"
  },
  "api/D3T.Utility.HelpBoxType.html": {
    "href": "api/D3T.Utility.HelpBoxType.html",
    "title": "Enum HelpBoxType | D3T - Core | 0.9.34",
    "keywords": "Enum HelpBoxType Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum HelpBoxType Fields Name Description Error Info Warning"
  },
  "api/D3T.Utility.HelpBoxAttribute.html": {
    "href": "api/D3T.Utility.HelpBoxAttribute.html",
    "title": "Class HelpBoxAttribute | D3T - Core | 0.9.34",
    "keywords": "Class HelpBoxAttribute Add this attribute to a field to draw a help box above it in the inspector. Inheritance Object HelpBoxAttribute Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true, Inherited = true)] public class HelpBoxAttribute : PropertyAttribute Constructors HelpBoxAttribute(String, HelpBoxType) Declaration public HelpBoxAttribute(string message, HelpBoxType type = HelpBoxType.Info) Parameters Type Name Description String message HelpBoxType type Fields message Declaration public string message Field Value Type Description String type Declaration public HelpBoxType type Field Value Type Description HelpBoxType"
  },
  "api/D3T.Utility.GIFixer.html": {
    "href": "api/D3T.Utility.GIFixer.html",
    "title": "Class GIFixer | D3T - Core | 0.9.34",
    "keywords": "Class GIFixer Fixes broken realtime lightmaps that can appear when a scene is loaded with the current version of Unity. Inheritance Object GIFixer Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class GIFixer"
  },
  "api/D3T.Utility.FileUtility.html": {
    "href": "api/D3T.Utility.FileUtility.html",
    "title": "Class FileUtility | D3T - Core | 0.9.34",
    "keywords": "Class FileUtility Utility class for writing data to text files. Inheritance Object FileUtility Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FileUtility Constructors FileUtility() Declaration public FileUtility() FileUtility(String[]) Declaration public FileUtility(string[] fileContents) Parameters Type Name Description String [] fileContents Properties content Declaration public Hashtable content { get; } Property Value Type Description Hashtable Methods ContainsField(String) Declaration public bool ContainsField(string field) Parameters Type Name Description String field Returns Type Description Boolean GetArray(String) Declaration public string[] GetArray(string name) Parameters Type Name Description String name Returns Type Description String [] GetBool(String) Declaration public bool GetBool(string name) Parameters Type Name Description String name Returns Type Description Boolean GetFloat(String) Declaration public float GetFloat(string name) Parameters Type Name Description String name Returns Type Description Single GetInt(String) Declaration public int GetInt(string name) Parameters Type Name Description String name Returns Type Description Int32 GetString(String) Declaration public string GetString(string name) Parameters Type Name Description String name Returns Type Description String LoadSection(String[], String) Declaration public static FileUtility LoadSection(string[] fileContents, string section) Parameters Type Name Description String [] fileContents String section Returns Type Description FileUtility Save(String, String) Declaration public void Save(string path, string fileName) Parameters Type Name Description String path String fileName SetValue(String, Object) Declaration public void SetValue(string name, object value) Parameters Type Name Description String name Object value"
  },
  "api/D3T.Triggers.ReferenceRequiresComponentAttribute.html": {
    "href": "api/D3T.Triggers.ReferenceRequiresComponentAttribute.html",
    "title": "Class ReferenceRequiresComponentAttribute | D3T - Core | 0.9.34",
    "keywords": "Class ReferenceRequiresComponentAttribute Add this attribute to a SceneObjectReference to define what component is required on the target. Inheritance Object Attribute ReferenceRequiresComponentAttribute Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false, Inherited = false)] public class ReferenceRequiresComponentAttribute : Attribute, _Attribute Constructors ReferenceRequiresComponentAttribute(Type) Declaration public ReferenceRequiresComponentAttribute(Type componentType) Parameters Type Name Description Type componentType Fields type Declaration public Type type Field Value Type Description Type"
  },
  "api/D3T.Triggers.PrintMessage.html": {
    "href": "api/D3T.Triggers.PrintMessage.html",
    "title": "Class PrintMessage | D3T - Core | 0.9.34",
    "keywords": "Class PrintMessage Prints a message to the console log. Inheritance Object TriggerComponent TriggerAction PrintMessage Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PrintMessage : TriggerAction, ISignalLink, ISerializable Fields localize Declaration public bool localize Field Value Type Description Boolean message Declaration public string message Field Value Type Description String type Declaration public PrintMessage.LogType type Field Value Type Description PrintMessage.LogType Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.PrintMessage.LogType.html": {
    "href": "api/D3T.Triggers.PrintMessage.LogType.html",
    "title": "Enum PrintMessage.LogType | D3T - Core | 0.9.34",
    "keywords": "Enum PrintMessage.LogType Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum LogType Fields Name Description Error Info Warning"
  },
  "api/D3T.Triggers.PlaySound.html": {
    "href": "api/D3T.Triggers.PlaySound.html",
    "title": "Class PlaySound | D3T - Core | 0.9.34",
    "keywords": "Class PlaySound Plays a sound on the target AudioSource. Inheritance Object TriggerComponent TriggerAction PlaySound Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlaySound : TriggerAction, ISignalLink, ISerializable Fields clip Declaration public AudioClipSettings clip Field Value Type Description AudioClipSettings playOneShot Declaration public bool playOneShot Field Value Type Description Boolean targetSource Declaration [ReferenceRequiresComponent(typeof(AudioSource))] public SceneObjectReference targetSource Field Value Type Description SceneObjectReference Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Statistics.html": {
    "href": "api/D3T.Statistics.html",
    "title": "Namespace D3T.Statistics | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Statistics Classes StatCollector Manager class for keeping track of the player's statistics."
  },
  "api/D3T.Statistics.StatCollector.html": {
    "href": "api/D3T.Statistics.StatCollector.html",
    "title": "Class StatCollector | D3T - Core | 0.9.34",
    "keywords": "Class StatCollector Manager class for keeping track of the player's statistics. Inheritance Object StatCollector Namespace : D3T.Statistics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class StatCollector Fields boolStats Declaration public static Dictionary<string, bool> boolStats Field Value Type Description Dictionary < String , Boolean > floatStats Declaration public static Dictionary<string, float> floatStats Field Value Type Description Dictionary < String , Single > intStats Declaration public static Dictionary<string, int> intStats Field Value Type Description Dictionary < String , Int32 > perLevelPlaytime Declaration public static Dictionary<string, float> perLevelPlaytime Field Value Type Description Dictionary < String , Single > totalPlaytime Declaration public static float totalPlaytime Field Value Type Description Single Methods FixedUpdate() Declaration public static void FixedUpdate() GetBoolStat(String) Declaration public static bool GetBoolStat(string key) Parameters Type Name Description String key Returns Type Description Boolean GetFloatStat(String) Declaration public static float GetFloatStat(string key) Parameters Type Name Description String key Returns Type Description Single GetIntStat(String) Declaration public static int GetIntStat(string key) Parameters Type Name Description String key Returns Type Description Int32 IncreaseFloatStat(String, Single) Increases a stat by the given amount. Declaration public static void IncreaseFloatStat(string key, float amount) Parameters Type Name Description String key Single amount IncreaseIntStat(String, Int32) Increases a stat by the given amount. Declaration public static void IncreaseIntStat(string key, int amount = 1) Parameters Type Name Description String key Int32 amount Init() Declaration public static void Init() Load(DataContainer) Declaration public static void Load(DataContainer rootData) Parameters Type Name Description DataContainer rootData Save(DataContainer) Declaration public static void Save(DataContainer root) Parameters Type Name Description DataContainer root SetBoolStat(String, Boolean) Sets a boolean stat to the given value. Declaration public static void SetBoolStat(string key, bool value) Parameters Type Name Description String key Boolean value"
  },
  "api/D3T.StaticPreInitAttribute.html": {
    "href": "api/D3T.StaticPreInitAttribute.html",
    "title": "Class StaticPreInitAttribute | D3T - Core | 0.9.34",
    "keywords": "Class StaticPreInitAttribute Add this attribute to a static method to have it called before all other initializers have been called. Methods may have a GameSettings parameter. Inheritance Object Attribute StaticPreInitAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class StaticPreInitAttribute : Attribute, _Attribute"
  },
  "api/D3T.StaticPostInitAttribute.html": {
    "href": "api/D3T.StaticPostInitAttribute.html",
    "title": "Class StaticPostInitAttribute | D3T - Core | 0.9.34",
    "keywords": "Class StaticPostInitAttribute Add this attribute to a static method to have it called after all other initializers have been called. Methods may have a GameSettings parameter. Inheritance Object Attribute StaticPostInitAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class StaticPostInitAttribute : Attribute, _Attribute"
  },
  "api/D3T.Serialization.SerializeRigidbody.html": {
    "href": "api/D3T.Serialization.SerializeRigidbody.html",
    "title": "Class SerializeRigidbody | D3T - Core | 0.9.34",
    "keywords": "Class SerializeRigidbody Includes the rigidbody's state when saving the game. Inheritance Object SerializeRigidbody Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SerializeRigidbody : MonoBehaviour, ISerializable Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.Serialization.SerializeGameObjectActiveState.html": {
    "href": "api/D3T.Serialization.SerializeGameObjectActiveState.html",
    "title": "Class SerializeGameObjectActiveState | D3T - Core | 0.9.34",
    "keywords": "Class SerializeGameObjectActiveState Includes the GameObject's active state when saving the game. Inheritance Object SerializeGameObjectActiveState Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SerializeGameObjectActiveState : MonoBehaviour, ISerializable Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.Serialization.SerializeAnimator.html": {
    "href": "api/D3T.Serialization.SerializeAnimator.html",
    "title": "Class SerializeAnimator | D3T - Core | 0.9.34",
    "keywords": "Class SerializeAnimator Includes the animator's state when saving the game. Inheritance Object SerializeAnimator Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SerializeAnimator : MonoBehaviour, ISerializable Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.Serialization.SerializeAllFieldsAttribute.html": {
    "href": "api/D3T.Serialization.SerializeAllFieldsAttribute.html",
    "title": "Class SerializeAllFieldsAttribute | D3T - Core | 0.9.34",
    "keywords": "Class SerializeAllFieldsAttribute Automatically include all fields of this class for savegame serialization. Inheritance Object Attribute SerializeAllFieldsAttribute Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false, Inherited = false)] public class SerializeAllFieldsAttribute : Attribute, _Attribute"
  },
  "api/D3T.DevTools.DevConsole.LogMessage.html": {
    "href": "api/D3T.DevTools.DevConsole.LogMessage.html",
    "title": "Class DevConsole.LogMessage | D3T - Core | 0.9.34",
    "keywords": "Class DevConsole.LogMessage Inheritance Object DevConsole.LogMessage Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LogMessage Constructors LogMessage(String, LogType) Declaration public LogMessage(string msg, LogType type) Parameters Type Name Description String msg LogType type Fields collapsedCount Declaration public int collapsedCount Field Value Type Description Int32 logType Declaration public LogType logType Field Value Type Description LogType message Declaration public string message Field Value Type Description String time Declaration public int time Field Value Type Description Int32 timeStr Declaration public string timeStr Field Value Type Description String Methods Draw(Color) Declaration public void Draw(Color defaultColor) Parameters Type Name Description Color defaultColor TryMerge(DevConsole.LogMessage) Declaration public bool TryMerge(DevConsole.LogMessage other) Parameters Type Name Description DevConsole.LogMessage other Returns Type Description Boolean TryMerge(String, LogType) Declaration public bool TryMerge(string msg, LogType type) Parameters Type Name Description String msg LogType type Returns Type Description Boolean"
  },
  "api/D3T.DevTools.DevConsole.CommandDelegate.html": {
    "href": "api/D3T.DevTools.DevConsole.CommandDelegate.html",
    "title": "Delegate DevConsole.CommandDelegate | D3T - Core | 0.9.34",
    "keywords": "Delegate DevConsole.CommandDelegate Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate bool CommandDelegate(string[] args); Parameters Type Name Description String [] args Returns Type Description Boolean"
  },
  "api/D3T.NullableFloat.html": {
    "href": "api/D3T.NullableFloat.html",
    "title": "Struct NullableFloat | D3T - Core | 0.9.34",
    "keywords": "Struct NullableFloat Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct NullableFloat : INullableValue<float> Constructors NullableFloat(Boolean, Single) Declaration public NullableFloat(bool hasStartValue, float startValue) Parameters Type Name Description Boolean hasStartValue Single startValue NullableFloat(Nullable<Single>, Single) Declaration public NullableFloat(float? startValue, float defaultValue = 0F) Parameters Type Name Description Nullable < Single > startValue Single defaultValue Fields backingValue Declaration public float backingValue Field Value Type Description Single Properties HasValue Declaration public bool HasValue { get; set; } Property Value Type Description Boolean Implements INullableValue<T>.HasValue Nullable Declaration public float? Nullable { get; } Property Value Type Description Nullable < Single > Implements INullableValue<T>.Nullable Value Declaration public float Value { get; set; } Property Value Type Description Single Implements INullableValue<T>.Value Methods GetOrDefault(Single) Declaration public float GetOrDefault(float defaultValue) Parameters Type Name Description Single defaultValue Returns Type Description Single Implements INullableValue<T>.GetOrDefault(T) Operators Implicit(NullableFloat to Boolean) Declaration public static implicit operator bool (NullableFloat v) Parameters Type Name Description NullableFloat v Returns Type Description Boolean Implicit(NullableFloat to Nullable<Single>) Declaration public static implicit operator float? (NullableFloat v) Parameters Type Name Description NullableFloat v Returns Type Description Nullable < Single >"
  },
  "api/D3T.L10N.html": {
    "href": "api/D3T.L10N.html",
    "title": "Namespace D3T.L10N | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.L10N Classes L10NAttribute Add this attribute to a string to draw a localized string below the text field. LanguageDictionary Dictionary containing all localized strings for a language. LocalizationExtensions Localizer Manager class for localizing strings into different languages. LocalizerCommands"
  },
  "api/D3T.L10N.L10NAttribute.html": {
    "href": "api/D3T.L10N.L10NAttribute.html",
    "title": "Class L10NAttribute | D3T - Core | 0.9.34",
    "keywords": "Class L10NAttribute Add this attribute to a string to draw a localized string below the text field. Inheritance Object L10NAttribute Namespace : D3T.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class L10NAttribute : PropertyAttribute"
  },
  "api/D3T.INullableValue-1.html": {
    "href": "api/D3T.INullableValue-1.html",
    "title": "Interface INullableValue<T> | D3T - Core | 0.9.34",
    "keywords": "Interface INullableValue<T> Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface INullableValue<T> where T : struct Type Parameters Name Description T Properties HasValue Declaration bool HasValue { get; set; } Property Value Type Description Boolean Nullable Declaration T? Nullable { get; } Property Value Type Description Nullable <T> Value Declaration T Value { get; set; } Property Value Type Description T Methods GetOrDefault(T) Declaration T GetOrDefault(T defaultValue) Parameters Type Name Description T defaultValue Returns Type Description T"
  },
  "api/D3T.InstancePool-1.html": {
    "href": "api/D3T.InstancePool-1.html",
    "title": "Class InstancePool<T> | D3T - Core | 0.9.34",
    "keywords": "Class InstancePool<T> Inheritance Object InstancePool<T> Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class InstancePool<T> where T : Component Type Parameters Name Description T Constructors InstancePool(Int32, Func<T>, Action<T>, Action<T>, Boolean) Declaration public InstancePool(int maxPoolSize, Func<T> instantiator = null, Action<T> activator = null, Action<T> deactivator = null, bool hideInstancesInHierarchy = true) Parameters Type Name Description Int32 maxPoolSize Func <T> instantiator Action <T> activator Action <T> deactivator Boolean hideInstancesInHierarchy Fields activator Declaration public Action<T> activator Field Value Type Description Action <T> alwaysDeactivateOldest Declaration public bool alwaysDeactivateOldest Field Value Type Description Boolean deactivator Declaration public Action<T> deactivator Field Value Type Description Action <T> hideInstancesInHierarchy Declaration public bool hideInstancesInHierarchy Field Value Type Description Boolean instantiator Declaration public Func<T> instantiator Field Value Type Description Func <T> maxPoolSize Declaration public int maxPoolSize Field Value Type Description Int32 Properties ActiveCount Declaration public int ActiveCount { get; } Property Value Type Description Int32 InactiveCount Declaration public int InactiveCount { get; } Property Value Type Description Int32 TotalCount Declaration public int TotalCount { get; } Property Value Type Description Int32 Methods ActivateInstance() Declaration public T ActivateInstance() Returns Type Description T Finalize() Declaration protected void Finalize() ForceActivateInstance() Declaration public T ForceActivateInstance() Returns Type Description T ReleaseInstance(T) Declaration public void ReleaseInstance(T inst) Parameters Type Name Description T inst"
  },
  "api/D3T.InputManager.Axis.html": {
    "href": "api/D3T.InputManager.Axis.html",
    "title": "Class InputManager.Axis | D3T - Core | 0.9.34",
    "keywords": "Class InputManager.Axis An input axis with an input state in the -1..1 range. Inheritance Object InputManager.Axis Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Axis Constructors Axis(String, InputManager.Button, InputManager.Button) Declaration public Axis(string n, InputManager.Button pos, InputManager.Button neg) Parameters Type Name Description String n InputManager.Button pos InputManager.Button neg Fields name Declaration public readonly string name Field Value Type Description String nameHash Declaration public readonly short nameHash Field Value Type Description Int16 negative Declaration public InputManager.Button negative Field Value Type Description InputManager.Button positive Declaration public InputManager.Button positive Field Value Type Description InputManager.Button Methods ClearPrefs() Declaration public void ClearPrefs() GetInput() Declaration public float GetInput() Returns Type Description Single LoadFromPrefs(String, String, KeyCode, String, KeyCode) Declaration public static InputManager.Axis LoadFromPrefs(string name, string positiveName, KeyCode defaultKeyPos, string negativeName, KeyCode defaultKeyNeg) Parameters Type Name Description String name String positiveName KeyCode defaultKeyPos String negativeName KeyCode defaultKeyNeg Returns Type Description InputManager.Axis WriteToPrefs() Declaration public void WriteToPrefs() Operators Implicit(InputManager.Axis to Single) Declaration public static implicit operator float (InputManager.Axis a) Parameters Type Name Description InputManager.Axis a Returns Type Description Single"
  },
  "api/D3T.Animation.SpinAnimation.html": {
    "href": "api/D3T.Animation.SpinAnimation.html",
    "title": "Class SpinAnimation | D3T - Core | 0.9.34",
    "keywords": "Class SpinAnimation Use this component to have objects spin around their Y axis. Inheritance Object SpinAnimation Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SpinAnimation : MonoBehaviour, ISerializable Fields degreesPerSecond Declaration public float degreesPerSecond Field Value Type Description Single globalAxis Declaration public bool globalAxis Field Value Type Description Boolean Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.DevTools.CmdArgs-3.html": {
    "href": "api/D3T.DevTools.CmdArgs-3.html",
    "title": "Class CmdArgs<T0, T1, T2> | D3T - Core | 0.9.34",
    "keywords": "Class CmdArgs<T0, T1, T2> Inheritance Object CmdArgs CmdArgs<T0, T1, T2> Inherited Members CmdArgs.Parse<T>(String) CmdArgs.Parse<C>(String[], Int32, C, Boolean) Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CmdArgs<T0, T1, T2> : CmdArgs Type Parameters Name Description T0 T1 T2 Fields arg0 Declaration public T0 arg0 Field Value Type Description T0 arg1 Declaration public T1 arg1 Field Value Type Description T1 arg2 Declaration public T2 arg2 Field Value Type Description T2 Methods ParseArgs(String[]) Declaration protected override void ParseArgs(string[] args) Parameters Type Name Description String [] args Overrides CmdArgs.ParseArgs(String[])"
  },
  "api/D3T.DevTools.CmdArgs-2.html": {
    "href": "api/D3T.DevTools.CmdArgs-2.html",
    "title": "Class CmdArgs<T0, T1> | D3T - Core | 0.9.34",
    "keywords": "Class CmdArgs<T0, T1> Inheritance Object CmdArgs CmdArgs<T0, T1> Inherited Members CmdArgs.Parse<T>(String) CmdArgs.Parse<C>(String[], Int32, C, Boolean) Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CmdArgs<T0, T1> : CmdArgs Type Parameters Name Description T0 T1 Fields arg0 Declaration public T0 arg0 Field Value Type Description T0 arg1 Declaration public T1 arg1 Field Value Type Description T1 Methods ParseArgs(String[]) Declaration protected override void ParseArgs(string[] args) Parameters Type Name Description String [] args Overrides CmdArgs.ParseArgs(String[])"
  },
  "api/D3T.CommonMaterials.html": {
    "href": "api/D3T.CommonMaterials.html",
    "title": "Class CommonMaterials | D3T - Core | 0.9.34",
    "keywords": "Class CommonMaterials A collection of commonly used default materials. Inheritance Object CommonMaterials Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CommonMaterials Fields zoneDebugFont Declaration public static TextureFontAsset zoneDebugFont Field Value Type Description TextureFontAsset Properties TriplanarChecker Declaration public static Material TriplanarChecker { get; } Property Value Type Description Material TriplanarGrid Declaration public static Material TriplanarGrid { get; } Property Value Type Description Material Zone Declaration public static Material Zone { get; } Property Value Type Description Material"
  },
  "api/D3T.Triggers.AreaCheckCondition.Shape.html": {
    "href": "api/D3T.Triggers.AreaCheckCondition.Shape.html",
    "title": "Enum AreaCheckCondition.Shape | D3T - Core | 0.9.34",
    "keywords": "Enum AreaCheckCondition.Shape Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Shape Fields Name Description Cuboid Sphere"
  },
  "api/D3T.SingletonPointer.html": {
    "href": "api/D3T.SingletonPointer.html",
    "title": "Class SingletonPointer | D3T - Core | 0.9.34",
    "keywords": "Class SingletonPointer Registers the specified component in a named singleton dictionary for global access. Inheritance Object SingletonPointer Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SingletonPointer : MonoBehaviour Fields action Declaration public SingletonPointer.Action action Field Value Type Description SingletonPointer.Action identifier Declaration public string identifier Field Value Type Description String singleton Declaration public Component singleton Field Value Type Description Component Methods Get<T>(String) Declaration public static T Get<T>(string identifier) where T : Component Parameters Type Name Description String identifier Returns Type Description T Type Parameters Name Description T"
  },
  "api/D3T.L10N.Localizer.html": {
    "href": "api/D3T.L10N.Localizer.html",
    "title": "Class Localizer | D3T - Core | 0.9.34",
    "keywords": "Class Localizer Manager class for localizing strings into different languages. Inheritance Object Localizer Namespace : D3T.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class Localizer Fields availableLanguages Declaration public static List<LanguageDictionary> availableLanguages Field Value Type Description List < LanguageDictionary > bypassLocalizationString Declaration public const string bypassLocalizationString = \"*\" Field Value Type Description String currentLanguage Declaration public static LanguageDictionary currentLanguage Field Value Type Description LanguageDictionary defaultID Declaration public static string defaultID Field Value Type Description String defaultLanguage Declaration public static LanguageDictionary defaultLanguage Field Value Type Description LanguageDictionary logMissingKeys Declaration public static bool logMissingKeys Field Value Type Description Boolean Properties AllLangs Declaration public static string[] AllLangs { get; } Property Value Type Description String [] CurrentLangIndex Declaration public static int CurrentLangIndex { get; } Property Value Type Description Int32 IsInitialized Declaration public static bool IsInitialized { get; } Property Value Type Description Boolean RootDirectory Declaration public static string RootDirectory { get; } Property Value Type Description String Methods GetKeys(String) Declaration public static string[] GetKeys(string search) Parameters Type Name Description String search Returns Type Description String [] GetLocalizedString(String) Declaration public static string GetLocalizedString(string key) Parameters Type Name Description String key Returns Type Description String GetLocalizedString(String, LanguageDictionary) Declaration public static string GetLocalizedString(string key, LanguageDictionary language) Parameters Type Name Description String key LanguageDictionary language Returns Type Description String GetLocalizedString(String, String) Declaration public static string GetLocalizedString(string key, string language) Parameters Type Name Description String key String language Returns Type Description String HasLanguageInstalled(String) Declaration public static bool HasLanguageInstalled(string lang) Parameters Type Name Description String lang Returns Type Description Boolean Init() Declaration public static void Init() Reload() Declaration public static void Reload() SetLanguage(Int32) Declaration public static void SetLanguage(int index) Parameters Type Name Description Int32 index SetLanguage(String) Declaration public static void SetLanguage(string langID) Parameters Type Name Description String langID TryGetLocalizedString(String, LanguageDictionary, out String) Declaration public static bool TryGetLocalizedString(string key, LanguageDictionary language, out string localized) Parameters Type Name Description String key LanguageDictionary language String localized Returns Type Description Boolean TryGetLocalizedString(String, out String) Declaration public static bool TryGetLocalizedString(string key, out string localized) Parameters Type Name Description String key String localized Returns Type Description Boolean Events OnLanguageChanged Declaration public static event Action OnLanguageChanged Event Type Type Description Action"
  },
  "api/D3T.L10N.LocalizationExtensions.html": {
    "href": "api/D3T.L10N.LocalizationExtensions.html",
    "title": "Class LocalizationExtensions | D3T - Core | 0.9.34",
    "keywords": "Class LocalizationExtensions Inheritance Object LocalizationExtensions Namespace : D3T.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class LocalizationExtensions Methods Localize(String) Declaration public static string Localize(this string str) Parameters Type Name Description String str Returns Type Description String Localize(String, String) Declaration public static string Localize(this string str, string lang) Parameters Type Name Description String str String lang Returns Type Description String LocalizeOrDefault(String, String) Declaration public static string LocalizeOrDefault(this string str, string defaultString) Parameters Type Name Description String str String defaultString Returns Type Description String TryLocalize(String, out String) Declaration public static bool TryLocalize(this string str, out string localized) Parameters Type Name Description String str String localized Returns Type Description Boolean"
  },
  "api/D3T.L10N.LanguageDictionary.html": {
    "href": "api/D3T.L10N.LanguageDictionary.html",
    "title": "Class LanguageDictionary | D3T - Core | 0.9.34",
    "keywords": "Class LanguageDictionary Dictionary containing all localized strings for a language. Inheritance Object LanguageDictionary Namespace : D3T.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LanguageDictionary Constructors LanguageDictionary(String) Declaration public LanguageDictionary(string ID) Parameters Type Name Description String ID Fields dictionary Declaration public Dictionary<string, string> dictionary Field Value Type Description Dictionary < String , String > langID Declaration public string langID Field Value Type Description String Methods GetKeys(String) Declaration public string[] GetKeys(string search) Parameters Type Name Description String search Returns Type Description String []"
  },
  "api/D3T.InputInitAttribute.html": {
    "href": "api/D3T.InputInitAttribute.html",
    "title": "Class InputInitAttribute | D3T - Core | 0.9.34",
    "keywords": "Class InputInitAttribute Add this attribute to static methods to have them initialize when the InputManager is loaded. Inheritance Object Attribute InputInitAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)] public class InputInitAttribute : Attribute, _Attribute"
  },
  "api/D3T.Initializer.html": {
    "href": "api/D3T.Initializer.html",
    "title": "Class Initializer | D3T - Core | 0.9.34",
    "keywords": "Class Initializer Inheritance Object Initializer Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class Initializer Methods CallStaticMethods(IEnumerable<MethodInfo>, Boolean, Object[]) Calls all static methods in the array. Declaration public static void CallStaticMethods(IEnumerable<MethodInfo> methods, bool allowParameterlessMethods, params object[] parameters) Parameters Type Name Description IEnumerable < MethodInfo > methods Boolean allowParameterlessMethods Object [] parameters InitializeStaticMethods<T>(Boolean, Object[]) Initialize all static methods in all game assemblies with this attribute. Declaration public static void InitializeStaticMethods<T>(bool allowParameterlessMethods, object[] parameters = null) where T : Attribute Parameters Type Name Description Boolean allowParameterlessMethods Object [] parameters Type Parameters Name Description T"
  },
  "api/D3T.IDamageable.html": {
    "href": "api/D3T.IDamageable.html",
    "title": "Interface IDamageable | D3T - Core | 0.9.34",
    "keywords": "Interface IDamageable Interface for receiving damage callbacks. Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IDamageable Methods Hit(Single, String) Declaration void Hit(float damage, string damageType) Parameters Type Name Description Single damage String damageType"
  },
  "api/D3T.Gui.html": {
    "href": "api/D3T.Gui.html",
    "title": "Namespace D3T.Gui | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Gui Classes Crosshair UI script component for rendering dynamic crosshairs. Crosshair.EightPartCrosshair CustomFadeSettings GUIChangeAttribute Add this attribute to a static method to have it called when the current GUI menu has changed. GUIElement Base class for adding GUI elements to the GUI handler. GUIHandler Manager class for displaying and handling IMGUI elements and menus. GUIHandler.GuiChangeInfo GUIHandler.GuiInfo GUIInitAttribute Add this attribute to a static method to have it initialized when the GUI handler is being loaded. GUIStyleCollection Runtime representation of a GUIStyleCollection asset. GUIStyleCollectionAsset GUIStyleCollectionAsset.GUISkinAutoGenerationData GUIStyleCollectionAsset.NamedAudioClip GUIStyleCollectionAsset.NamedColor GUIStyleCollectionAsset.NamedFloat GUIStyleCollectionAsset.NamedObject GUIStyleCollectionAsset.NamedRect GUIStyleCollectionAsset.NamedTexture2D GUIStyleCollectionAsset.NamedValue<T> GUIStyleCollectionAsset.NamedVector MenuElement Base class for adding menu elements to the GUI handler that can be interacted with. MouseEventReceiver Base class for receiving mouse events in 3D GUI elements. ScreenFader Manager class for rendering screen fades. TextGuiWriterBase Base class for receiving text messages that should be displayed on the screen. TextGuiWriterBase.TextElement Enums GUIChangeCallType GUIElement.ElementDrawMode GUIElement.ElementOrder MenuElement.ElementPauseOption"
  },
  "api/D3T.Gui.MenuElement.html": {
    "href": "api/D3T.Gui.MenuElement.html",
    "title": "Class MenuElement | D3T - Core | 0.9.34",
    "keywords": "Class MenuElement Base class for adding menu elements to the GUI handler that can be interacted with. Inheritance Object GUIElement MenuElement DevConsole Inherited Members GUIElement.ID GUIElement.Order GUIElement.DrawMode GUIElement.Init() GUIElement.OnGUI(Single, Boolean) Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class MenuElement : GUIElement Fields menuClosedTime Declaration protected float menuClosedTime Field Value Type Description Single menuOpenTime Declaration protected float menuOpenTime Field Value Type Description Single Properties FadeInDuration Declaration protected virtual float? FadeInDuration { get; } Property Value Type Description Nullable < Single > FadeOutDuration Declaration protected virtual float? FadeOutDuration { get; } Property Value Type Description Nullable < Single > Is3dGui Declaration public virtual bool Is3dGui { get; } Property Value Type Description Boolean PauseOption Declaration public virtual MenuElement.ElementPauseOption PauseOption { get; } Property Value Type Description MenuElement.ElementPauseOption Methods Close() Declaration public void Close() DrawIMGUI() Declaration public override void DrawIMGUI() Overrides GUIElement.DrawIMGUI() GetOpacity() Declaration protected float GetOpacity() Returns Type Description Single IsOpen(String) Declaration public virtual bool IsOpen(string currentMenuID) Parameters Type Name Description String currentMenuID Returns Type Description Boolean OnClose() Declaration public virtual void OnClose() OnOpen() Declaration public virtual void OnOpen() OnUpdate(Boolean) Declaration public virtual void OnUpdate(bool drawing) Parameters Type Name Description Boolean drawing Open() Declaration public void Open() ShoudDraw(String) Declaration public override bool ShoudDraw(string currentMenuID) Parameters Type Name Description String currentMenuID Returns Type Description Boolean Overrides GUIElement.ShoudDraw(String) Update(Boolean) Declaration public void Update(bool drawing) Parameters Type Name Description Boolean drawing"
  },
  "api/D3T.Triggers.PlayMusic.html": {
    "href": "api/D3T.Triggers.PlayMusic.html",
    "title": "Class PlayMusic | D3T - Core | 0.9.34",
    "keywords": "Class PlayMusic Plays a music clip. Inheritance Object TriggerComponent TriggerAction PlayMusic Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayMusic : TriggerAction, ISignalLink, ISerializable Fields forceNoFade Declaration public bool forceNoFade Field Value Type Description Boolean musicClip Declaration public AudioClipSettings musicClip Field Value Type Description AudioClipSettings negativeStateMusicClip Declaration public AudioClipSettings negativeStateMusicClip Field Value Type Description AudioClipSettings Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.PlayAnimatorState.html": {
    "href": "api/D3T.Triggers.PlayAnimatorState.html",
    "title": "Class PlayAnimatorState | D3T - Core | 0.9.34",
    "keywords": "Class PlayAnimatorState Plays animator states depending on the given input. Inheritance Object TriggerComponent TriggerAction PlayAnimatorState Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayAnimatorState : TriggerAction, ISignalLink, ISerializable Fields animator Declaration [ReferenceRequiresComponent(typeof(Animator))] public SceneObjectReference animator Field Value Type Description SceneObjectReference negativeInputStateName Declaration public string negativeInputStateName Field Value Type Description String positiveInputStateName Declaration public string positiveInputStateName Field Value Type Description String Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.ObjectsInArea.html": {
    "href": "api/D3T.Triggers.ObjectsInArea.html",
    "title": "Class ObjectsInArea | D3T - Core | 0.9.34",
    "keywords": "Class ObjectsInArea Checks if any or all objects are within the target area. Inheritance Object TriggerComponent TriggerCondition AreaCheckCondition ObjectsInArea Inherited Members AreaCheckCondition.shape AreaCheckCondition.pivot AreaCheckCondition.useWorldPos AreaCheckCondition.center AreaCheckCondition.size AreaCheckCondition.radius AreaCheckCondition.condition AreaCheckCondition.Evaluate() AreaCheckCondition.OnGizmos(Boolean) TriggerCondition.DefaultGizmosColor TriggerCondition.invertCondition TriggerCondition.EvaluateCondition() TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ObjectsInArea : AreaCheckCondition Fields targets Declaration public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods GetTargets() Declaration protected override SceneObjectReference[] GetTargets() Returns Type Description SceneObjectReference [] Overrides AreaCheckCondition.GetTargets()"
  },
  "api/D3T.StaticClassController.html": {
    "href": "api/D3T.StaticClassController.html",
    "title": "Class StaticClassController | D3T - Core | 0.9.34",
    "keywords": "Class StaticClassController The StaticClassController is used to invoke call static classe methods during various Unity script events. Inheritance Object StaticClassController Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StaticClassController : MonoBehaviour Fields gameSettings Declaration public static GameSettings gameSettings Field Value Type Description GameSettings instance Declaration public static StaticClassController instance Field Value Type Description StaticClassController Methods InitializeSettings() Declaration public static void InitializeSettings() Events FirstUpdateEvent Subscrive to this event to have the method be called during the very first Update() step. Declaration public static event Action FirstUpdateEvent Event Type Type Description Action FixedUpdateEvent Subscrive to this event to have the method be called during the FixedUpdate() step. Declaration public static event Action FixedUpdateEvent Event Type Type Description Action OnGUIEvent Subscrive to this event to have the method be called during the OnGUI() step. Declaration public static event Action OnGUIEvent Event Type Type Description Action UpdateEvent Subscrive to this event to have the method be called during the Update() step. Declaration public static event Action UpdateEvent Event Type Type Description Action"
  },
  "api/D3T.Serialization.SerializeVarAttribute.html": {
    "href": "api/D3T.Serialization.SerializeVarAttribute.html",
    "title": "Class SerializeVarAttribute | D3T - Core | 0.9.34",
    "keywords": "Class SerializeVarAttribute Enables automatic serialization/deserialization of this member in saves. Inheritance Object Attribute SerializeVarAttribute Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, AllowMultiple = false)] public class SerializeVarAttribute : Attribute, _Attribute Constructors SerializeVarAttribute(String) Declaration public SerializeVarAttribute(string customKeyName = null) Parameters Type Name Description String customKeyName Fields customKeyName Declaration public string customKeyName Field Value Type Description String"
  },
  "api/D3T.Serialization.SerializeTransform.html": {
    "href": "api/D3T.Serialization.SerializeTransform.html",
    "title": "Class SerializeTransform | D3T - Core | 0.9.34",
    "keywords": "Class SerializeTransform Includes the transform's position, rotation and scale when saving the game. Inheritance Object SerializeTransform Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SerializeTransform : MonoBehaviour, ISerializable Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer)"
  },
  "api/D3T.Serialization.SerializationUtility.html": {
    "href": "api/D3T.Serialization.SerializationUtility.html",
    "title": "Class SerializationUtility | D3T - Core | 0.9.34",
    "keywords": "Class SerializationUtility Utility class for saving common components and iterate over serialized members. Inheritance Object SerializationUtility Namespace : D3T.Serialization <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class SerializationUtility Methods IsTypeSupported(Type) Does the given type support native serialization? Declaration public static bool IsTypeSupported(Type type) Parameters Type Name Description Type type Returns Type Description Boolean LoadAnimator(DataContainer, Animator) Loads all parameters from the given animator and plays the saved states. Declaration public static DataContainer LoadAnimator(DataContainer container, Animator anim) Parameters Type Name Description DataContainer container Animator anim Returns Type Description DataContainer LoadMarkedFields(MonoBehaviour, DataContainer) Loads all fields and properties marked with [SerializeVar] attribute on the given component. Declaration public static void LoadMarkedFields(MonoBehaviour behaviour, DataContainer container) Parameters Type Name Description MonoBehaviour behaviour DataContainer container LoadRigidbody(DataContainer, Rigidbody) Loads the rigidbody's current state, including it's position and rotation. Declaration public static DataContainer LoadRigidbody(DataContainer container, Rigidbody rigidbody) Parameters Type Name Description DataContainer container Rigidbody rigidbody Returns Type Description DataContainer LoadTransform(DataContainer, Transform) Loads the transform's position, rotation and scale (if available). Declaration public static DataContainer LoadTransform(DataContainer container, Transform transform) Parameters Type Name Description DataContainer container Transform transform Returns Type Description DataContainer SaveAnimator(DataContainer, Animator) Saves all current states and parameters from the given animator. Declaration public static DataContainer SaveAnimator(DataContainer container, Animator anim) Parameters Type Name Description DataContainer container Animator anim Returns Type Description DataContainer SaveMarkedFields(MonoBehaviour, DataContainer) Saves all fields and properties marked with [SerializeVar] attribute on the given component. Declaration public static void SaveMarkedFields(MonoBehaviour behaviour, DataContainer container) Parameters Type Name Description MonoBehaviour behaviour DataContainer container SaveRigidbody(DataContainer, Rigidbody) Saves the rigidbody's current state, including it's position and rotation. Declaration public static DataContainer SaveRigidbody(DataContainer container, Rigidbody rigidbody) Parameters Type Name Description DataContainer container Rigidbody rigidbody Returns Type Description DataContainer SaveTransform(DataContainer, Transform, Boolean) Saves the transform's positon and rotation and optionally it's scale. Declaration public static DataContainer SaveTransform(DataContainer container, Transform transform, bool includeScale = false) Parameters Type Name Description DataContainer container Transform transform Boolean includeScale Returns Type Description DataContainer"
  },
  "api/D3T.Utility.DownloadUtility.DownloadState.html": {
    "href": "api/D3T.Utility.DownloadUtility.DownloadState.html",
    "title": "Enum DownloadUtility.DownloadState | D3T - Core | 0.9.34",
    "keywords": "Enum DownloadUtility.DownloadState Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum DownloadState Fields Name Description Done Downloading Failed"
  },
  "api/D3T.Utility.CreateAnimationClipButtonAttribute.html": {
    "href": "api/D3T.Utility.CreateAnimationClipButtonAttribute.html",
    "title": "Class CreateAnimationClipButtonAttribute | D3T - Core | 0.9.34",
    "keywords": "Class CreateAnimationClipButtonAttribute Add this attribute to an animation clip field to add a button that creates a new Animation Clip. Inheritance Object CreateAnimationClipButtonAttribute Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CreateAnimationClipButtonAttribute : PropertyAttribute"
  },
  "api/D3T.UserPrefSaveAttribute.html": {
    "href": "api/D3T.UserPrefSaveAttribute.html",
    "title": "Class UserPrefSaveAttribute | D3T - Core | 0.9.34",
    "keywords": "Class UserPrefSaveAttribute Add this attribute to a static method to have it called before the user preferences are saved. Inheritance Object Attribute UserPrefSaveAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UserPrefSaveAttribute : Attribute, _Attribute"
  },
  "api/D3T.UserPrefLoadAttribute.html": {
    "href": "api/D3T.UserPrefLoadAttribute.html",
    "title": "Class UserPrefLoadAttribute | D3T - Core | 0.9.34",
    "keywords": "Class UserPrefLoadAttribute Add this attribute to a static method to have it called right after the user preferences have been loaded. Inheritance Object Attribute UserPrefLoadAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UserPrefLoadAttribute : Attribute, _Attribute"
  },
  "api/D3T.UserPreferences.html": {
    "href": "api/D3T.UserPreferences.html",
    "title": "Class UserPreferences | D3T - Core | 0.9.34",
    "keywords": "Class UserPreferences Static class containing all possible user preferences for customizing a game. Inheritance Object UserPreferences Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class UserPreferences Properties BinarySerialization Declaration public static bool BinarySerialization { get; set; } Property Value Type Description Boolean CameraFieldOfView The desired default field of view of any camera that supports it. Declaration public static float CameraFieldOfView { get; set; } Property Value Type Description Single InputPrefs The DataContainer containing all input related settings. Declaration public static DataContainer InputPrefs { get; } Property Value Type Description DataContainer TargetFrameRate The target frame rate the game should run at. Declaration public static int TargetFrameRate { get; set; } Property Value Type Description Int32 Methods GetPref<T>(String, T) Returns the preference named key or initializes it using the fallback value if it isn't in the dictionary or it's type isn't T. Declaration public static T GetPref<T>(string key, T fallback = null) Parameters Type Name Description String key T fallback Returns Type Description T Type Parameters Name Description T HasPref<T>(String) Checks if the given preference is in the dictionary and if it's type matches T. Declaration public static bool HasPref<T>(string key) Parameters Type Name Description String key Returns Type Description Boolean Type Parameters Name Description T Initialize() Declaration public static void Initialize() Save() Saves the current prefs to the preferences file. Declaration public static void Save() SetPref<T>(String, T) Sets or adds a custom preference value to the dictionary. Declaration public static void SetPref<T>(string key, T value) Parameters Type Name Description String key T value Type Parameters Name Description T"
  },
  "api/D3T.UserPreferences.AudioVolumeLevels.html": {
    "href": "api/D3T.UserPreferences.AudioVolumeLevels.html",
    "title": "Class UserPreferences.AudioVolumeLevels | D3T - Core | 0.9.34",
    "keywords": "Class UserPreferences.AudioVolumeLevels Inheritance Object UserPreferences.AudioVolumeLevels Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AudioVolumeLevels Properties FXVolume Declaration public static float FXVolume { get; set; } Property Value Type Description Single InterfaceVolume Declaration public static float InterfaceVolume { get; set; } Property Value Type Description Single MasterVolume Declaration public static float MasterVolume { get; set; } Property Value Type Description Single MusicVolume Declaration public static float MusicVolume { get; set; } Property Value Type Description Single"
  },
  "api/D3T.Triggers.html": {
    "href": "api/D3T.Triggers.html",
    "title": "Namespace D3T.Triggers | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Triggers Classes ApplyDamage Applies damage to the given targets. AreaCheckCondition Base class for area-based check conditions. MoveTransform Moves the target transforms towards the given destination or with a specified offset. ObjectsInArea Checks if any or all objects are within the target area. PlayAnimatorState Plays animator states depending on the given input. PlayMusic Plays a music clip. PlaySound Plays a sound on the target AudioSource. PrintMessage Prints a message to the console log. ReferenceRequiresComponentAttribute Add this attribute to a SceneObjectReference to define what component is required on the target. SceneObjectReference A transform reference that can also be accessed by the TriggerController's reference index. SendSignal Sends a signal to the specified targets. SignalSender Manager class for sending signals to target objects. SignalTargetAttribute Add this attribute to a transform or component field to check the target for signal links from the inspector. StaticCondition A placeholder or debugger condition that evaluates to it's internal boolean value. StopMusic Stops any currently playing music. TimedDestroy Destroys the attached GameObject in a given amount of time. TriggerAction Base class for Trigger Action components. TriggerAction.ExecutionSettings TriggerComponent Base class for both Trigger conditions and actions. TriggerCondition Base class for Trigger Condition components. TriggerController Root component for controlling the execution of a Trigger. Interfaces ISignalLink Interface for receiving Trigger signals. Enums AreaCheckCondition.ConditionType AreaCheckCondition.Shape MoveTransform.Mode PrintMessage.LogType TriggerAction.ExecutionSettings.SignalCondition TriggerAction.ExecutionSettings.SignalModification TriggerController.ActionExecutionType TriggerController.UpdateRate"
  },
  "api/D3T.Triggers.MoveTransform.Mode.html": {
    "href": "api/D3T.Triggers.MoveTransform.Mode.html",
    "title": "Enum MoveTransform.Mode | D3T - Core | 0.9.34",
    "keywords": "Enum MoveTransform.Mode Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Mode Fields Name Description ApplyOffset MoveToDestination"
  },
  "api/D3T.Triggers.ISignalLink.html": {
    "href": "api/D3T.Triggers.ISignalLink.html",
    "title": "Interface ISignalLink | D3T - Core | 0.9.34",
    "keywords": "Interface ISignalLink Interface for receiving Trigger signals. Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ISignalLink Methods OnReceiveSignal(Boolean, Int32) Declaration bool OnReceiveSignal(bool state, int extraData) Parameters Type Name Description Boolean state Int32 extraData Returns Type Description Boolean"
  },
  "api/D3T.Triggers.Effects.html": {
    "href": "api/D3T.Triggers.Effects.html",
    "title": "Namespace D3T.Triggers.Effects | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Triggers.Effects Classes SignalSequencer Sends a timed sequence of signals to different receivers. SignalSequencer.SignalSettings Enums SignalSequencer.SignalState"
  },
  "api/D3T.Triggers.Effects.SignalSequencer.html": {
    "href": "api/D3T.Triggers.Effects.SignalSequencer.html",
    "title": "Class SignalSequencer | D3T - Core | 0.9.34",
    "keywords": "Class SignalSequencer Sends a timed sequence of signals to different receivers. Inheritance Object TriggerComponent TriggerAction SignalSequencer Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Effects <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SignalSequencer : TriggerAction, ISignalLink, ISerializable Fields targets Declaration public SignalSequencer.SignalSettings[] targets Field Value Type Description SignalSequencer.SignalSettings [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Effects.SignalSequencer.SignalState.html": {
    "href": "api/D3T.Triggers.Effects.SignalSequencer.SignalState.html",
    "title": "Enum SignalSequencer.SignalState | D3T - Core | 0.9.34",
    "keywords": "Enum SignalSequencer.SignalState Namespace : D3T.Triggers.Effects <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public enum SignalState Fields Name Description False SameAsInput True"
  },
  "api/D3TEditor.L10N.LanguageEditor.AddKeyWindow.html": {
    "href": "api/D3TEditor.L10N.LanguageEditor.AddKeyWindow.html",
    "title": "Class LanguageEditor.AddKeyWindow | D3T - Core | 0.9.34",
    "keywords": "Class LanguageEditor.AddKeyWindow Inheritance Object LanguageEditor.AddKeyWindow Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AddKeyWindow : EditorWindow Fields key Declaration public string key Field Value Type Description String loc Declaration public LanguageEditor loc Field Value Type Description LanguageEditor value1 Declaration public string value1 Field Value Type Description String value2 Declaration public string value2 Field Value Type Description String Methods Init(LanguageEditor) Declaration public void Init(LanguageEditor l) Parameters Type Name Description LanguageEditor l"
  },
  "api/D3TEditor.L10N.L10NAttributeDrawer.html": {
    "href": "api/D3TEditor.L10N.L10NAttributeDrawer.html",
    "title": "Class L10NAttributeDrawer | D3T - Core | 0.9.34",
    "keywords": "Class L10NAttributeDrawer Inheritance Object L10NAttributeDrawer Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class L10NAttributeDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.L10N.CheckForComponentsAttributeDrawer.html": {
    "href": "api/D3TEditor.L10N.CheckForComponentsAttributeDrawer.html",
    "title": "Class CheckForComponentsAttributeDrawer | D3T - Core | 0.9.34",
    "keywords": "Class CheckForComponentsAttributeDrawer Inheritance Object CheckForComponentsAttributeDrawer Namespace : D3TEditor.L10N <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CheckForComponentsAttributeDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3T.Triggers.SignalTargetAttribute.html": {
    "href": "api/D3T.Triggers.SignalTargetAttribute.html",
    "title": "Class SignalTargetAttribute | D3T - Core | 0.9.34",
    "keywords": "Class SignalTargetAttribute Add this attribute to a transform or component field to check the target for signal links from the inspector. Inheritance Object SignalTargetAttribute Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SignalTargetAttribute : PropertyAttribute"
  },
  "api/D3T.Triggers.SignalSender.html": {
    "href": "api/D3T.Triggers.SignalSender.html",
    "title": "Class SignalSender | D3T - Core | 0.9.34",
    "keywords": "Class SignalSender Manager class for sending signals to target objects. Inheritance Object SignalSender Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class SignalSender Methods GetLinks(Transform, Boolean) Returns all signal receivers on the target object. Declaration public static ISignalLink[] GetLinks(Transform t, bool includeChildren) Parameters Type Name Description Transform t Boolean includeChildren Returns Type Description ISignalLink [] SendSignal(ISignalLink, Boolean, Int32) Sends a signal to the target link. Declaration public static bool SendSignal(ISignalLink link, bool state, int extraData = 0) Parameters Type Name Description ISignalLink link Boolean state Int32 extraData Returns Type Description Boolean True if the target link returned true. SendSignal(Transform, Boolean, Int32) Sends a signal to all links on the target object. Declaration public static bool SendSignal(Transform target, bool state, int extraData = 0) Parameters Type Name Description Transform target Boolean state Int32 extraData Returns Type Description Boolean True if any link has returned true. SendSignalToAll(Transform[], Boolean, Int32) Sends a signal to all links on every target. Declaration public static bool SendSignalToAll(Transform[] targets, bool state, int extraData = 0) Parameters Type Name Description Transform [] targets Boolean state Int32 extraData Returns Type Description Boolean True if any target link returned true. SendSignalToChildren(Transform, Boolean, Int32) Sends a signal to all links on the target object and it's children. Declaration public static bool SendSignalToChildren(Transform target, bool state, int extraData = 0) Parameters Type Name Description Transform target Boolean state Int32 extraData Returns Type Description Boolean True if any link has returned true."
  },
  "api/D3T.Triggers.SendSignal.html": {
    "href": "api/D3T.Triggers.SendSignal.html",
    "title": "Class SendSignal | D3T - Core | 0.9.34",
    "keywords": "Class SendSignal Sends a signal to the specified targets. Inheritance Object TriggerComponent TriggerAction SendSignal Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SendSignal : TriggerAction, ISignalLink, ISerializable Fields extraData Declaration public int extraData Field Value Type Description Int32 state Declaration public bool state Field Value Type Description Boolean targets Declaration public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.SceneObjectReference.html": {
    "href": "api/D3T.Triggers.SceneObjectReference.html",
    "title": "Class SceneObjectReference | D3T - Core | 0.9.34",
    "keywords": "Class SceneObjectReference A transform reference that can also be accessed by the TriggerController's reference index. Inheritance Object SceneObjectReference Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SceneObjectReference : ISerializationCallbackReceiver Constructors SceneObjectReference(Transform) Declaration public SceneObjectReference(Transform t) Parameters Type Name Description Transform t Fields referenceIndex Declaration public int referenceIndex Field Value Type Description Int32 targetObject Declaration public Transform targetObject Field Value Type Description Transform Methods GetTarget(TriggerComponent) Returns the referenced transfrom of this object. Declaration public Transform GetTarget(TriggerComponent self) Parameters Type Name Description TriggerComponent self The TriggerComponent this object is being used from. Needed for finding an indexed reference. Returns Type Description Transform GetTargetComponent<T>(TriggerComponent) Returns the component T on the referenced transfrom of this object. Declaration public T GetTargetComponent<T>(TriggerComponent self) where T : Component Parameters Type Name Description TriggerComponent self The TriggerComponent this object is being used from. Needed for finding an indexed reference. Returns Type Description T Type Parameters Name Description T HasComponentOfType(TriggerComponent, Type) Declaration public bool HasComponentOfType(TriggerComponent self, Type componentType) Parameters Type Name Description TriggerComponent self Type componentType Returns Type Description Boolean OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() TryGetTargetComponent<T>(TriggerComponent, out T) Returns the component T on the referenced transfrom of this object. Declaration public bool TryGetTargetComponent<T>(TriggerComponent self, out T component) where T : Component Parameters Type Name Description TriggerComponent self T component Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/D3T.Gui.ScreenFader.html": {
    "href": "api/D3T.Gui.ScreenFader.html",
    "title": "Class ScreenFader | D3T - Core | 0.9.34",
    "keywords": "Class ScreenFader Manager class for rendering screen fades. Inheritance Object ScreenFader Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ScreenFader Fields currentFadeColor Declaration public static Color currentFadeColor Field Value Type Description Color currentFadeFadesAudio Declaration public static bool currentFadeFadesAudio Field Value Type Description Boolean currentFadeProgress Declaration public static float currentFadeProgress Field Value Type Description Single currentFadeTransitionSpeed Declaration public static float currentFadeTransitionSpeed Field Value Type Description Single defaultFadeColor Declaration public static Color defaultFadeColor Field Value Type Description Color defaultFadeLength Declaration public static float defaultFadeLength Field Value Type Description Single Properties FadingIn Declaration public static bool FadingIn { get; } Property Value Type Description Boolean FadingOut Declaration public static bool FadingOut { get; } Property Value Type Description Boolean Methods BeginFadeIn(Nullable<Color>, Nullable<Single>, Boolean) Starts a screen fade. Declaration public static float BeginFadeIn(Color? color = default(Color? ), float? length, bool fadeAudio = false) Parameters Type Name Description Nullable < Color > color Nullable < Single > length Boolean fadeAudio Returns Type Description Single BeginFadeOut(Nullable<Single>) Fades out of a fade started with BeginFadeIn. Declaration public static float BeginFadeOut(float? length) Parameters Type Name Description Nullable < Single > length Returns Type Description Single ForceFadeOut(Nullable<Color>, Single, Boolean) Immediately sets the fade intensity to 100%, then fades out from it. Declaration public static float ForceFadeOut(Color? color = default(Color? ), float length = 0F, bool fadeAudio = false) Parameters Type Name Description Nullable < Color > color Single length Boolean fadeAudio Returns Type Description Single Init(GameSettings) Declaration public static void Init(GameSettings settings) Parameters Type Name Description GameSettings settings Events FadedIn Declaration public static event Action FadedIn Event Type Type Description Action FadedOut Declaration public static event Action FadedOut Event Type Type Description Action"
  },
  "api/D3T.Gui.MouseEventReceiver.html": {
    "href": "api/D3T.Gui.MouseEventReceiver.html",
    "title": "Class MouseEventReceiver | D3T - Core | 0.9.34",
    "keywords": "Class MouseEventReceiver Base class for receiving mouse events in 3D GUI elements. Inheritance Object MouseEventReceiver Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class MouseEventReceiver : MonoBehaviour Methods OnMouseEntered() Declaration public virtual void OnMouseEntered() OnMouseHover() Declaration public virtual void OnMouseHover() OnMouseLeft() Declaration public virtual void OnMouseLeft() OnMouseLeftClick() Declaration public virtual void OnMouseLeftClick()"
  },
  "api/D3T.Gui.CustomFadeSettings.html": {
    "href": "api/D3T.Gui.CustomFadeSettings.html",
    "title": "Class CustomFadeSettings | D3T - Core | 0.9.34",
    "keywords": "Class CustomFadeSettings Inheritance Object ToggleableFeature CustomFadeSettings Inherited Members ToggleableFeature.Enabled ToggleableFeature.OnEnable() ToggleableFeature.OnDisable() Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class CustomFadeSettings : ToggleableFeature Constructors CustomFadeSettings(Boolean) Declaration public CustomFadeSettings(bool enabled) Parameters Type Name Description Boolean enabled Fields fadeColor Declaration public NullableColor fadeColor Field Value Type Description NullableColor fadeInLength Declaration public NullableFloat fadeInLength Field Value Type Description NullableFloat fadeOutLength Declaration public NullableFloat fadeOutLength Field Value Type Description NullableFloat"
  },
  "api/D3T.Gui.Crosshair.html": {
    "href": "api/D3T.Gui.Crosshair.html",
    "title": "Class Crosshair | D3T - Core | 0.9.34",
    "keywords": "Class Crosshair UI script component for rendering dynamic crosshairs. Inheritance Object Crosshair Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Crosshair : MonoBehaviour Fields ActionModeCheck Declaration public static Func<bool> ActionModeCheck Field Value Type Description Func < Boolean > actionModeSprites Declaration public Crosshair.EightPartCrosshair actionModeSprites Field Value Type Description Crosshair.EightPartCrosshair aimCrosshairOpacity Declaration public static float aimCrosshairOpacity Field Value Type Description Single aimCrosshairSpreadAngle Declaration public static float aimCrosshairSpreadAngle Field Value Type Description Single AimModeCheck Declaration public static Func<bool> AimModeCheck Field Value Type Description Func < Boolean > aimModeSprites Declaration public Crosshair.EightPartCrosshair aimModeSprites Field Value Type Description Crosshair.EightPartCrosshair enable3dPositioning Declaration public bool enable3dPositioning Field Value Type Description Boolean idleTint Declaration public Color idleTint Field Value Type Description Color instance Declaration public static Crosshair instance Field Value Type Description Crosshair middleDot Declaration public Image middleDot Field Value Type Description Image raycastPositioningSmoothness Declaration public float raycastPositioningSmoothness Field Value Type Description Single raycastSourceTransform Declaration public Transform raycastSourceTransform Field Value Type Description Transform smoothTransition Declaration public bool smoothTransition Field Value Type Description Boolean stateTransitionDuration Declaration public float stateTransitionDuration Field Value Type Description Single"
  },
  "api/D3T.DevTools.ConsoleCommandAttribute.html": {
    "href": "api/D3T.DevTools.ConsoleCommandAttribute.html",
    "title": "Class ConsoleCommandAttribute | D3T - Core | 0.9.34",
    "keywords": "Class ConsoleCommandAttribute Add this attribute to a static method to have it called when the user enters the given command in the developer console. Inheritance Object Attribute ConsoleCommandAttribute Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method)] public class ConsoleCommandAttribute : Attribute, _Attribute, IComparable Constructors ConsoleCommandAttribute(String, String[]) Declaration public ConsoleCommandAttribute(string commandName, params string[] args) Parameters Type Name Description String commandName String [] args Fields command Declaration public string command Field Value Type Description String optionalArgs Declaration public string[] optionalArgs Field Value Type Description String [] requiredArgs Declaration public string[] requiredArgs Field Value Type Description String [] Methods CompareTo(Object) Declaration public int CompareTo(object obj) Parameters Type Name Description Object obj Returns Type Description Int32 GetUsageInfo() Declaration public string GetUsageInfo() Returns Type Description String"
  },
  "api/D3T.DevTools.CmdArgs-1.html": {
    "href": "api/D3T.DevTools.CmdArgs-1.html",
    "title": "Class CmdArgs<T> | D3T - Core | 0.9.34",
    "keywords": "Class CmdArgs<T> Inheritance Object CmdArgs CmdArgs<T> Inherited Members CmdArgs.Parse<T>(String) CmdArgs.Parse<C>(String[], Int32, C, Boolean) Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CmdArgs<T> : CmdArgs Type Parameters Name Description T Fields arg0 Declaration public T arg0 Field Value Type Description T Methods ParseArgs(String[]) Declaration protected override void ParseArgs(string[] args) Parameters Type Name Description String [] args Overrides CmdArgs.ParseArgs(String[])"
  },
  "api/D3T.Cameras.CameraManager.html": {
    "href": "api/D3T.Cameras.CameraManager.html",
    "title": "Class CameraManager | D3T - Core | 0.9.34",
    "keywords": "Class CameraManager The CameraManager is used to switch and keep track of currently active cameras in the scene. Inheritance Object CameraManager Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CameraManager Properties ActiveAlternativeMainCamera The (temporary) alternative main camera, such as 3rd person cameras or other secondary player cameras. Declaration public static Camera ActiveAlternativeMainCamera { get; } Property Value Type Description Camera ActiveAudioListener The currently active AudioListener. Note that the active AudioListener may remain on the MainCamera if other cameras don't have an AudioListener attached. Declaration public static AudioListener ActiveAudioListener { get; } Property Value Type Description AudioListener ActiveCamera The currently active Camera in the scene (The one that is seen in the game view). Declaration public static Camera ActiveCamera { get; } Property Value Type Description Camera CurrentMainCamera The currently active MainCamera. Declaration public static Camera CurrentMainCamera { get; } Property Value Type Description Camera EventCamera The current EventCamera for showing game events or cutscenes. Declaration public static Camera EventCamera { get; } Property Value Type Description Camera IsEventCameraActive Is the current EventCamera active or are we showing a player camera? Declaration public static bool IsEventCameraActive { get; } Property Value Type Description Boolean MainCamera The default main camera, most commonly the player's main camera. Declaration public static Camera MainCamera { get; set; } Property Value Type Description Camera Methods ChangeToEventCamera(Camera) Cuts to the given event camera for showing temporary events or cutscenes. Declaration public static void ChangeToEventCamera(Camera camera) Parameters Type Name Description Camera camera ChangeToEventCameraForSeconds(Camera, Single) Switches to the given EventCamera, then returns back to the MainCamera after the given amount of time. Declaration public static void ChangeToEventCameraForSeconds(Camera camera, float seconds) Parameters Type Name Description Camera camera Single seconds ChangeToPlayerCamera() Sets the active camera back to the MainCamera. Declaration public static void ChangeToPlayerCamera() SetActiveAltMainCamera(Camera) Activates the given alternative MainCamera. Declaration public static void SetActiveAltMainCamera(Camera altMainCam) Parameters Type Name Description Camera altMainCam"
  },
  "api/D3T.Audio.SnapshotBlendSource.html": {
    "href": "api/D3T.Audio.SnapshotBlendSource.html",
    "title": "Class SnapshotBlendSource | D3T - Core | 0.9.34",
    "keywords": "Class SnapshotBlendSource Adds a local or global Mixer Snapshot blending source to the scene. Inheritance Object AbstractSource SnapshotBlendSource Inherited Members AbstractSource.type AbstractSource.pointMinDistance AbstractSource.pointMaxDistance AbstractSource.volumeBlendDistance AbstractSource.Awake() AbstractSource.GetSourceIntensity(Vector3) Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SnapshotBlendSource : AbstractSource, IMixerSnapshotBlendSource Fields mufflerLevel Declaration public float mufflerLevel Field Value Type Description Single submergedLevel Declaration public float submergedLevel Field Value Type Description Single Properties GizmoColor Declaration protected override Color GizmoColor { get; } Property Value Type Description Color Overrides AbstractSource.GizmoColor Methods GetSnapshotWeights(Vector3, out Single, out Single) Declaration public void GetSnapshotWeights(Vector3 listenerPosition, out float mufflerLevel, out float submergedLevel) Parameters Type Name Description Vector3 listenerPosition Single mufflerLevel Single submergedLevel Implements IMixerSnapshotBlendSource.GetSnapshotWeights(Vector3, out Single, out Single)"
  },
  "api/D3T.Animation.IStateMachineEventReceiver.html": {
    "href": "api/D3T.Animation.IStateMachineEventReceiver.html",
    "title": "Interface IStateMachineEventReceiver | D3T - Core | 0.9.34",
    "keywords": "Interface IStateMachineEventReceiver Enables receiving callbacks from StateMachineBehaviours on an attached animator. Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IStateMachineEventReceiver Methods OnStateEnter(Animator, AnimatorStateInfo, Int32) OnStateEnter is called when a transition starts and the state machine starts to evaluate this state Declaration void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateExit(Animator, AnimatorStateInfo, Int32) OnStateExit is called when a transition ends and the state machine finishes evaluating this state Declaration void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateUpdate(Animator, AnimatorStateInfo, Int32) OnStateUpdate is called on each Update frame between OnStateEnter and OnStateExit callbacks Declaration void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex"
  },
  "api/D3T.Triggers.TriggerCondition.html": {
    "href": "api/D3T.Triggers.TriggerCondition.html",
    "title": "Class TriggerCondition | D3T - Core | 0.9.34",
    "keywords": "Class TriggerCondition Base class for Trigger Condition components. Inheritance Object TriggerComponent TriggerCondition AreaCheckCondition StaticCondition Inherited Members TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TriggerCondition : TriggerComponent Fields invertCondition Declaration public bool invertCondition Field Value Type Description Boolean Properties DefaultGizmosColor Declaration protected override Color DefaultGizmosColor { get; } Property Value Type Description Color Overrides TriggerComponent.DefaultGizmosColor Methods Evaluate() Declaration protected abstract bool Evaluate() Returns Type Description Boolean EvaluateCondition() Declaration public bool EvaluateCondition() Returns Type Description Boolean"
  },
  "api/D3T.Triggers.TriggerAction.ExecutionSettings.SignalCondition.html": {
    "href": "api/D3T.Triggers.TriggerAction.ExecutionSettings.SignalCondition.html",
    "title": "Enum TriggerAction.ExecutionSettings.SignalCondition | D3T - Core | 0.9.34",
    "keywords": "Enum TriggerAction.ExecutionSettings.SignalCondition Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum SignalCondition Fields Name Description All FalseOnly TrueOnly"
  },
  "api/D3T.Graphics.DistortionShaderUpdate.html": {
    "href": "api/D3T.Graphics.DistortionShaderUpdate.html",
    "title": "Class DistortionShaderUpdate | D3T - Core | 0.9.34",
    "keywords": "Class DistortionShaderUpdate Inheritance Object DistortionShaderUpdate Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DistortionShaderUpdate : MonoBehaviour Fields distortPixels Declaration public float distortPixels Field Value Type Description Single tex Declaration public Texture2D[] tex Field Value Type Description Texture2D []"
  },
  "api/D3T.GameSettings.AudioSettings.html": {
    "href": "api/D3T.GameSettings.AudioSettings.html",
    "title": "Class GameSettings.AudioSettings | D3T - Core | 0.9.34",
    "keywords": "Class GameSettings.AudioSettings Inheritance Object GameSettings.AudioSettings Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class AudioSettings Fields defaultFXGroup Declaration public AudioMixerGroup defaultFXGroup Field Value Type Description AudioMixerGroup defaultInterfaceGroup Declaration public AudioMixerGroup defaultInterfaceGroup Field Value Type Description AudioMixerGroup defaultMusicGroup Declaration public AudioMixerGroup defaultMusicGroup Field Value Type Description AudioMixerGroup masterMixer Declaration public AudioMixer masterMixer Field Value Type Description AudioMixer musicClipLibrary Declaration public AudioClipLibrary musicClipLibrary Field Value Type Description AudioClipLibrary"
  },
  "api/D3T.Extensions.html": {
    "href": "api/D3T.Extensions.html",
    "title": "Class Extensions | D3T - Core | 0.9.34",
    "keywords": "Class Extensions Inheritance Object Extensions Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class Extensions Methods Abs(Int32) Declaration public static int Abs(this int i) Parameters Type Name Description Int32 i Returns Type Description Int32 Abs(Single) Declaration public static float Abs(this float f) Parameters Type Name Description Single f Returns Type Description Single Abs(Vector2) Declaration public static Vector2 Abs(this Vector2 v) Parameters Type Name Description Vector2 v Returns Type Description Vector2 Abs(Vector3) Declaration public static Vector3 Abs(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 AddPosition(Rect, Vector2) Declaration public static Rect AddPosition(this Rect r, Vector2 v) Parameters Type Name Description Rect r Vector2 v Returns Type Description Rect AppendDown(Rect, Single, Single) Declaration public static Rect AppendDown(this Rect r, float height, float margin = 0F) Parameters Type Name Description Rect r Single height Single margin Returns Type Description Rect AppendRight(Rect, Single, Single) Declaration public static Rect AppendRight(this Rect r, float width, float margin = 0F) Parameters Type Name Description Rect r Single width Single margin Returns Type Description Rect Clamp(Vector2, Single, Single) Declaration public static Vector2 Clamp(this Vector2 v, float min, float max) Parameters Type Name Description Vector2 v Single min Single max Returns Type Description Vector2 Clamp(Vector3, Single, Single) Declaration public static Vector3 Clamp(this Vector3 v, float min, float max) Parameters Type Name Description Vector3 v Single min Single max Returns Type Description Vector3 ClampAngle(Single) Declaration public static float ClampAngle(this float f) Parameters Type Name Description Single f Returns Type Description Single ClampAngle(Vector2) Declaration public static Vector2 ClampAngle(this Vector2 v) Parameters Type Name Description Vector2 v Returns Type Description Vector2 ClampAngle(Vector3) Declaration public static Vector3 ClampAngle(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ConvertToTimeString(Int32, Boolean) Declaration public static string ConvertToTimeString(this int t, bool hours) Parameters Type Name Description Int32 t Boolean hours Returns Type Description String FaceVertical(Transform, Vector3, Boolean) Declaration public static void FaceVertical(this Transform t, Vector3 direction, bool invert = false) Parameters Type Name Description Transform t Vector3 direction Boolean invert FillWithColor(Texture2D, Color) Declaration public static void FillWithColor(this Texture2D tex, Color c) Parameters Type Name Description Texture2D tex Color c GetHierarchyPathString(Transform, Transform) Returns the transform's hierarchy path string in the format \"Root/Parent 1/Parent 2/Transform\" up to the scene root or the given parent transform Declaration public static string GetHierarchyPathString(this Transform transform, Transform parent = null) Parameters Type Name Description Transform transform Transform parent Returns Type Description String Inset(Rect, Single) Declaration public static Rect Inset(this Rect r, float inset) Parameters Type Name Description Rect r Single inset Returns Type Description Rect Inset(Rect, Single, Single, Single, Single) Declaration public static Rect Inset(this Rect r, float left, float right, float top, float bottom) Parameters Type Name Description Rect r Single left Single right Single top Single bottom Returns Type Description Rect IsBetween(Single, Single, Single) Declaration public static bool IsBetween(this float f, float min, float max) Parameters Type Name Description Single f Single min Single max Returns Type Description Boolean IsBetweenIncluding(Single, Single, Single) Declaration public static bool IsBetweenIncluding(this float f, float min, float max) Parameters Type Name Description Single f Single min Single max Returns Type Description Boolean LookAtVertical(Transform, Transform, Boolean) Declaration public static void LookAtVertical(this Transform t, Transform target, bool invert = false) Parameters Type Name Description Transform t Transform target Boolean invert LookAtVertical(Transform, Vector3, Boolean) Declaration public static void LookAtVertical(this Transform t, Vector3 target, bool invert = false) Parameters Type Name Description Transform t Vector3 target Boolean invert Max(Vector3) Declaration public static float Max(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Single Min(Vector3) Declaration public static float Min(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Single MultiplyAlpha(Color, Single) Declaration public static Color MultiplyAlpha(this Color c, float multiplier) Parameters Type Name Description Color c Single multiplier Returns Type Description Color Outset(Rect, Single) Declaration public static Rect Outset(this Rect r, float outset) Parameters Type Name Description Rect r Single outset Returns Type Description Rect Outset(Rect, Single, Single, Single, Single) Declaration public static Rect Outset(this Rect r, float left, float right, float top, float bottom) Parameters Type Name Description Rect r Single left Single right Single top Single bottom Returns Type Description Rect Range(Int32, Int32, Int32) Declaration public static bool Range(this int f, int min, int max) Parameters Type Name Description Int32 f Int32 min Int32 max Returns Type Description Boolean Round(Single, Int32) Declaration public static float Round(this float f, int decNumbers) Parameters Type Name Description Single f Int32 decNumbers Returns Type Description Single Scale(Rect, Single) Declaration public static Rect Scale(this Rect r, float value) Parameters Type Name Description Rect r Single value Returns Type Description Rect ScaleAround(Vector2, Vector2, Vector2) Declaration public static Vector2 ScaleAround(this Vector2 point, Vector2 scale, Vector2 pivot) Parameters Type Name Description Vector2 point Vector2 scale Vector2 pivot Returns Type Description Vector2 SetAlpha(Color, Single) Declaration public static Color SetAlpha(this Color c, float a) Parameters Type Name Description Color c Single a Returns Type Description Color Snap(Rect) Declaration public static Rect Snap(this Rect r) Parameters Type Name Description Rect r Returns Type Description Rect SplitHorizontal(Rect, Single, out Rect, out Rect, Single) Declaration public static void SplitHorizontal(this Rect r, float leftRectWidth, out Rect left, out Rect right, float margin = 0F) Parameters Type Name Description Rect r Single leftRectWidth Rect left Rect right Single margin SplitHorizontalRelative(Rect, Single, out Rect, out Rect, Single) Declaration public static void SplitHorizontalRelative(this Rect r, float leftRectRatio, out Rect left, out Rect right, float margin = 0F) Parameters Type Name Description Rect r Single leftRectRatio Rect left Rect right Single margin SplitHorizontalRight(Rect, Single, out Rect, out Rect, Single) Declaration public static void SplitHorizontalRight(this Rect r, float rightRectWidth, out Rect left, out Rect right, float margin = 0F) Parameters Type Name Description Rect r Single rightRectWidth Rect left Rect right Single margin SplitVertical(Rect, Single, out Rect, out Rect, Single) Declaration public static void SplitVertical(this Rect r, float topRectHeight, out Rect top, out Rect bottom, float margin = 0F) Parameters Type Name Description Rect r Single topRectHeight Rect top Rect bottom Single margin SplitVerticalBottom(Rect, Single, out Rect, out Rect, Single) Declaration public static void SplitVerticalBottom(this Rect r, float bottomRectHeight, out Rect top, out Rect bottom, float margin = 0F) Parameters Type Name Description Rect r Single bottomRectHeight Rect top Rect bottom Single margin SplitVerticalRelative(Rect, Single, out Rect, out Rect, Single) Declaration public static void SplitVerticalRelative(this Rect r, float topRectRatio, out Rect top, out Rect bottom, float margin = 0F) Parameters Type Name Description Rect r Single topRectRatio Rect top Rect bottom Single margin Swizzle(Vector3, Int32, Int32) Declaration public static Vector2 Swizzle(this Vector3 v, int xIndex, int yIndex) Parameters Type Name Description Vector3 v Int32 xIndex Int32 yIndex Returns Type Description Vector2 Swizzle(Vector3, Int32, Int32, Int32) Declaration public static Vector3 Swizzle(this Vector3 v, int xIndex, int yIndex, int zIndex) Parameters Type Name Description Vector3 v Int32 xIndex Int32 yIndex Int32 zIndex Returns Type Description Vector3 ToUVec2(Single) Declaration public static Vector2 ToUVec2(this float f) Parameters Type Name Description Single f Returns Type Description Vector2 ToUVec3(Single) Declaration public static Vector3 ToUVec3(this float f) Parameters Type Name Description Single f Returns Type Description Vector3 ToVector3(Vector2) Declaration public static Vector3 ToVector3(this Vector2 v) Parameters Type Name Description Vector2 v Returns Type Description Vector3 XX(Vector3) Declaration public static Vector2 XX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 XXX(Vector3) Declaration public static Vector3 XXX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XXY(Vector3) Declaration public static Vector3 XXY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XXZ(Vector3) Declaration public static Vector3 XXZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XY(Vector3) Declaration public static Vector2 XY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 XYX(Vector3) Declaration public static Vector3 XYX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XYY(Vector3) Declaration public static Vector3 XYY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XYZ(Vector3) Declaration public static Vector3 XYZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XZ(Vector3) Declaration public static Vector2 XZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 XZX(Vector3) Declaration public static Vector3 XZX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XZY(Vector3) Declaration public static Vector3 XZY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 XZZ(Vector3) Declaration public static Vector3 XZZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YX(Vector3) Declaration public static Vector2 YX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 YXX(Vector3) Declaration public static Vector3 YXX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YXY(Vector3) Declaration public static Vector3 YXY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YXZ(Vector3) Declaration public static Vector3 YXZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YY(Vector3) Declaration public static Vector2 YY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 YYX(Vector3) Declaration public static Vector3 YYX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YYY(Vector3) Declaration public static Vector3 YYY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YYZ(Vector3) Declaration public static Vector3 YYZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YZ(Vector3) Declaration public static Vector2 YZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 YZX(Vector3) Declaration public static Vector3 YZX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YZY(Vector3) Declaration public static Vector3 YZY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 YZZ(Vector3) Declaration public static Vector3 YZZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZX(Vector3) Declaration public static Vector2 ZX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 ZXX(Vector3) Declaration public static Vector3 ZXX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZXY(Vector3) Declaration public static Vector3 ZXY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZXZ(Vector3) Declaration public static Vector3 ZXZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZY(Vector3) Declaration public static Vector2 ZY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 ZYX(Vector3) Declaration public static Vector3 ZYX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZYY(Vector3) Declaration public static Vector3 ZYY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZYZ(Vector3) Declaration public static Vector3 ZYZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZZ(Vector3) Declaration public static Vector2 ZZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector2 ZZX(Vector3) Declaration public static Vector3 ZZX(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZZY(Vector3) Declaration public static Vector3 ZZY(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3 ZZZ(Vector3) Declaration public static Vector3 ZZZ(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Vector3"
  },
  "api/D3T.DevTools.DevToolsExtensions.html": {
    "href": "api/D3T.DevTools.DevToolsExtensions.html",
    "title": "Class DevToolsExtensions | D3T - Core | 0.9.34",
    "keywords": "Class DevToolsExtensions Inheritance Object DevToolsExtensions Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class DevToolsExtensions Methods ParseArgs<T0>(String[], out T0, Boolean) Declaration public static bool ParseArgs<T0>(this string[] args, out T0 p0, bool printError = true) Parameters Type Name Description String [] args T0 p0 Boolean printError Returns Type Description Boolean Type Parameters Name Description T0 ParseArgs<T0, T1>(String[], out T0, out T1, Boolean) Declaration public static bool ParseArgs<T0, T1>(this string[] args, out T0 p0, out T1 p1, bool printError = true) Parameters Type Name Description String [] args T0 p0 T1 p1 Boolean printError Returns Type Description Boolean Type Parameters Name Description T0 T1 ParseArgs<T0, T1, T2>(String[], out T0, out T1, out T2, Boolean) Declaration public static bool ParseArgs<T0, T1, T2>(this string[] args, out T0 p0, out T1 p1, out T2 p2, bool printError = true) Parameters Type Name Description String [] args T0 p0 T1 p1 T2 p2 Boolean printError Returns Type Description Boolean Type Parameters Name Description T0 T1 T2 ParseArgs<T0, T1, T2, T3>(String[], out T0, out T1, out T2, out T3, Boolean) Declaration public static bool ParseArgs<T0, T1, T2, T3>(this string[] args, out T0 p0, out T1 p1, out T2 p2, out T3 p3, bool printError = true) Parameters Type Name Description String [] args T0 p0 T1 p1 T2 p2 T3 p3 Boolean printError Returns Type Description Boolean Type Parameters Name Description T0 T1 T2 T3"
  },
  "api/D3T.DevTools.DevConsole.html": {
    "href": "api/D3T.DevTools.DevConsole.html",
    "title": "Class DevConsole | D3T - Core | 0.9.34",
    "keywords": "Class DevConsole The developer console GUI. Inheritance Object GUIElement MenuElement DevConsole Inherited Members MenuElement.PauseOption MenuElement.Is3dGui MenuElement.menuOpenTime MenuElement.menuClosedTime MenuElement.FadeInDuration MenuElement.FadeOutDuration MenuElement.IsOpen(String) MenuElement.ShoudDraw(String) MenuElement.Open() MenuElement.OnOpen() MenuElement.Close() MenuElement.OnClose() MenuElement.Update(Boolean) MenuElement.OnUpdate(Boolean) MenuElement.GetOpacity() MenuElement.DrawIMGUI() GUIElement.Order Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DevConsole : MenuElement Fields cheats Declaration public static bool cheats Field Value Type Description Boolean commandHistory Declaration public static List<string> commandHistory Field Value Type Description List < String > commands Declaration public static SortedDictionary<ConsoleCommandAttribute, DevConsole.CommandDelegate> commands Field Value Type Description SortedDictionary < ConsoleCommandAttribute , DevConsole.CommandDelegate > debugMode Declaration public static bool debugMode Field Value Type Description Boolean log Declaration public static List<DevConsole.LogMessage> log Field Value Type Description List < DevConsole.LogMessage > showErrors Declaration public static bool showErrors Field Value Type Description Boolean showInfo Declaration public static bool showInfo Field Value Type Description Boolean showWarnings Declaration public static bool showWarnings Field Value Type Description Boolean Properties CollapseIdenticalMessages Declaration public static bool CollapseIdenticalMessages { get; set; } Property Value Type Description Boolean DrawMode Declaration public override GUIElement.ElementDrawMode DrawMode { get; } Property Value Type Description GUIElement.ElementDrawMode Overrides GUIElement.DrawMode ID Declaration public override string ID { get; } Property Value Type Description String Overrides GUIElement.ID Methods Init() Declaration protected override void Init() Overrides GUIElement.Init() Initialize() Declaration public static void Initialize() OnGUI(Single, Boolean) Declaration public override void OnGUI(float opactiy, bool enableInteraction) Parameters Type Name Description Single opactiy Boolean enableInteraction Overrides GUIElement.OnGUI(Single, Boolean) SendCommand(String) Declaration public static void SendCommand(string input) Parameters Type Name Description String input"
  },
  "api/D3T.AbstractSource.html": {
    "href": "api/D3T.AbstractSource.html",
    "title": "Class AbstractSource | D3T - Core | 0.9.34",
    "keywords": "Class AbstractSource Base class to implement global or location based blended sources of something. Inheritance Object AbstractSource SnapshotBlendSource CameraShakeSource Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class AbstractSource : MonoBehaviour Fields pointMaxDistance Declaration public float pointMaxDistance Field Value Type Description Single pointMinDistance Declaration public float pointMinDistance Field Value Type Description Single type Declaration public AbstractSource.Type type Field Value Type Description AbstractSource.Type volumeBlendDistance Declaration public float volumeBlendDistance Field Value Type Description Single Properties GizmoColor Declaration protected abstract Color GizmoColor { get; } Property Value Type Description Color Methods Awake() Declaration protected virtual void Awake() GetSourceIntensity(Vector3) Declaration protected float GetSourceIntensity(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Single"
  },
  "api/Tests.html": {
    "href": "api/Tests.html",
    "title": "Namespace Tests | D3T - Core | 0.9.34",
    "keywords": "Namespace Tests Classes CoreTests"
  },
  "api/Tests.CoreTests.html": {
    "href": "api/Tests.CoreTests.html",
    "title": "Class CoreTests | D3T - Core | 0.9.34",
    "keywords": "Class CoreTests Inheritance Object CoreTests Namespace : Tests <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CoreTests Methods CoreTestsWithEnumeratorPasses() Declaration public IEnumerator CoreTestsWithEnumeratorPasses() Returns Type Description IEnumerator TestSerialization() Declaration public void TestSerialization() TestXML() Declaration public void TestXML()"
  },
  "api/D3TEditor.html": {
    "href": "api/D3TEditor.html",
    "title": "Namespace D3TEditor | D3T - Core | 0.9.34",
    "keywords": "Namespace D3TEditor Classes AssetUserDataEditor AssetUserDataEditor.Asset AudioClipSettingsDrawer CreateAnimationClipButtonAttributeDrawer DuplicateCustom DuplicateScriptRemover EnhancedHierarchy GameObjectEditorUtility GameObjectMenuExtras GUIDConflictResolver ImportAssetFromPackage LayerUsageCheck MassReplacePrefabs PlaymodeEditorKeybinds PropertyDrawerUtility SceneObjectReferenceDrawer TaskList TaskList.Task TaskListEditor TaskListEditor.PrioComparer TaskListEditor.TaskListAuxWindow TextureFontAssetEditor TransformRandomizer UnusedAssetDetector Lists unused assets in the project Enums TextureFontAssetEditor.Subset"
  },
  "api/D3TEditor.UnusedAssetDetector.html": {
    "href": "api/D3TEditor.UnusedAssetDetector.html",
    "title": "Class UnusedAssetDetector | D3T - Core | 0.9.34",
    "keywords": "Class UnusedAssetDetector Lists unused assets in the project Inheritance Object UnusedAssetDetector Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UnusedAssetDetector : EditorWindow Remarks Taken from: https://forum.unity.com/threads/asset-usage-detector-find-references-to-an-asset-object-open-source.408134/#post-3068519 Properties boxGUIStyle Declaration public static GUIStyle boxGUIStyle { get; } Property Value Type Description GUIStyle"
  },
  "api/D3TEditor.TransformRandomizer.html": {
    "href": "api/D3TEditor.TransformRandomizer.html",
    "title": "Class TransformRandomizer | D3T - Core | 0.9.34",
    "keywords": "Class TransformRandomizer Inheritance Object TransformRandomizer Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TransformRandomizer : EditorWindow"
  },
  "api/D3TEditor.Inspector.html": {
    "href": "api/D3TEditor.Inspector.html",
    "title": "Namespace D3TEditor.Inspector | D3T - Core | 0.9.34",
    "keywords": "Namespace D3TEditor.Inspector Classes AbstractSourceEditor DrawBaseClassLastEditor<T> HelpBoxDecoratorDrawer LightEditor LightTempWindow NullableColorDrawer NullableFloatDrawer NullableIntDrawer NullableValueDrawer SeparateBaseFromChildFieldEditor SignalTargetAttributeDrawer SingletonIDDrawer ToggleableFeatureDrawer TriggerActionEditor TriggerConditionEditor VolumetricLightConeEditor"
  },
  "api/D3TEditor.Inspector.VolumetricLightConeEditor.html": {
    "href": "api/D3TEditor.Inspector.VolumetricLightConeEditor.html",
    "title": "Class VolumetricLightConeEditor | D3T - Core | 0.9.34",
    "keywords": "Class VolumetricLightConeEditor Inheritance Object VolumetricLightConeEditor Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class VolumetricLightConeEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/D3TEditor.Inspector.TriggerConditionEditor.html": {
    "href": "api/D3TEditor.Inspector.TriggerConditionEditor.html",
    "title": "Class TriggerConditionEditor | D3T - Core | 0.9.34",
    "keywords": "Class TriggerConditionEditor Inheritance Object SeparateBaseFromChildFieldEditor TriggerConditionEditor Inherited Members SeparateBaseFromChildFieldEditor.OnInspectorGUI() Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TriggerConditionEditor : SeparateBaseFromChildFieldEditor Properties BaseType Declaration protected override Type BaseType { get; } Property Value Type Description Type Overrides SeparateBaseFromChildFieldEditor.BaseType"
  },
  "api/D3TEditor.Inspector.TriggerActionEditor.html": {
    "href": "api/D3TEditor.Inspector.TriggerActionEditor.html",
    "title": "Class TriggerActionEditor | D3T - Core | 0.9.34",
    "keywords": "Class TriggerActionEditor Inheritance Object SeparateBaseFromChildFieldEditor TriggerActionEditor Inherited Members SeparateBaseFromChildFieldEditor.OnInspectorGUI() Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TriggerActionEditor : SeparateBaseFromChildFieldEditor Properties BaseType Declaration protected override Type BaseType { get; } Property Value Type Description Type Overrides SeparateBaseFromChildFieldEditor.BaseType"
  },
  "api/D3T.InputSystemManager.html": {
    "href": "api/D3T.InputSystemManager.html",
    "title": "Class InputSystemManager | D3T - Core | 0.9.34",
    "keywords": "Class InputSystemManager Inheritance Object InputSystemManager Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class InputSystemManager Properties CombinedLookDelta Combined 2D Axis including Look and LookDelta Declaration public static Vector2 CombinedLookDelta { get; } Property Value Type Description Vector2 CombinedMultipliedLookDelta Combined 2D Axis including Look and LookDelta, multiplied by the LookSensitivity user preference. Declaration public static Vector2 CombinedMultipliedLookDelta { get; } Property Value Type Description Vector2 Console The console button used to bring up the dev console. Declaration public static InputAction Console { get; } Property Value Type Description InputAction InputActionAsset Declaration public static InputActionAsset InputActionAsset { get; } Property Value Type Description InputActionAsset Look 2D Axis for look motion from Joysticks or Button composites. Combine with LookDelta to also handle Mouse look input. Declaration public static InputAction Look { get; } Property Value Type Description InputAction LookDelta 2D Axis for mouse look delta motion. Combine with Look to also handle Joystick / Button look input. Declaration public static InputAction LookDelta { get; } Property Value Type Description InputAction LookSensitivity User preference for look sensitivity. Declaration public static float LookSensitivity { get; } Property Value Type Description Single Move 2D Axis for player movement on the XZ plane (formerly Horizontal and Vertical). Declaration public static InputAction Move { get; } Property Value Type Description InputAction Pause The pause button used for pausing the game. Declaration public static InputAction Pause { get; } Property Value Type Description InputAction Vertical 1D Axis for vertical movement on the Y axis (up and down, unlike InputManager's Vertical, which was forward/back). Declaration public static InputAction Vertical { get; } Property Value Type Description InputAction Methods GetAction(String) Declaration public static InputAction GetAction(string actionName) Parameters Type Name Description String actionName Returns Type Description InputAction Init() Declaration public static void Init() LoadFromPrefs(InputAction) Declaration public static void LoadFromPrefs(InputAction action) Parameters Type Name Description InputAction action Rebind(String, String, Boolean) Declaration public static void Rebind(string actionName, string binding, bool isGamepad = false) Parameters Type Name Description String actionName String binding Boolean isGamepad Register(String) Declaration public static void Register(string name) Parameters Type Name Description String name ResetAll() Declaration public static void ResetAll() ResetBinding(String) Declaration public static void ResetBinding(string actionName) Parameters Type Name Description String actionName Save() Declaration public static void Save() SaveToPrefs(InputAction) Declaration public static void SaveToPrefs(InputAction action) Parameters Type Name Description InputAction action TryGetAction(String, out InputAction) Declaration public static bool TryGetAction(string actionName, out InputAction action) Parameters Type Name Description String actionName InputAction action Returns Type Description Boolean TryReadValue<A>(String, A) Declaration public static A TryReadValue<A>(string actionName, A fallback = default(A)) where A : struct Parameters Type Name Description String actionName A fallback Returns Type Description A Type Parameters Name Description A"
  },
  "api/D3T.InputSystemInitAttribute.html": {
    "href": "api/D3T.InputSystemInitAttribute.html",
    "title": "Class InputSystemInitAttribute | D3T - Core | 0.9.34",
    "keywords": "Class InputSystemInitAttribute Add this attribute to static methods to have them initialize when the InputSystemManager is loaded. Methods may have a InputActionAsset parameter. Inheritance Object Attribute InputSystemInitAttribute Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)] public class InputSystemInitAttribute : Attribute, _Attribute"
  },
  "api/D3T.InputManager.html": {
    "href": "api/D3T.InputManager.html",
    "title": "Class InputManager | D3T - Core | 0.9.34",
    "keywords": "Class InputManager Manager class for registering and querying player inputs. Inheritance Object InputManager Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class InputManager Fields axes Declaration public static Dictionary<string, InputManager.Axis> axes Field Value Type Description Dictionary < String , InputManager.Axis > buttons Declaration public static Dictionary<string, InputManager.Button> buttons Field Value Type Description Dictionary < String , InputManager.Button > lookSensitivity The user's perference for mouse sensitivity. Declaration public static float lookSensitivity Field Value Type Description Single mouseInvertY The user's preference for wether to invert the mouse's Y axis. Declaration public static bool mouseInvertY Field Value Type Description Boolean Properties Console The input button used for opening the developer console. Declaration public static InputManager.Button Console { get; } Property Value Type Description InputManager.Button Horizontal Default axis for horizontal (A/D) movement Declaration public static InputManager.Axis Horizontal { get; } Property Value Type Description InputManager.Axis InputEnabled Are inputs currently enabled? Declaration public static bool InputEnabled { get; } Property Value Type Description Boolean Mouse The movement delta of the user's mouse. Declaration public static Vector2 Mouse { get; } Property Value Type Description Vector2 Scroll The movement delta of the user's mouse scroll wheel. Declaration public static float Scroll { get; } Property Value Type Description Single Vertical Default axis for vertical (W/S) movement Declaration public static InputManager.Axis Vertical { get; } Property Value Type Description InputManager.Axis Methods ClearPref(String) Removes the given pref from the user preferences. Declaration public static void ClearPref(string name) Parameters Type Name Description String name GetBinding(String) Declaration public static InputManager.Button GetBinding(string prefName) Parameters Type Name Description String prefName Returns Type Description InputManager.Button GetKey(KeyCode) Declaration public static bool GetKey(KeyCode key) Parameters Type Name Description KeyCode key Returns Type Description Boolean GetKeyDown(KeyCode) Declaration public static bool GetKeyDown(KeyCode key) Parameters Type Name Description KeyCode key Returns Type Description Boolean GetKeyUp(KeyCode) Declaration public static bool GetKeyUp(KeyCode key) Parameters Type Name Description KeyCode key Returns Type Description Boolean GetPref<T>(String, T) Returns the value set in the user input preferences, or the fallback value if it isn't defined yet. Declaration public static T GetPref<T>(string name, T fallback = null) Parameters Type Name Description String name T fallback Returns Type Description T Type Parameters Name Description T GetPrefKey(String, KeyCode) Returns the KeyCode set in the user input preferences, or the fallback key if it isn't defined yet. Declaration public static KeyCode GetPrefKey(string name, KeyCode fallback = null) Parameters Type Name Description String name KeyCode fallback Returns Type Description KeyCode InitPrefs() Declaration public static void InitPrefs() RegisterAxis(InputManager.Axis) Registers a new input axis. Registration should be done during the InputInit phase. Declaration public static void RegisterAxis(InputManager.Axis axis) Parameters Type Name Description InputManager.Axis axis RegisterButton(InputManager.Button) Registers a new input button. Registration should be done during the InputInit phase. Declaration public static void RegisterButton(InputManager.Button button) Parameters Type Name Description InputManager.Button button ResetInputPrefs() Restores the default input settings. Declaration public static void ResetInputPrefs() SaveInputPrefs() Saves the current input preferences to the player prefs. If the input bindings were modified this will ensure the nwe settings are saved to the user's preferences. Declaration public static void SaveInputPrefs() SetKeybind(String, KeyCode, Boolean) Binds the given KeyCode with the input button (or axis sub-button) named name. Declaration public static bool SetKeybind(string name, KeyCode key, bool alt) Parameters Type Name Description String name KeyCode key Boolean alt Returns Type Description Boolean SetPref<T>(String, T) Writes a value to the user input preferences. Declaration public static void SetPref<T>(string name, T value) Parameters Type Name Description String name T value Type Parameters Name Description T SetPrefKey(String, KeyCode) Writes the input key to the user input preferences. Declaration public static void SetPrefKey(string name, KeyCode key) Parameters Type Name Description String name KeyCode key"
  },
  "api/D3T.InputManager.Button.html": {
    "href": "api/D3T.InputManager.Button.html",
    "title": "Class InputManager.Button | D3T - Core | 0.9.34",
    "keywords": "Class InputManager.Button A simple button with a pressed/not pressed state. Inheritance Object InputManager.Button Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Button Constructors Button(String, KeyCode, KeyCode, Boolean) Declaration public Button(string name, KeyCode k1, KeyCode k2, bool saveInPrefs = true) Parameters Type Name Description String name KeyCode k1 KeyCode k2 Boolean saveInPrefs Fields allowUnbinding Declaration public bool allowUnbinding Field Value Type Description Boolean name Declaration public readonly string name Field Value Type Description String nameHash Declaration public readonly short nameHash Field Value Type Description Int16 writeToPrefs Declaration public readonly bool writeToPrefs Field Value Type Description Boolean Properties Key Declaration public KeyCode Key { get; set; } Property Value Type Description KeyCode KeyAlt Declaration public KeyCode KeyAlt { get; set; } Property Value Type Description KeyCode Methods ClearPrefs() Declaration public void ClearPrefs() GetInput() Declaration public bool GetInput() Returns Type Description Boolean GetInputDown() Declaration public bool GetInputDown() Returns Type Description Boolean GetInputUp() Declaration public bool GetInputUp() Returns Type Description Boolean LoadFromPrefs(String, KeyCode, Boolean) Declaration public static InputManager.Button LoadFromPrefs(string prefName, KeyCode defaultKey, bool allowUnbinding = true) Parameters Type Name Description String prefName KeyCode defaultKey Boolean allowUnbinding Returns Type Description InputManager.Button WriteToPrefs() Declaration public void WriteToPrefs() Operators Implicit(InputManager.Button to Boolean) Declaration public static implicit operator bool (InputManager.Button button) Parameters Type Name Description InputManager.Button button Returns Type Description Boolean"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedValue-1.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedValue-1.html",
    "title": "Class GUIStyleCollectionAsset.NamedValue<T> | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedValue<T> Inheritance Object GUIStyleCollectionAsset.NamedValue<T> GUIStyleCollectionAsset.NamedAudioClip GUIStyleCollectionAsset.NamedColor GUIStyleCollectionAsset.NamedFloat GUIStyleCollectionAsset.NamedObject GUIStyleCollectionAsset.NamedRect GUIStyleCollectionAsset.NamedTexture2D GUIStyleCollectionAsset.NamedVector Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class NamedValue<T> Type Parameters Name Description T Fields content Declaration public T content Field Value Type Description T name Declaration public string name Field Value Type Description String"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedTexture2D.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedTexture2D.html",
    "title": "Class GUIStyleCollectionAsset.NamedTexture2D | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedTexture2D Inheritance Object GUIStyleCollectionAsset.NamedValue < Texture2D > GUIStyleCollectionAsset.NamedTexture2D Inherited Members GUIStyleCollectionAsset.NamedValue<Texture2D>.name GUIStyleCollectionAsset.NamedValue<Texture2D>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedTexture2D : GUIStyleCollectionAsset.NamedValue<Texture2D>"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | D3T - Core | 0.9.34",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| D3T - Core | 0.9.34",
    "keywords": "MIT License Copyright (c) 2021 D3TONAT0R Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| D3T - Core | 0.9.34",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | D3T - Core | 0.9.34",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "manual/manual/etiam.html": {
    "href": "manual/manual/etiam.html",
    "title": "Etiam nantemque exul | D3T - Core | 0.9.34",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| D3T - Core | 0.9.34",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | D3T - Core | 0.9.34",
    "keywords": "Home Page. This is the home page for this package."
  },
  "api/D3T.Sun.html": {
    "href": "api/D3T.Sun.html",
    "title": "Class Sun | D3T - Core | 0.9.34",
    "keywords": "Class Sun Allows for real world based positioning of the sun based on the given lat/lon coordinates and local time. Inheritance Object Sun Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Sun : MonoBehaviour Fields day Declaration public int day Field Value Type Description Int32 month Declaration public int month Field Value Type Description Int32 sunAltitudeTint Declaration public Gradient sunAltitudeTint Field Value Type Description Gradient sunColor Declaration public Color sunColor Field Value Type Description Color sunIntensity Declaration public float sunIntensity Field Value Type Description Single year Declaration public int year Field Value Type Description Int32 Methods SetDate(DateTime) Declaration public void SetDate(DateTime dateTime) Parameters Type Name Description DateTime dateTime SetLocation(Single, Single) Declaration public void SetLocation(float longitude, float latitude) Parameters Type Name Description Single longitude Single latitude SetTime(Int32, Int32) Declaration public void SetTime(int hour, int minutes) Parameters Type Name Description Int32 hour Int32 minutes SetTimeSpeed(Single) Declaration public void SetTimeSpeed(float speed) Parameters Type Name Description Single speed"
  },
  "api/D3T.Gui.GUIHandler.GuiChangeInfo.html": {
    "href": "api/D3T.Gui.GUIHandler.GuiChangeInfo.html",
    "title": "Class GUIHandler.GuiChangeInfo | D3T - Core | 0.9.34",
    "keywords": "Class GUIHandler.GuiChangeInfo Inheritance Object GUIHandler.GuiInfo GUIHandler.GuiChangeInfo Inherited Members GUIHandler.GuiInfo.elementID GUIHandler.GuiInfo.AreEqual(GUIHandler.GuiInfo, GUIHandler.GuiInfo) Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GuiChangeInfo : GUIHandler.GuiInfo Fields callType Declaration public GUIChangeCallType callType Field Value Type Description GUIChangeCallType Properties Method Declaration public Action<string> Method { set; } Property Value Type Description Action < String > Methods Call(String) Declaration public void Call(string s) Parameters Type Name Description String s"
  },
  "api/D3T.Gui.GUIElement.html": {
    "href": "api/D3T.Gui.GUIElement.html",
    "title": "Class GUIElement | D3T - Core | 0.9.34",
    "keywords": "Class GUIElement Base class for adding GUI elements to the GUI handler. Inheritance Object GUIElement MenuElement Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class GUIElement Constructors GUIElement() Declaration public GUIElement() Properties DrawMode Declaration public virtual GUIElement.ElementDrawMode DrawMode { get; } Property Value Type Description GUIElement.ElementDrawMode ID Declaration public abstract string ID { get; } Property Value Type Description String Order Declaration public virtual GUIElement.ElementOrder Order { get; } Property Value Type Description GUIElement.ElementOrder Methods DrawIMGUI() Declaration public virtual void DrawIMGUI() Init() Declaration protected virtual void Init() OnGUI(Single, Boolean) Declaration public abstract void OnGUI(float opacity, bool enableInteraction) Parameters Type Name Description Single opacity Boolean enableInteraction ShoudDraw(String) Declaration public virtual bool ShoudDraw(string currentMenuID) Parameters Type Name Description String currentMenuID Returns Type Description Boolean"
  },
  "api/D3T.Gui.GUIElement.ElementOrder.html": {
    "href": "api/D3T.Gui.GUIElement.ElementOrder.html",
    "title": "Enum GUIElement.ElementOrder | D3T - Core | 0.9.34",
    "keywords": "Enum GUIElement.ElementOrder Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ElementOrder Fields Name Description Background Default Top"
  },
  "api/D3T.Gui.GUIElement.ElementDrawMode.html": {
    "href": "api/D3T.Gui.GUIElement.ElementDrawMode.html",
    "title": "Enum GUIElement.ElementDrawMode | D3T - Core | 0.9.34",
    "keywords": "Enum GUIElement.ElementDrawMode Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ElementDrawMode Fields Name Description DynamicScale FixedScale"
  },
  "api/D3T.Graphics.WaterObject.LevelMode.html": {
    "href": "api/D3T.Graphics.WaterObject.LevelMode.html",
    "title": "Enum WaterObject.LevelMode | D3T - Core | 0.9.34",
    "keywords": "Enum WaterObject.LevelMode Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum LevelMode Fields Name Description AbsoluteYCoordinate RelativeToTransform"
  },
  "api/D3T.Graphics.WaterObject.CausticsSettings.html": {
    "href": "api/D3T.Graphics.WaterObject.CausticsSettings.html",
    "title": "Class WaterObject.CausticsSettings | D3T - Core | 0.9.34",
    "keywords": "Class WaterObject.CausticsSettings Inheritance Object WaterObject.CausticsSettings Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class CausticsSettings Fields causticsSpeed Declaration public float causticsSpeed Field Value Type Description Single causticsStrength Declaration public float causticsStrength Field Value Type Description Single causticsTiling Declaration public float causticsTiling Field Value Type Description Single projector Declaration public Projector projector Field Value Type Description Projector projectorMaterial Declaration public Material projectorMaterial Field Value Type Description Material projectorMaterialInstance Declaration public Material projectorMaterialInstance Field Value Type Description Material Methods SetUp() Declaration public void SetUp() UpdateCaustics(Transform, Single, WaterObject.SurfaceSettings) Declaration public void UpdateCaustics(Transform transform, float waterLevel, WaterObject.SurfaceSettings surface) Parameters Type Name Description Transform transform Single waterLevel WaterObject.SurfaceSettings surface"
  },
  "api/D3T.Graphics.WaterObject.AmbientSettings.html": {
    "href": "api/D3T.Graphics.WaterObject.AmbientSettings.html",
    "title": "Class WaterObject.AmbientSettings | D3T - Core | 0.9.34",
    "keywords": "Class WaterObject.AmbientSettings Inheritance Object WaterObject.AmbientSettings Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class AmbientSettings Fields ambientLightAnchorOverride Declaration public Transform ambientLightAnchorOverride Field Value Type Description Transform ambientLightBoost Declaration public float ambientLightBoost Field Value Type Description Single applyAmbientLight Declaration public bool applyAmbientLight Field Value Type Description Boolean customAmbientLight Declaration public Color customAmbientLight Field Value Type Description Color Properties CurrentAmbientColor Declaration public Color CurrentAmbientColor { get; } Property Value Type Description Color Methods CalculateAmbientColor(WaterObject) Declaration public void CalculateAmbientColor(WaterObject obj) Parameters Type Name Description WaterObject obj"
  },
  "api/D3T.Graphics.VolumetricLightCone.html": {
    "href": "api/D3T.Graphics.VolumetricLightCone.html",
    "title": "Class VolumetricLightCone | D3T - Core | 0.9.34",
    "keywords": "Class VolumetricLightCone Add this component to a spot light to draw a volumetric light cone. Inheritance Object VolumetricLightCone Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class VolumetricLightCone : MonoBehaviour Fields color Declaration public Color color Field Value Type Description Color endDistance Declaration public float endDistance Field Value Type Description Single falloff Declaration public AnimationCurve falloff Field Value Type Description AnimationCurve intensity Declaration public float intensity Field Value Type Description Single intensityMultiplier Declaration public float intensityMultiplier Field Value Type Description Single lightSource Declaration public Light lightSource Field Value Type Description Light lightSourceRadius Declaration public float lightSourceRadius Field Value Type Description Single material Declaration public Material material Field Value Type Description Material radialSegments Declaration public int radialSegments Field Value Type Description Int32 rangeMultiplier Declaration public float rangeMultiplier Field Value Type Description Single rebuildMeshOnUpdate Declaration public bool rebuildMeshOnUpdate Field Value Type Description Boolean rimSoftness Declaration public float rimSoftness Field Value Type Description Single spotAngle Declaration public float spotAngle Field Value Type Description Single spotAngleMultiplier Declaration public float spotAngleMultiplier Field Value Type Description Single startDistance Declaration public float startDistance Field Value Type Description Single subdivisions Declaration public int subdivisions Field Value Type Description Int32 syncWithLight Declaration public bool syncWithLight Field Value Type Description Boolean Methods GenerateMesh() Declaration public void GenerateMesh() Validate() Declaration public void Validate()"
  },
  "api/D3T.GameSettings.html": {
    "href": "api/D3T.GameSettings.html",
    "title": "Class GameSettings | D3T - Core | 0.9.34",
    "keywords": "Class GameSettings Use (or extend) the GameSettings object to store global settings for the game. Inheritance Object GameSettings Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameSettings : ScriptableObject Fields audioSettings Declaration public GameSettings.AudioSettings audioSettings Field Value Type Description GameSettings.AudioSettings guiSettings Declaration public GameSettings.GUISettings guiSettings Field Value Type Description GameSettings.GUISettings inputActions Declaration public InputActionAsset inputActions Field Value Type Description InputActionAsset instance Declaration public static GameSettings instance Field Value Type Description GameSettings otherSettings Declaration public Dictionary<string, ScriptableObject> otherSettings Field Value Type Description Dictionary < String , ScriptableObject > screenFaderSettings Declaration public GameSettings.ScreenFaderSettings screenFaderSettings Field Value Type Description GameSettings.ScreenFaderSettings Methods Load() Declaration public void Load()"
  },
  "api/D3T.GameSettings.ScreenFaderSettings.html": {
    "href": "api/D3T.GameSettings.ScreenFaderSettings.html",
    "title": "Class GameSettings.ScreenFaderSettings | D3T - Core | 0.9.34",
    "keywords": "Class GameSettings.ScreenFaderSettings Inheritance Object GameSettings.ScreenFaderSettings Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ScreenFaderSettings Fields defaultFadeColor Declaration public Color defaultFadeColor Field Value Type Description Color defaultFadeDuration Declaration public float defaultFadeDuration Field Value Type Description Single"
  },
  "api/D3T.DevTools.html": {
    "href": "api/D3T.DevTools.html",
    "title": "Namespace D3T.DevTools | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.DevTools Classes CmdArgs CmdArgs<T> CmdArgs<T0, T1> CmdArgs<T0, T1, T2> CmdArgs<T0, T1, T2, T3> ConsoleCommandAttribute Add this attribute to a static method to have it called when the user enters the given command in the developer console. CoreCommands DevConsole The developer console GUI. DevConsole.LogMessage DevToolsExtensions FPSCounter ParsingFailedException VideoSettingsCommands Delegates DevConsole.CommandDelegate"
  },
  "api/D3T.DevTools.VideoSettingsCommands.html": {
    "href": "api/D3T.DevTools.VideoSettingsCommands.html",
    "title": "Class VideoSettingsCommands | D3T - Core | 0.9.34",
    "keywords": "Class VideoSettingsCommands Inheritance Object VideoSettingsCommands Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class VideoSettingsCommands Methods SetFullScreen(String[]) Declaration [ConsoleCommand(\"vs_fullscreen\", new string[]{\"fullscreen\"})] public static bool SetFullScreen(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetQualityLevel(String[]) Declaration [ConsoleCommand(\"vs_quality\", new string[]{\"level\"})] public static bool SetQualityLevel(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetResolution(String[]) Declaration [ConsoleCommand(\"vs_resolution\", new string[]{\"xres\", \"yres\"})] public static bool SetResolution(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetShadowDist(String[]) Declaration [ConsoleCommand(\"vs_shadow_distance\", new string[]{\"distance\"})] public static bool SetShadowDist(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetShadowVis(String[]) Declaration [ConsoleCommand(\"vs_shadows\", new string[]{\"type\"})] public static bool SetShadowVis(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetVSync(String[]) Declaration [ConsoleCommand(\"vs_vsync\", new string[]{\"enabled\"})] public static bool SetVSync(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ToggleFPSCounter(String[]) Declaration [ConsoleCommand(\"fpscounter\", new string[]{})] public static bool ToggleFPSCounter(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean"
  },
  "api/D3T.Triggers.TriggerComponent.html": {
    "href": "api/D3T.Triggers.TriggerComponent.html",
    "title": "Class TriggerComponent | D3T - Core | 0.9.34",
    "keywords": "Class TriggerComponent Base class for both Trigger conditions and actions. Inheritance Object TriggerComponent TriggerAction TriggerCondition Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TriggerComponent : MonoBehaviour Fields triggerController Declaration protected TriggerController triggerController Field Value Type Description TriggerController Properties DefaultGizmosColor Declaration protected virtual Color DefaultGizmosColor { get; } Property Value Type Description Color HasTriggerController Declaration public bool HasTriggerController { get; } Property Value Type Description Boolean TriggerController Declaration public TriggerController TriggerController { get; set; } Property Value Type Description TriggerController Methods DrawGizmosCircle(Vector3, Single) Declaration protected void DrawGizmosCircle(Vector3 pos, float radius) Parameters Type Name Description Vector3 pos Single radius DrawGizmosRangeDisc(Vector3, Single, Single) Declaration protected void DrawGizmosRangeDisc(Vector3 pos, float radius1, float radius2) Parameters Type Name Description Vector3 pos Single radius1 Single radius2 OnDrawGizmos() Declaration protected void OnDrawGizmos() OnDrawGizmosSelected() Declaration protected void OnDrawGizmosSelected() OnGizmos(Boolean) Declaration protected virtual void OnGizmos(bool selected) Parameters Type Name Description Boolean selected SetGizmoColor(Boolean, Boolean) Declaration protected void SetGizmoColor(bool selected, bool solid) Parameters Type Name Description Boolean selected Boolean solid"
  },
  "api/D3T.Triggers.TriggerAction.html": {
    "href": "api/D3T.Triggers.TriggerAction.html",
    "title": "Class TriggerAction | D3T - Core | 0.9.34",
    "keywords": "Class TriggerAction Base class for Trigger Action components. Inheritance Object TriggerComponent TriggerAction AddStat ChangeMaterial IdleAction InvokeUnityEvent LevelLoader SetComponentEnabled SetObjectsActive SetRigidbodyKinematicState ToggleShaderKeyword ApplyDamage SignalSequencer MoveTransform PlayAnimatorState PlayMusic PlaySound PrintMessage SendSignal StopMusic Inherited Members TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TriggerAction : TriggerComponent, ISignalLink, ISerializable Fields enableSerialization Declaration public bool enableSerialization Field Value Type Description Boolean execution Declaration public TriggerAction.ExecutionSettings execution Field Value Type Description TriggerAction.ExecutionSettings signalState Declaration public TriggerAction.ExecutionSettings.SignalModification signalState Field Value Type Description TriggerAction.ExecutionSettings.SignalModification Properties DefaultGizmosColor Declaration protected override Color DefaultGizmosColor { get; } Property Value Type Description Color Overrides TriggerComponent.DefaultGizmosColor SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Implements ISerializable.SerializationEnabled Methods Execute(Boolean) Executes the actual trigger effect. Execution will only occur if the execution limit was not reached and the component is enabled. Declaration protected abstract void Execute(bool state) Parameters Type Name Description Boolean state The state of the signal being sent. ExecuteAction(Boolean) Declaration public bool ExecuteAction(bool state) Parameters Type Name Description Boolean state Returns Type Description Boolean Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data Implements ISerializable.Load(DataContainer) OnLoad(DataContainer) Declaration protected virtual void OnLoad(DataContainer data) Parameters Type Name Description DataContainer data OnReceiveSignal(Boolean, Int32) Declaration public bool OnReceiveSignal(bool state, int extraData) Parameters Type Name Description Boolean state Int32 extraData Returns Type Description Boolean Implements ISignalLink.OnReceiveSignal(Boolean, Int32) OnSave(DataContainer) Declaration protected virtual void OnSave(DataContainer container) Parameters Type Name Description DataContainer container Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Implements ISerializable.Save(DataContainer) Start() Declaration protected void Start()"
  },
  "api/D3T.Triggers.TriggerAction.ExecutionSettings.html": {
    "href": "api/D3T.Triggers.TriggerAction.ExecutionSettings.html",
    "title": "Class TriggerAction.ExecutionSettings | D3T - Core | 0.9.34",
    "keywords": "Class TriggerAction.ExecutionSettings Inheritance Object TriggerAction.ExecutionSettings Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ExecutionSettings Fields allowNonTriggerSignals Declaration public bool allowNonTriggerSignals Field Value Type Description Boolean delay Declaration public float delay Field Value Type Description Single executionLimit Declaration public NullableInt executionLimit Field Value Type Description NullableInt reactToSignals Declaration public TriggerAction.ExecutionSettings.SignalCondition reactToSignals Field Value Type Description TriggerAction.ExecutionSettings.SignalCondition"
  },
  "api/D3T.Triggers.TriggerAction.ExecutionSettings.SignalModification.html": {
    "href": "api/D3T.Triggers.TriggerAction.ExecutionSettings.SignalModification.html",
    "title": "Enum TriggerAction.ExecutionSettings.SignalModification | D3T - Core | 0.9.34",
    "keywords": "Enum TriggerAction.ExecutionSettings.SignalModification Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum SignalModification Fields Name Description False InvertInput SameAsInput True"
  },
  "api/D3T.Triggers.Actions.ToggleShaderKeyword.Mode.html": {
    "href": "api/D3T.Triggers.Actions.ToggleShaderKeyword.Mode.html",
    "title": "Enum ToggleShaderKeyword.Mode | D3T - Core | 0.9.34",
    "keywords": "Enum ToggleShaderKeyword.Mode Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum Mode Fields Name Description Disable Enable Toggle"
  },
  "api/D3T.Triggers.Actions.StartSender.html": {
    "href": "api/D3T.Triggers.Actions.StartSender.html",
    "title": "Class StartSender | D3T - Core | 0.9.34",
    "keywords": "Class StartSender Inheritance Object StartSender Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StartSender : MonoBehaviour Fields signals Declaration public StartSender.SignalSettings[] signals Field Value Type Description StartSender.SignalSettings []"
  },
  "api/D3T.Triggers.Actions.StartSender.SignalSettings.html": {
    "href": "api/D3T.Triggers.Actions.StartSender.SignalSettings.html",
    "title": "Class StartSender.SignalSettings | D3T - Core | 0.9.34",
    "keywords": "Class StartSender.SignalSettings Sends a signal as soon as the GameObject is activated. Inheritance Object StartSender.SignalSettings Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SignalSettings Fields data Declaration public int data Field Value Type Description Int32 state Declaration public bool state Field Value Type Description Boolean target Declaration public Transform target Field Value Type Description Transform"
  },
  "api/D3T.Triggers.Actions.SetRigidbodyKinematicState.html": {
    "href": "api/D3T.Triggers.Actions.SetRigidbodyKinematicState.html",
    "title": "Class SetRigidbodyKinematicState | D3T - Core | 0.9.34",
    "keywords": "Class SetRigidbodyKinematicState Toggles the isKinematic state of the specified rigidbodies. Inheritance Object TriggerComponent TriggerAction SetRigidbodyKinematicState Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SetRigidbodyKinematicState : TriggerAction, ISignalLink, ISerializable Fields targets Declaration [ReferenceRequiresComponent(typeof(Rigidbody))] public SceneObjectReference[] targets Field Value Type Description SceneObjectReference [] Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Graphics.TextureFontAsset.html": {
    "href": "api/D3T.Graphics.TextureFontAsset.html",
    "title": "Class TextureFontAsset | D3T - Core | 0.9.34",
    "keywords": "Class TextureFontAsset Inheritance Object TextureFontAsset Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TextureFontAsset : ScriptableObject Fields characterSet Declaration public TextureFontAsset.CharacterSet characterSet Field Value Type Description TextureFontAsset.CharacterSet charInfo Declaration public TextureFontAsset.CharacterInfo[] charInfo Field Value Type Description TextureFontAsset.CharacterInfo [] charSpacing Declaration public float charSpacing Field Value Type Description Single customCharacterSet Declaration public string customCharacterSet Field Value Type Description String defaultWidth Declaration public float defaultWidth Field Value Type Description Single gridCellCount Declaration public Vector2Int gridCellCount Field Value Type Description Vector2Int inset Declaration public Vector2 inset Field Value Type Description Vector2 lineSpacing Declaration public float lineSpacing Field Value Type Description Single pixelPerfect Declaration public bool pixelPerfect Field Value Type Description Boolean sourceTexture Declaration public Texture2D sourceTexture Field Value Type Description Texture2D spaceWidth Declaration public float spaceWidth Field Value Type Description Single Properties CellAspectRatio Declaration public float CellAspectRatio { get; } Property Value Type Description Single CharacterSetString Declaration public string CharacterSetString { get; } Property Value Type Description String NativeFontSize Declaration public int NativeFontSize { get; } Property Value Type Description Int32 Methods BuildAtlas() Declaration public void BuildAtlas() ConvertAnchor(TextAnchor, out SByte, out SByte) Declaration public void ConvertAnchor(TextAnchor a, out sbyte horizontal, out sbyte vertical) Parameters Type Name Description TextAnchor a SByte horizontal SByte vertical GetCharAspectWidth(Char) Declaration public float GetCharAspectWidth(char c) Parameters Type Name Description Char c Returns Type Description Single GetCharRect(Char) Declaration public Rect? GetCharRect(char c) Parameters Type Name Description Char c Returns Type Description Nullable < Rect > GetLongestLineWidth(String, Single) Declaration public float GetLongestLineWidth(string str, float extraTracking = 0F) Parameters Type Name Description String str Single extraTracking Returns Type Description Single GetTextHeight(String, Single) Declaration public float GetTextHeight(string text, float extraLeading = 0F) Parameters Type Name Description String text Single extraLeading Returns Type Description Single GetTextWidth(String, Single) Declaration public float GetTextWidth(string text, float extraTracking = 0F) Parameters Type Name Description String text Single extraTracking Returns Type Description Single WriteToGUI(Vector2, String, TextAnchor, Color, Int32) Declaration public void WriteToGUI(Vector2 pos, string text, TextAnchor anchor, Color color, int fontScale = 32) Parameters Type Name Description Vector2 pos String text TextAnchor anchor Color color Int32 fontScale WriteToTextureNativeSize(Texture2D, Vector2Int, String, TextAnchor, Color, Int32) Declaration public void WriteToTextureNativeSize(Texture2D target, Vector2Int pos, string text, TextAnchor anchor, Color color, int fontScale = 1) Parameters Type Name Description Texture2D target Vector2Int pos String text TextAnchor anchor Color color Int32 fontScale"
  },
  "api/D3T.Graphics.TextureFontAsset.CharacterSet.html": {
    "href": "api/D3T.Graphics.TextureFontAsset.CharacterSet.html",
    "title": "Enum TextureFontAsset.CharacterSet | D3T - Core | 0.9.34",
    "keywords": "Enum TextureFontAsset.CharacterSet Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum CharacterSet Fields Name Description AZ AZ_09 AZ_09_Punct AZ_az_09 AZ_az_09_Punct Custom FullSet FullSetUppercaseOnly"
  },
  "api/D3T.GameSettings.NamedScriptableObject.html": {
    "href": "api/D3T.GameSettings.NamedScriptableObject.html",
    "title": "Class GameSettings.NamedScriptableObject | D3T - Core | 0.9.34",
    "keywords": "Class GameSettings.NamedScriptableObject Inheritance Object GameSettings.NamedScriptableObject Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedScriptableObject Fields key Declaration public string key Field Value Type Description String obj Declaration public ScriptableObject obj Field Value Type Description ScriptableObject"
  },
  "api/D3T.GameSettings.GUISettings.html": {
    "href": "api/D3T.GameSettings.GUISettings.html",
    "title": "Class GameSettings.GUISettings | D3T - Core | 0.9.34",
    "keywords": "Class GameSettings.GUISettings Inheritance Object GameSettings.GUISettings Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class GUISettings Fields mouseEventLayerMask Declaration public LayerMask mouseEventLayerMask Field Value Type Description LayerMask styleCollections Declaration public GUIStyleCollectionAsset[] styleCollections Field Value Type Description GUIStyleCollectionAsset []"
  },
  "api/D3T.Cameras.IEventCamera.html": {
    "href": "api/D3T.Cameras.IEventCamera.html",
    "title": "Interface IEventCamera | D3T - Core | 0.9.34",
    "keywords": "Interface IEventCamera Interface for receiving callbacks when the CameraManager switches to this camera. Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEventCamera Methods OnCameraChanged() Declaration void OnCameraChanged()"
  },
  "api/D3T.Cameras.FollowCamera.Target.html": {
    "href": "api/D3T.Cameras.FollowCamera.Target.html",
    "title": "Class FollowCamera.Target | D3T - Core | 0.9.34",
    "keywords": "Class FollowCamera.Target Inheritance Object FollowCamera.Target Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Target Fields ignoreXRotation Declaration public bool ignoreXRotation Field Value Type Description Boolean ignoreZRotation Declaration public bool ignoreZRotation Field Value Type Description Boolean localPositionOffset Declaration public Vector3 localPositionOffset Field Value Type Description Vector3 localRotationOffset Declaration public Vector3 localRotationOffset Field Value Type Description Vector3 transform Declaration public Transform transform Field Value Type Description Transform worldPositionOffset Declaration public Vector3 worldPositionOffset Field Value Type Description Vector3"
  },
  "api/D3T.Cameras.CameraPair.ChildCamera.html": {
    "href": "api/D3T.Cameras.CameraPair.ChildCamera.html",
    "title": "Class CameraPair.ChildCamera | D3T - Core | 0.9.34",
    "keywords": "Class CameraPair.ChildCamera Inheritance Object CameraPair.ChildCamera Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ChildCamera Fields camera Declaration public Camera camera Field Value Type Description Camera syncCullingMask Declaration public bool syncCullingMask Field Value Type Description Boolean syncEnabledState Declaration public bool syncEnabledState Field Value Type Description Boolean syncFieldOfView Declaration public bool syncFieldOfView Field Value Type Description Boolean syncTargetDisplay Declaration public bool syncTargetDisplay Field Value Type Description Boolean"
  },
  "api/D3T.Audio.AudioManager.html": {
    "href": "api/D3T.Audio.AudioManager.html",
    "title": "Class AudioManager | D3T - Core | 0.9.34",
    "keywords": "Class AudioManager Manager class for audio volume control and playing sound effects. Inheritance Object AudioManager Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AudioManager Properties DefaultFXGroup Declaration public static AudioMixerGroup DefaultFXGroup { get; } Property Value Type Description AudioMixerGroup DefaultInterfaceGroup Declaration public static AudioMixerGroup DefaultInterfaceGroup { get; } Property Value Type Description AudioMixerGroup DefaultMusicGroup Declaration public static AudioMixerGroup DefaultMusicGroup { get; } Property Value Type Description AudioMixerGroup FXVolumeScale Declaration public static float FXVolumeScale { get; set; } Property Value Type Description Single InterfaceVolumeScale Declaration public static float InterfaceVolumeScale { get; set; } Property Value Type Description Single MasterMixer Declaration public static AudioMixer MasterMixer { get; } Property Value Type Description AudioMixer MasterVolumeScale Declaration public static float MasterVolumeScale { get; set; } Property Value Type Description Single MusicVolumeScale Declaration public static float MusicVolumeScale { get; set; } Property Value Type Description Single Methods Init(GameSettings) Declaration public static void Init(GameSettings settings) Parameters Type Name Description GameSettings settings PlaySoundEffectAt(Vector3, AudioClipSettings, AudioClipSettingsOverride, InstancePool<AudioSource>) Declaration public static void PlaySoundEffectAt(Vector3 position, AudioClipSettings settings, AudioClipSettingsOverride overrides, InstancePool<AudioSource> sourcePool) Parameters Type Name Description Vector3 position AudioClipSettings settings AudioClipSettingsOverride overrides InstancePool < AudioSource > sourcePool PlaySoundEffectAt(Vector3, AudioClipSettings, InstancePool<AudioSource>) Declaration public static void PlaySoundEffectAt(Vector3 position, AudioClipSettings settings, InstancePool<AudioSource> sourcePool = null) Parameters Type Name Description Vector3 position AudioClipSettings settings InstancePool < AudioSource > sourcePool RegisterSnapshotBlendSource(IMixerSnapshotBlendSource) Adds the given snapshot blending source to the list of active sources. Declaration public static void RegisterSnapshotBlendSource(IMixerSnapshotBlendSource src) Parameters Type Name Description IMixerSnapshotBlendSource src RemoveSnapshotBlendSource(IMixerSnapshotBlendSource) Removes the given snapshot blending source from the list of active sources. Declaration public static void RemoveSnapshotBlendSource(IMixerSnapshotBlendSource src) Parameters Type Name Description IMixerSnapshotBlendSource src"
  },
  "api/D3T.Animation.html": {
    "href": "api/D3T.Animation.html",
    "title": "Namespace D3T.Animation | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Animation Classes AnimationPlayer A basic single-clip animation player without the need of creating a separate AnimatorController. LinearMovementAnimation Use this component to create a linear animation between two points (e.g. moving platforms) SpinAnimation Use this component to have objects spin around their Y axis. StateMachineCallbackSender Interfaces IStateMachineEventReceiver Enables receiving callbacks from StateMachineBehaviours on an attached animator. Enums LinearMovementAnimation.Mode StateMachineCallbackSender.SearchMode"
  },
  "api/D3T.CommonDamageTypes.html": {
    "href": "api/D3T.CommonDamageTypes.html",
    "title": "Class CommonDamageTypes | D3T - Core | 0.9.34",
    "keywords": "Class CommonDamageTypes A list of commonly used damage type names. Inheritance Object CommonDamageTypes Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CommonDamageTypes Fields blades Declaration public const string blades = \"blades\" Field Value Type Description String bullets Declaration public const string bullets = \"bullets\" Field Value Type Description String fall Declaration public const string fall = \"fall\" Field Value Type Description String fire Declaration public const string fire = \"fire\" Field Value Type Description String physical Declaration public const string physical = \"physical\" Field Value Type Description String suffocation Declaration public const string suffocation = \"suffocation\" Field Value Type Description String"
  },
  "api/D3T.Cameras.FollowCamera.html": {
    "href": "api/D3T.Cameras.FollowCamera.html",
    "title": "Class FollowCamera | D3T - Core | 0.9.34",
    "keywords": "Class FollowCamera Automatically follows the given transform. Useful for third person perspectives. Inheritance Object FollowCamera Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FollowCamera : MonoBehaviour Fields collisionAvoidance Declaration public FollowCamera.CollisionAvoidance collisionAvoidance Field Value Type Description FollowCamera.CollisionAvoidance currentTargetIndex Declaration protected int currentTargetIndex Field Value Type Description Int32 depthOfFieldEffectController Declaration public VCComponent depthOfFieldEffectController Field Value Type Description VCComponent positionSmoothing Declaration public float positionSmoothing Field Value Type Description Single rotationSmoothing Declaration public float rotationSmoothing Field Value Type Description Single targets Declaration public FollowCamera.Target[] targets Field Value Type Description FollowCamera.Target [] updateMode Declaration public FollowCamera.UpdateMode updateMode Field Value Type Description FollowCamera.UpdateMode Properties ActiveTarget Declaration public FollowCamera.Target ActiveTarget { get; } Property Value Type Description FollowCamera.Target Methods GetTarget(out Vector3, out Quaternion, Boolean) Declaration public bool GetTarget(out Vector3 position, out Quaternion rotation, bool ignoreCollisionAvoidance = false) Parameters Type Name Description Vector3 position Quaternion rotation Boolean ignoreCollisionAvoidance Returns Type Description Boolean OnDrawGizmosSelected() Declaration protected virtual void OnDrawGizmosSelected() UpdatePosition(Single, Boolean) Declaration protected virtual void UpdatePosition(float delta, bool updateRigidbody) Parameters Type Name Description Single delta Boolean updateRigidbody"
  },
  "api/D3T.Cameras.FollowCamera.UpdateMode.html": {
    "href": "api/D3T.Cameras.FollowCamera.UpdateMode.html",
    "title": "Enum FollowCamera.UpdateMode | D3T - Core | 0.9.34",
    "keywords": "Enum FollowCamera.UpdateMode Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum UpdateMode Fields Name Description FixedUpdate LateUpdate Update"
  },
  "api/D3TEditor.CreateAnimationClipButtonAttributeDrawer.html": {
    "href": "api/D3TEditor.CreateAnimationClipButtonAttributeDrawer.html",
    "title": "Class CreateAnimationClipButtonAttributeDrawer | D3T - Core | 0.9.34",
    "keywords": "Class CreateAnimationClipButtonAttributeDrawer Inheritance Object CreateAnimationClipButtonAttributeDrawer Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CreateAnimationClipButtonAttributeDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.AudioClipSettingsDrawer.html": {
    "href": "api/D3TEditor.AudioClipSettingsDrawer.html",
    "title": "Class AudioClipSettingsDrawer | D3T - Core | 0.9.34",
    "keywords": "Class AudioClipSettingsDrawer Inheritance Object AudioClipSettingsDrawer Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AudioClipSettingsDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.AssetUserDataEditor.html": {
    "href": "api/D3TEditor.AssetUserDataEditor.html",
    "title": "Class AssetUserDataEditor | D3T - Core | 0.9.34",
    "keywords": "Class AssetUserDataEditor Inheritance Object AssetUserDataEditor Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AssetUserDataEditor : EditorWindow Fields supportedAssetTypes Declaration public static string[] supportedAssetTypes Field Value Type Description String [] Methods ShowWindow() Declaration public static void ShowWindow()"
  },
  "api/D3TEditor.AssetUserDataEditor.Asset.html": {
    "href": "api/D3TEditor.AssetUserDataEditor.Asset.html",
    "title": "Class AssetUserDataEditor.Asset | D3T - Core | 0.9.34",
    "keywords": "Class AssetUserDataEditor.Asset Inheritance Object AssetUserDataEditor.Asset Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Asset Constructors Asset(AssetImporter, Int32) Declaration public Asset(AssetImporter a, int num) Parameters Type Name Description AssetImporter a Int32 num Fields assetObject Declaration public readonly Object assetObject Field Value Type Description Object importer Declaration public readonly AssetImporter importer Field Value Type Description AssetImporter index Declaration public readonly int index Field Value Type Description Int32 Properties Author Declaration public string Author { get; set; } Property Value Type Description String Category Declaration public string Category { get; set; } Property Value Type Description String IsDirty Declaration public bool IsDirty { get; } Property Value Type Description Boolean ListInCredits Declaration public bool ListInCredits { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String Source Declaration public string Source { get; set; } Property Value Type Description String Methods Clear() Declaration public void Clear() GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() LoadFromUserData() Declaration public void LoadFromUserData() SaveModifiedProperties() Declaration public void SaveModifiedProperties()"
  },
  "api/D3T.Triggers.Actions.AddStat.html": {
    "href": "api/D3T.Triggers.Actions.AddStat.html",
    "title": "Class AddStat | D3T - Core | 0.9.34",
    "keywords": "Class AddStat Sets or increases the specified player stat. Inheritance Object TriggerComponent TriggerAction AddStat Inherited Members TriggerAction.enableSerialization TriggerAction.execution TriggerAction.signalState TriggerAction.DefaultGizmosColor TriggerAction.SerializationEnabled TriggerAction.Start() TriggerAction.OnReceiveSignal(Boolean, Int32) TriggerAction.ExecuteAction(Boolean) TriggerAction.Save(DataContainer) TriggerAction.OnSave(DataContainer) TriggerAction.Load(DataContainer) TriggerAction.OnLoad(DataContainer) TriggerComponent.TriggerController TriggerComponent.HasTriggerController TriggerComponent.triggerController TriggerComponent.SetGizmoColor(Boolean, Boolean) TriggerComponent.OnDrawGizmos() TriggerComponent.OnDrawGizmosSelected() TriggerComponent.OnGizmos(Boolean) TriggerComponent.DrawGizmosCircle(Vector3, Single) TriggerComponent.DrawGizmosRangeDisc(Vector3, Single, Single) Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AddStat : TriggerAction, ISignalLink, ISerializable Fields statName Declaration public string statName Field Value Type Description String statType Declaration public AddStat.StatType statType Field Value Type Description AddStat.StatType statValue Declaration public float statValue Field Value Type Description Single Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state Overrides TriggerAction.Execute(Boolean)"
  },
  "api/D3T.Triggers.Actions.AddStat.StatType.html": {
    "href": "api/D3T.Triggers.Actions.AddStat.StatType.html",
    "title": "Enum AddStat.StatType | D3T - Core | 0.9.34",
    "keywords": "Enum AddStat.StatType Namespace : D3T.Triggers.Actions <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum StatType Fields Name Description Bool Float Int"
  },
  "api/D3T.Gui.TextGuiWriterBase.html": {
    "href": "api/D3T.Gui.TextGuiWriterBase.html",
    "title": "Class TextGuiWriterBase | D3T - Core | 0.9.34",
    "keywords": "Class TextGuiWriterBase Base class for receiving text messages that should be displayed on the screen. Inheritance Object TextGuiWriterBase Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TextGuiWriterBase : MonoBehaviour Fields baseInstance Declaration public static TextGuiWriterBase baseInstance Field Value Type Description TextGuiWriterBase defaultElement Declaration public TextGuiWriterBase.TextElement defaultElement Field Value Type Description TextGuiWriterBase.TextElement textElements Declaration public Dictionary<string, TextGuiWriterBase.TextElement> textElements Field Value Type Description Dictionary < String , TextGuiWriterBase.TextElement > Methods OnUpdate() Declaration protected virtual void OnUpdate() RegisterTextElements(Dictionary<String, TextGuiWriterBase.TextElement>) Declaration protected abstract void RegisterTextElements(Dictionary<string, TextGuiWriterBase.TextElement> textElements) Parameters Type Name Description Dictionary < String , TextGuiWriterBase.TextElement > textElements SetDefaultText(String, Nullable<Single>, Nullable<Color>) Declaration public static void SetDefaultText(string text, float? duration = default(float? ), Color? color = default(Color? )) Parameters Type Name Description String text Nullable < Single > duration Nullable < Color > color SetTextForElement(String, String, Nullable<Single>, Nullable<Color>) Declaration public static void SetTextForElement(string element, string text, float? duration = default(float? ), Color? color = default(Color? )) Parameters Type Name Description String element String text Nullable < Single > duration Nullable < Color > color Start() Declaration protected void Start()"
  },
  "api/D3T.Gui.TextGuiWriterBase.TextElement.html": {
    "href": "api/D3T.Gui.TextGuiWriterBase.TextElement.html",
    "title": "Class TextGuiWriterBase.TextElement | D3T - Core | 0.9.34",
    "keywords": "Class TextGuiWriterBase.TextElement Inheritance Object TextGuiWriterBase.TextElement Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class TextElement Fields defaultDuration Declaration public float defaultDuration Field Value Type Description Single fadeInLength Declaration public float fadeInLength Field Value Type Description Single fadeOutLength Declaration public float fadeOutLength Field Value Type Description Single uiElement Declaration public Text uiElement Field Value Type Description Text useUnscaledDeltaTime Declaration public bool useUnscaledDeltaTime Field Value Type Description Boolean Properties HasText Declaration public bool HasText { get; } Property Value Type Description Boolean Methods FadeOutText() Declaration public void FadeOutText() Init(TextGuiWriterBase) Declaration public void Init(TextGuiWriterBase parent) Parameters Type Name Description TextGuiWriterBase parent SetText(String, Nullable<Single>, Nullable<Color>) Declaration public void SetText(string s, float? duration = default(float? ), Color? color = default(Color? )) Parameters Type Name Description String s Nullable < Single > duration Nullable < Color > color Update() Declaration public void Update()"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.NamedAudioClip.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.NamedAudioClip.html",
    "title": "Class GUIStyleCollectionAsset.NamedAudioClip | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.NamedAudioClip Inheritance Object GUIStyleCollectionAsset.NamedValue < AudioClip > GUIStyleCollectionAsset.NamedAudioClip Inherited Members GUIStyleCollectionAsset.NamedValue<AudioClip>.name GUIStyleCollectionAsset.NamedValue<AudioClip>.content Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class NamedAudioClip : GUIStyleCollectionAsset.NamedValue<AudioClip>"
  },
  "api/D3T.Gui.GUIStyleCollectionAsset.GUISkinAutoGenerationData.html": {
    "href": "api/D3T.Gui.GUIStyleCollectionAsset.GUISkinAutoGenerationData.html",
    "title": "Class GUIStyleCollectionAsset.GUISkinAutoGenerationData | D3T - Core | 0.9.34",
    "keywords": "Class GUIStyleCollectionAsset.GUISkinAutoGenerationData Inheritance Object GUIStyleCollectionAsset.GUISkinAutoGenerationData Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class GUISkinAutoGenerationData Fields boxName Declaration public string boxName Field Value Type Description String buttonName Declaration public string buttonName Field Value Type Description String font Declaration public Font font Field Value Type Description Font horizontalSliderName Declaration public string horizontalSliderName Field Value Type Description String horizontalSliderThumbName Declaration public string horizontalSliderThumbName Field Value Type Description String labelName Declaration public string labelName Field Value Type Description String scrollViewName Declaration public string scrollViewName Field Value Type Description String toggleName Declaration public string toggleName Field Value Type Description String verticalSliderName Declaration public string verticalSliderName Field Value Type Description String verticalSliderThumbName Declaration public string verticalSliderThumbName Field Value Type Description String"
  },
  "api/D3T.Gui.GUIChangeCallType.html": {
    "href": "api/D3T.Gui.GUIChangeCallType.html",
    "title": "Enum GUIChangeCallType | D3T - Core | 0.9.34",
    "keywords": "Enum GUIChangeCallType Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum GUIChangeCallType Fields Name Description From To"
  },
  "api/D3T.Gui.GUIChangeAttribute.html": {
    "href": "api/D3T.Gui.GUIChangeAttribute.html",
    "title": "Class GUIChangeAttribute | D3T - Core | 0.9.34",
    "keywords": "Class GUIChangeAttribute Add this attribute to a static method to have it called when the current GUI menu has changed. Inheritance Object Attribute GUIChangeAttribute Namespace : D3T.Gui <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method)] public class GUIChangeAttribute : Attribute, _Attribute Constructors GUIChangeAttribute(String, GUIChangeCallType) Declaration public GUIChangeAttribute(string menuID, GUIChangeCallType callType = GUIChangeCallType.To) Parameters Type Name Description String menuID GUIChangeCallType callType Fields callType Declaration public GUIChangeCallType callType Field Value Type Description GUIChangeCallType menuID Declaration public string menuID Field Value Type Description String"
  },
  "api/D3T.Graphics.MaterialPropertyBlockSetter.ColorProperty.html": {
    "href": "api/D3T.Graphics.MaterialPropertyBlockSetter.ColorProperty.html",
    "title": "Class MaterialPropertyBlockSetter.ColorProperty | D3T - Core | 0.9.34",
    "keywords": "Class MaterialPropertyBlockSetter.ColorProperty Inheritance Object MaterialPropertyBlockSetter.ColorProperty Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class ColorProperty Fields color Declaration public Color color Field Value Type Description Color enable Declaration public bool enable Field Value Type Description Boolean"
  },
  "api/D3T.Graphics.LookAt.html": {
    "href": "api/D3T.Graphics.LookAt.html",
    "title": "Class LookAt | D3T - Core | 0.9.34",
    "keywords": "Class LookAt Inheritance Object LookAt Namespace : D3T.Graphics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class LookAt : MonoBehaviour Fields cachedTargets Declaration public Transform[] cachedTargets Field Value Type Description Transform [] smoothing Declaration public float smoothing Field Value Type Description Single target Declaration public Transform target Field Value Type Description Transform Methods SetTarget(Int32) Declaration public void SetTarget(int cache) Parameters Type Name Description Int32 cache"
  },
  "api/D3T.DevTools.ParsingFailedException.html": {
    "href": "api/D3T.DevTools.ParsingFailedException.html",
    "title": "Class ParsingFailedException | D3T - Core | 0.9.34",
    "keywords": "Class ParsingFailedException Inheritance Object Exception ParsingFailedException Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ParsingFailedException : Exception, ISerializable, _Exception Constructors ParsingFailedException(String) Declaration public ParsingFailedException(string msg) Parameters Type Name Description String msg"
  },
  "api/D3T.DevTools.FPSCounter.html": {
    "href": "api/D3T.DevTools.FPSCounter.html",
    "title": "Class FPSCounter | D3T - Core | 0.9.34",
    "keywords": "Class FPSCounter Inheritance Object FPSCounter Namespace : D3T.DevTools <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class FPSCounter Properties CurrentFPS Declaration public static float CurrentFPS { get; } Property Value Type Description Single Visible Declaration public static bool Visible { get; set; } Property Value Type Description Boolean Methods Init() Declaration public static void Init()"
  },
  "api/D3T.DamageModificationTable.html": {
    "href": "api/D3T.DamageModificationTable.html",
    "title": "Class DamageModificationTable | D3T - Core | 0.9.34",
    "keywords": "Class DamageModificationTable Use this class to implement damage resistance or weaknesses to certain types of damage. Inheritance Object DamageModificationTable Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DamageModificationTable Methods ApplyDamageModification(Single, String) Declaration public float ApplyDamageModification(float damage, string type) Parameters Type Name Description Single damage String type Returns Type Description Single"
  },
  "api/D3T.Cameras.html": {
    "href": "api/D3T.Cameras.html",
    "title": "Namespace D3T.Cameras | D3T - Core | 0.9.34",
    "keywords": "Namespace D3T.Cameras Classes CameraFollowZoom Automatically zooms the camera towards the target transform. CameraFOVController Controls the camera's field of view by multiplying the default field of view with the provided FOV scale. CameraManager The CameraManager is used to switch and keep track of currently active cameras in the scene. CameraPair Utility script for syncing a parent camera with one or more child (or overlay) cameras. CameraPair.ChildCamera CameraShakeController Handles and calculates shaking amplitudes for cameras in the scene. CameraShakeSource Adds a local or global camera shake source to the scene. EventCamera A simple IEventCamera implementation that automatically plays the specified Animator state, then cuts back to the MainCamera. FollowCamera Automatically follows the given transform. Useful for third person perspectives. FollowCamera.CollisionAvoidance FollowCamera.Target FreeLookCamera A simple smooth free look camera Interfaces ICameraShakeSource Interface for adding camera shake sources to the scene. IEventCamera Interface for receiving callbacks when the CameraManager switches to this camera. Enums FollowCamera.UpdateMode"
  },
  "api/D3T.Cameras.CameraFOVController.html": {
    "href": "api/D3T.Cameras.CameraFOVController.html",
    "title": "Class CameraFOVController | D3T - Core | 0.9.34",
    "keywords": "Class CameraFOVController Controls the camera's field of view by multiplying the default field of view with the provided FOV scale. Inheritance Object CameraFOVController Namespace : D3T.Cameras <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CameraFOVController : MonoBehaviour Fields childCameras Declaration public Camera[] childCameras Field Value Type Description Camera [] defaultFOV Declaration public float defaultFOV Field Value Type Description Single fovScale Declaration public float fovScale Field Value Type Description Single matchPlayerSettings Declaration public bool matchPlayerSettings Field Value Type Description Boolean resetEveryFrame Declaration public bool resetEveryFrame Field Value Type Description Boolean Properties DefaultFOV Declaration public float DefaultFOV { get; } Property Value Type Description Single Methods GetFOVScaleForAngle(Single) Converts the targetFOV angle into a compatible FOV scale. Declaration public float GetFOVScaleForAngle(float targetFOVAngle) Parameters Type Name Description Single targetFOVAngle Returns Type Description Single"
  },
  "api/D3T.Audio.MusicPlayer.Playlist.html": {
    "href": "api/D3T.Audio.MusicPlayer.Playlist.html",
    "title": "Class MusicPlayer.Playlist | D3T - Core | 0.9.34",
    "keywords": "Class MusicPlayer.Playlist Inheritance Object ToggleableFeature MusicPlayer.Playlist Inherited Members ToggleableFeature.Enabled ToggleableFeature.OnEnable() ToggleableFeature.OnDisable() Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Playlist : ToggleableFeature Fields clips Declaration public AudioClipSettings[] clips Field Value Type Description AudioClipSettings [] delayBetweenTracks Declaration public float delayBetweenTracks Field Value Type Description Single shuffle Declaration public bool shuffle Field Value Type Description Boolean Methods PlayClips(MusicPlayer) Declaration public IEnumerator PlayClips(MusicPlayer instance) Parameters Type Name Description MusicPlayer instance Returns Type Description IEnumerator"
  },
  "api/D3T.Audio.AudioClipSettingsOverride.OverrideMode.html": {
    "href": "api/D3T.Audio.AudioClipSettingsOverride.OverrideMode.html",
    "title": "Enum AudioClipSettingsOverride.OverrideMode | D3T - Core | 0.9.34",
    "keywords": "Enum AudioClipSettingsOverride.OverrideMode Namespace : D3T.Audio <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum OverrideMode Fields Name Description Add Multiply Override"
  },
  "api/D3TEditor.PlaymodeEditorKeybinds.html": {
    "href": "api/D3TEditor.PlaymodeEditorKeybinds.html",
    "title": "Class PlaymodeEditorKeybinds | D3T - Core | 0.9.34",
    "keywords": "Class PlaymodeEditorKeybinds Inheritance Object PlaymodeEditorKeybinds Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PlaymodeEditorKeybinds Methods Init() Declaration public static void Init()"
  },
  "api/D3TEditor.MassReplacePrefabs.html": {
    "href": "api/D3TEditor.MassReplacePrefabs.html",
    "title": "Class MassReplacePrefabs | D3T - Core | 0.9.34",
    "keywords": "Class MassReplacePrefabs Inheritance Object MassReplacePrefabs Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MassReplacePrefabs : ScriptableWizard Fields keepName Declaration public bool keepName Field Value Type Description Boolean replace Declaration public GameObject replace Field Value Type Description GameObject"
  },
  "api/D3TEditor.LayerUsageCheck.html": {
    "href": "api/D3TEditor.LayerUsageCheck.html",
    "title": "Class LayerUsageCheck | D3T - Core | 0.9.34",
    "keywords": "Class LayerUsageCheck Inheritance Object LayerUsageCheck Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class LayerUsageCheck"
  },
  "api/D3TEditor.Inspector.AbstractSourceEditor.html": {
    "href": "api/D3TEditor.Inspector.AbstractSourceEditor.html",
    "title": "Class AbstractSourceEditor | D3T - Core | 0.9.34",
    "keywords": "Class AbstractSourceEditor Inheritance Object DrawBaseClassLastEditor < AbstractSource > AbstractSourceEditor Inherited Members DrawBaseClassLastEditor<AbstractSource>.OnInspectorGUI() Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AbstractSourceEditor : DrawBaseClassLastEditor<AbstractSource>"
  },
  "api/D3TEditor.ImportAssetFromPackage.html": {
    "href": "api/D3TEditor.ImportAssetFromPackage.html",
    "title": "Class ImportAssetFromPackage | D3T - Core | 0.9.34",
    "keywords": "Class ImportAssetFromPackage Inheritance Object ImportAssetFromPackage Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ImportAssetFromPackage Methods Import() Declaration public static void Import() Import_Validate() Declaration public static bool Import_Validate() Returns Type Description Boolean"
  },
  "api/D3TEditor.GUIDConflictResolver.html": {
    "href": "api/D3TEditor.GUIDConflictResolver.html",
    "title": "Class GUIDConflictResolver | D3T - Core | 0.9.34",
    "keywords": "Class GUIDConflictResolver Inheritance Object GUIDConflictResolver Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class GUIDConflictResolver Methods FixGUIDConflicts() Declaration public static void FixGUIDConflicts()"
  },
  "api/D3TEditor.GameObjectMenuExtras.html": {
    "href": "api/D3TEditor.GameObjectMenuExtras.html",
    "title": "Class GameObjectMenuExtras | D3T - Core | 0.9.34",
    "keywords": "Class GameObjectMenuExtras Inheritance Object GameObjectMenuExtras Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class GameObjectMenuExtras Methods CreateCompexTrigger(MenuCommand) Declaration public static void CreateCompexTrigger(MenuCommand menuCommand) Parameters Type Name Description MenuCommand menuCommand CreateRootObject(MenuCommand, String) Declaration public static GameObject CreateRootObject(MenuCommand menuCommand, string name) Parameters Type Name Description MenuCommand menuCommand String name Returns Type Description GameObject CreateSimpleTrigger(MenuCommand) Declaration public static void CreateSimpleTrigger(MenuCommand menuCommand) Parameters Type Name Description MenuCommand menuCommand"
  },
  "api/D3TEditor.GameObjectEditorUtility.html": {
    "href": "api/D3TEditor.GameObjectEditorUtility.html",
    "title": "Class GameObjectEditorUtility | D3T - Core | 0.9.34",
    "keywords": "Class GameObjectEditorUtility Inheritance Object GameObjectEditorUtility Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class GameObjectEditorUtility Methods IsInScene(GameObject) Declaration public static bool IsInScene(GameObject gameObject) Parameters Type Name Description GameObject gameObject Returns Type Description Boolean"
  },
  "api/D3TEditor.EnhancedHierarchy.html": {
    "href": "api/D3TEditor.EnhancedHierarchy.html",
    "title": "Class EnhancedHierarchy | D3T - Core | 0.9.34",
    "keywords": "Class EnhancedHierarchy Inheritance Object EnhancedHierarchy Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EnhancedHierarchy Fields typeIconData Declaration public static Dictionary<Type, (Texture icon, string tip)> typeIconData Field Value Type Description Dictionary < Type , ValueTuple < Texture , String >>"
  },
  "api/D3TEditor.DuplicateScriptRemover.html": {
    "href": "api/D3TEditor.DuplicateScriptRemover.html",
    "title": "Class DuplicateScriptRemover | D3T - Core | 0.9.34",
    "keywords": "Class DuplicateScriptRemover Inheritance Object DuplicateScriptRemover Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class DuplicateScriptRemover Methods RemoveDuplicates() Declaration public static void RemoveDuplicates()"
  },
  "api/D3TEditor.DuplicateCustom.html": {
    "href": "api/D3TEditor.DuplicateCustom.html",
    "title": "Class DuplicateCustom | D3T - Core | 0.9.34",
    "keywords": "Class DuplicateCustom Inheritance Object DuplicateCustom Namespace : D3TEditor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class DuplicateCustom Methods DuplicateGameObjectCommand() Declaration public static void DuplicateGameObjectCommand()"
  }
}