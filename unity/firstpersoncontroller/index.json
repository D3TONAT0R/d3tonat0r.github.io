{
  "api/D3T.Players.PlayerMovementModule.html": {
    "href": "api/D3T.Players.PlayerMovementModule.html",
    "title": "Class PlayerMovementModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule Player module that adds optional running, crouching, swimming and stamina mechanics. Inheritance Object PlayerModule PlayerMovementModule Inherited Members PlayerModule.player PlayerModule.Init(Player) PlayerModule.OnUpdate() PlayerModule.OnLateUpdate() PlayerModule.OnLand(Single, Vector3) PlayerModule.OnStopPlayer(Boolean) PlayerModule.OnTeleport(Vector3, Single, Vector3, Single, Boolean) PlayerModule.OnGizmo() Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerMovementModule : PlayerModule, ISerializable Fields blockSound Declaration public AudioClip blockSound Field Value Type Description AudioClip blockTime Declaration public float blockTime Field Value Type Description Single crouching Declaration public PlayerMovementModule.CrouchSettings crouching Field Value Type Description PlayerMovementModule.CrouchSettings crouchState Declaration public float crouchState Field Value Type Description Single firstPersonController Declaration public FirstPersonController firstPersonController Field Value Type Description FirstPersonController isCrouching Declaration public bool isCrouching Field Value Type Description Boolean isRunning Declaration public bool isRunning Field Value Type Description Boolean isSwimming Declaration public bool isSwimming Field Value Type Description Boolean movementVelocityChangeSpeed Declaration public float movementVelocityChangeSpeed Field Value Type Description Single platformHandling Declaration public PlayerMovementModule.PlatformHandling platformHandling Field Value Type Description PlayerMovementModule.PlatformHandling rigidbodyFeedback Declaration public PlayerMovementModule.RigidbodyFeedbackSettings rigidbodyFeedback Field Value Type Description PlayerMovementModule.RigidbodyFeedbackSettings running Declaration public PlayerMovementModule.RunSettings running Field Value Type Description PlayerMovementModule.RunSettings stamina Declaration public PlayerMovementModule.StaminaSettings stamina Field Value Type Description PlayerMovementModule.StaminaSettings swimming Declaration public PlayerMovementModule.SwimmingSettings swimming Field Value Type Description PlayerMovementModule.SwimmingSettings Properties SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Block() Declaration public void Block() GetMovementRateRelativeTo(MovementSpeed) Declaration public float GetMovementRateRelativeTo(MovementSpeed referenceMoveVelocity) Parameters Type Name Description MovementSpeed referenceMoveVelocity Returns Type Description Single Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data OnAllowMovement(ref Boolean, ref Boolean) Declaration public override void OnAllowMovement(ref bool move, ref bool jump) Parameters Type Name Description Boolean move Boolean jump Overrides PlayerModule.OnAllowMovement(ref Boolean, ref Boolean) OnCollision(Vector3, Collider, CollisionFlags) Declaration public override void OnCollision(Vector3 point, Collider collider, CollisionFlags flags) Parameters Type Name Description Vector3 point Collider collider CollisionFlags flags Overrides PlayerModule.OnCollision(Vector3, Collider, CollisionFlags) OnFixedUpdate() Declaration public override void OnFixedUpdate() Overrides PlayerModule.OnFixedUpdate() OnInit() Declaration public override void OnInit() Overrides PlayerModule.OnInit() OnLeftGround(Boolean) Declaration public override void OnLeftGround(bool jump) Parameters Type Name Description Boolean jump Overrides PlayerModule.OnLeftGround(Boolean) OnMove(ref Vector3, ref Vector3, Single) Declaration public override void OnMove(ref Vector3 moveVector, ref Vector3 externalMoveVector, float delta) Parameters Type Name Description Vector3 moveVector Vector3 externalMoveVector Single delta Overrides PlayerModule.OnMove(ref Vector3, ref Vector3, Single) OnPostMove(Boolean, Single) Declaration public override void OnPostMove(bool isFixedUpdate, float delta) Parameters Type Name Description Boolean isFixedUpdate Single delta Overrides PlayerModule.OnPostMove(Boolean, Single) OnPreMove(ref MovementSpeed, ref Single, ref Single, Single) Declaration public override void OnPreMove(ref MovementSpeed speed, ref float groundedControl, ref float stickToGroundForce, float delta) Parameters Type Name Description MovementSpeed speed Single groundedControl Single stickToGroundForce Single delta Overrides PlayerModule.OnPreMove(ref MovementSpeed, ref Single, ref Single, Single) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container"
  },
  "api/D3T.Players.PlayerMovementModule.SwimmingSettings.html": {
    "href": "api/D3T.Players.PlayerMovementModule.SwimmingSettings.html",
    "title": "Class PlayerMovementModule.SwimmingSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule.SwimmingSettings Inheritance Object PlayerMovementModule.SwimmingSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SwimmingSettings : ToggleableFeature Methods GetClosestPointToWater(Vector3) Declaration public float GetClosestPointToWater(Vector3 pos) Parameters Type Name Description Vector3 pos Returns Type Description Single IsInWater(Vector3) Declaration public bool IsInWater(Vector3 queryPosition) Parameters Type Name Description Vector3 queryPosition Returns Type Description Boolean OnEnterWater(Player, WaterZone) Declaration public void OnEnterWater(Player player, WaterZone water) Parameters Type Name Description Player player WaterZone water OnExitWater(Player, WaterZone) Declaration public void OnExitWater(Player player, WaterZone water) Parameters Type Name Description Player player WaterZone water"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.HitEffects.EffectType.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.HitEffects.EffectType.html",
    "title": "Enum PlayerHeadAnimatorModule.HitEffects.EffectType | D3T - First Person Controller | 0.9.12",
    "keywords": "Enum PlayerHeadAnimatorModule.HitEffects.EffectType Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EffectType Fields Name Description AddKick Both SetAnimatorTrigger"
  },
  "api/D3T.Players.PlayerAbilityModifierSet.html": {
    "href": "api/D3T.Players.PlayerAbilityModifierSet.html",
    "title": "Class PlayerAbilityModifierSet | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerAbilityModifierSet A collection of ability modifiers that can affect a player. Inheritance Object PlayerAbilityModifierSet Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class PlayerAbilityModifierSet Constructors PlayerAbilityModifierSet(PlayerAbilityModifierSet.Modifier[]) Declaration public PlayerAbilityModifierSet(params PlayerAbilityModifierSet.Modifier[] modifiers) Parameters Type Name Description PlayerAbilityModifierSet.Modifier [] modifiers Properties Modifiers Declaration public Dictionary<string, float> Modifiers { get; } Property Value Type Description Dictionary < String , Single > Methods AddModifier(String, Single) Declaration public void AddModifier(string identifier, float defaultValue = 1F) Parameters Type Name Description String identifier Single defaultValue GetModifier(String, Single) Declaration public float GetModifier(string identifier, float fallback = 1F) Parameters Type Name Description String identifier Single fallback Returns Type Description Single HasModifier(String) Declaration public bool HasModifier(string identifier) Parameters Type Name Description String identifier Returns Type Description Boolean Multiply(PlayerAbilityModifierSet) Declaration public void Multiply(PlayerAbilityModifierSet other) Parameters Type Name Description PlayerAbilityModifierSet other SetModifier(String, Single) Declaration public void SetModifier(string identifier, float value) Parameters Type Name Description String identifier Single value"
  },
  "api/D3T.PlayerInputSystem.html": {
    "href": "api/D3T.PlayerInputSystem.html",
    "title": "Class PlayerInputSystem | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInputSystem Inheritance Object PlayerInputSystem Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PlayerInputSystem Properties ChangeCamera Button used for changing the current player view (1st/3rd person, different perspectives, etc. ). Declaration public static InputAction ChangeCamera { get; } Property Value Type Description InputAction CombinedMultipliedLookDelta Returns Declaration public static Vector2 CombinedMultipliedLookDelta { get; } Property Value Type Description Vector2 Crouch Modifier button for crouching. Declaration public static InputAction Crouch { get; } Property Value Type Description InputAction Fire Button used to perform a primary action, such as firing. Declaration public static InputAction Fire { get; } Property Value Type Description InputAction Interact Button used to trigger interactions with objects in the world. Declaration public static InputAction Interact { get; } Property Value Type Description InputAction Jump Button used for jumping or other Y-axis movement. Declaration public static InputAction Jump { get; } Property Value Type Description InputAction LastItem Button used for equipping the last equipped item or unequip items altogether. Declaration public static InputAction LastItem { get; } Property Value Type Description InputAction Move Returns Declaration public static InputAction Move { get; } Property Value Type Description InputAction NextItem Button used for equipping the next item. Declaration public static InputAction NextItem { get; } Property Value Type Description InputAction PreviousItem Button used for equipping the previous item. Declaration public static InputAction PreviousItem { get; } Property Value Type Description InputAction Reload Button used for reloading an item or weapon. Declaration public static InputAction Reload { get; } Property Value Type Description InputAction Run Modifier button for running / increasing movement speed. Declaration public static InputAction Run { get; } Property Value Type Description InputAction SecondaryFire Button used to perform a secondary action or aiming with a weapon. Declaration public static InputAction SecondaryFire { get; } Property Value Type Description InputAction Methods GetItemActionForIndex(Int32) Returns the InputAction used for equipping the item at the given index. This is usually bound to the 1-9 keys on the keyboard. Declaration public static InputAction GetItemActionForIndex(int index) Parameters Type Name Description Int32 index Returns Type Description InputAction The corresponding InputAction, or null if there is none. Init(InputActionAsset) Declaration public static void Init(InputActionAsset asset) Parameters Type Name Description InputActionAsset asset"
  },
  "api/D3T.IPlayerRespawnController.html": {
    "href": "api/D3T.IPlayerRespawnController.html",
    "title": "Interface IPlayerRespawnController | D3T - First Person Controller | 0.9.12",
    "keywords": "Interface IPlayerRespawnController Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IPlayerRespawnController Methods OnRespawn(Vector3) Declaration void OnRespawn(Vector3 deathLocation) Parameters Type Name Description Vector3 deathLocation"
  },
  "api/D3T.ClosestPointInTrigger.TargetType.html": {
    "href": "api/D3T.ClosestPointInTrigger.TargetType.html",
    "title": "Enum ClosestPointInTrigger.TargetType | D3T - First Person Controller | 0.9.12",
    "keywords": "Enum ClosestPointInTrigger.TargetType Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum TargetType Fields Name Description ActiveAudioListener ActiveCamera PlayerCamera PlayerPivotPositon"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.Kick.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.Kick.html",
    "title": "Class PlayerHeadAnimatorModule.Kick | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule.Kick Inheritance Object PlayerHeadAnimatorModule.Kick Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Kick : ToggleableFeature Fields rotationKickDecrSmoothing Declaration public float rotationKickDecrSmoothing Field Value Type Description Single rotationKickIncrSmoothing Declaration public float rotationKickIncrSmoothing Field Value Type Description Single rotationKickLimit Declaration public float rotationKickLimit Field Value Type Description Single Methods AddKick(Vector3) Declaration public void AddKick(Vector3 v) Parameters Type Name Description Vector3 v ApplyKick(Boolean, Transform) Declaration public void ApplyKick(bool isAnimatorEnabled, Transform transform) Parameters Type Name Description Boolean isAnimatorEnabled Transform transform GetCurrentKickOffset() Declaration public Vector3 GetCurrentKickOffset() Returns Type Description Vector3"
  },
  "api/D3T.Players.PlayerAbilityModifierSet.Modifier.html": {
    "href": "api/D3T.Players.PlayerAbilityModifierSet.Modifier.html",
    "title": "Class PlayerAbilityModifierSet.Modifier | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerAbilityModifierSet.Modifier Inheritance Object PlayerAbilityModifierSet.Modifier Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Modifier Constructors Modifier() Declaration public Modifier() Modifier(String, Single) Declaration public Modifier(string name, float multiplier) Parameters Type Name Description String name Single multiplier Fields multiplier Declaration public float multiplier Field Value Type Description Single name Declaration public string name Field Value Type Description String"
  },
  "api/D3T.Players.IPlayerDeathController.html": {
    "href": "api/D3T.Players.IPlayerDeathController.html",
    "title": "Interface IPlayerDeathController | D3T - First Person Controller | 0.9.12",
    "keywords": "Interface IPlayerDeathController Interface for controlling a player's death sequence. Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IPlayerDeathController Methods RunPlayerDeathCoroutine(Player, PlayerHealthModule, Vector3) Declaration IEnumerator RunPlayerDeathCoroutine(Player player, PlayerHealthModule healthMod, Vector3 velocityOnDeath) Parameters Type Name Description Player player PlayerHealthModule healthMod Vector3 velocityOnDeath Returns Type Description IEnumerator"
  },
  "api/D3T.Players.FirstPersonController.html": {
    "href": "api/D3T.Players.FirstPersonController.html",
    "title": "Class FirstPersonController | D3T - First Person Controller | 0.9.12",
    "keywords": "Class FirstPersonController The main component of a player object. Inheritance Object Player FirstPersonController Inherited Members Player.instance Player.canControl Player.InputComponent Player.BottomPoint Player.BottomCapsuleDomeCenter Player.HorizontalVelocity Player.HorizontalLocalVelocity Player.modules Player.moduleDictionary Player.IsAlive Player.LifeTime Player.Awake() Player.GetInput(Vector2, Boolean, Vector2) Player.CalcTargetWorldVelocity(Vector2, MovementSpeed) Player.Teleport(Transform, Boolean) Player.HasModule(Type) Player.HasModuleActive<T>() Player.GetModule<T>() Player.TryGetModule<T>(T) Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [SupportsPlayerModifier(\"speed\")] [SupportsPlayerModifier(\"jump\")] [SupportsPlayerModifier(\"gravity\")] [SupportsPlayerModifier(\"step_offset\")] [SupportsPlayerModifier(\"ground_force\")] [SupportsPlayerModifier(\"air_control\")] public class FirstPersonController : Player, ISerializable Fields abilityModifiers Declaration protected Dictionary<string, PlayerAbilityModifierSet> abilityModifiers Field Value Type Description Dictionary < String , PlayerAbilityModifierSet > accelerationRate Declaration public float accelerationRate Field Value Type Description Single canJump Declaration public bool canJump Field Value Type Description Boolean debugHighVelocityCancellation Declaration public bool debugHighVelocityCancellation Field Value Type Description Boolean decelerationRate Declaration public float decelerationRate Field Value Type Description Single groundedControl Declaration public float groundedControl Field Value Type Description Single highVelocityCancellationThreshold Declaration public float highVelocityCancellationThreshold Field Value Type Description Single jumpSpeed Declaration public float jumpSpeed Field Value Type Description Single m_CharacterController Declaration public CharacterController m_CharacterController Field Value Type Description CharacterController m_MouseLook Declaration public MouseLook m_MouseLook Field Value Type Description MouseLook m_MoveDir Declaration public Vector3 m_MoveDir Field Value Type Description Vector3 m_WalkSpeed Declaration public MovementSpeed m_WalkSpeed Field Value Type Description MovementSpeed mainCamera Declaration public Camera mainCamera Field Value Type Description Camera mouseLookTransform Declaration public Transform mouseLookTransform Field Value Type Description Transform playerInstance Declaration public static FirstPersonController playerInstance Field Value Type Description FirstPersonController totalModifier Declaration [NonSerialized] public PlayerAbilityModifierSet totalModifier Field Value Type Description PlayerAbilityModifierSet Properties AllowJumping Declaration public bool AllowJumping { get; } Property Value Type Description Boolean AllowMovement Declaration public override bool AllowMovement { get; } Property Value Type Description Boolean Overrides Player.AllowMovement Camera Declaration public override Camera Camera { get; } Property Value Type Description Camera Overrides Player.Camera DefaultMovementSpeed Declaration public override MovementSpeed DefaultMovementSpeed { get; } Property Value Type Description MovementSpeed Overrides Player.DefaultMovementSpeed ExternalMovementVelocity Declaration public override Vector3 ExternalMovementVelocity { get; } Property Value Type Description Vector3 Overrides Player.ExternalMovementVelocity GroundedControl Declaration public override float GroundedControl { get; set; } Property Value Type Description Single Overrides Player.GroundedControl IsGrounded Declaration public override bool IsGrounded { get; } Property Value Type Description Boolean Overrides Player.IsGrounded LocalBottomPointOffset Declaration public override Vector3 LocalBottomPointOffset { get; } Property Value Type Description Vector3 Overrides Player.LocalBottomPointOffset LocalVelocity Declaration public override Vector3 LocalVelocity { get; } Property Value Type Description Vector3 Overrides Player.LocalVelocity MouseLook Declaration public override MouseLook MouseLook { get; } Property Value Type Description MouseLook Overrides Player.MouseLook MouseLookTransform Declaration public override Transform MouseLookTransform { get; } Property Value Type Description Transform Overrides Player.MouseLookTransform PlayerHeight Declaration public override float PlayerHeight { get; set; } Property Value Type Description Single Overrides Player.PlayerHeight PlayerRadius Declaration public override float PlayerRadius { get; } Property Value Type Description Single Overrides Player.PlayerRadius SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean StepOffset Declaration public override float StepOffset { get; set; } Property Value Type Description Single Overrides Player.StepOffset Velocity Declaration public override Vector3 Velocity { get; } Property Value Type Description Vector3 Overrides Player.Velocity Methods CalcTotalModifier() Declaration protected override void CalcTotalModifier() Overrides Player.CalcTotalModifier() Load(DataContainer) Declaration public void Load(DataContainer container) Parameters Type Name Description DataContainer container OnAwake() Declaration protected override void OnAwake() Overrides Player.OnAwake() OnFixedUpdate() Declaration protected override void OnFixedUpdate() Overrides Player.OnFixedUpdate() PredictPosition(Single) Declaration public Vector3 PredictPosition(float t) Parameters Type Name Description Single t Returns Type Description Vector3 RegisterModifier(String, PlayerAbilityModifierSet) Declaration public override bool RegisterModifier(string uID, PlayerAbilityModifierSet modifier) Parameters Type Name Description String uID PlayerAbilityModifierSet modifier Returns Type Description Boolean Overrides Player.RegisterModifier(String, PlayerAbilityModifierSet) RemoveModifier(String) Declaration public override bool RemoveModifier(string uID) Parameters Type Name Description String uID Returns Type Description Boolean Overrides Player.RemoveModifier(String) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container StopPlayer(Boolean) Declaration public override void StopPlayer(bool stop) Parameters Type Name Description Boolean stop Overrides Player.StopPlayer(Boolean) Teleport(Vector3, Vector3, Boolean) Declaration public override void Teleport(Vector3 position, Vector3 rotation, bool seamless = false) Parameters Type Name Description Vector3 position Vector3 rotation Boolean seamless Overrides Player.Teleport(Vector3, Vector3, Boolean)"
  },
  "api/D3T.Animation.TransferAnimatorParam.html": {
    "href": "api/D3T.Animation.TransferAnimatorParam.html",
    "title": "Class TransferAnimatorParam | D3T - First Person Controller | 0.9.12",
    "keywords": "Class TransferAnimatorParam Transfers a float parameter from this animator to the player camera's animator. Inheritance Object TransferAnimatorParam Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TransferAnimatorParam : StateMachineBehaviour Fields destinationFloatParamName Declaration public string destinationFloatParamName Field Value Type Description String sourceFloatParamName Declaration public string sourceFloatParamName Field Value Type Description String Methods OnStateEnter(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateUpdate(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex"
  },
  "api/D3TEditor.Inspector.Vector3DirDrawer.html": {
    "href": "api/D3TEditor.Inspector.Vector3DirDrawer.html",
    "title": "Class Vector3DirDrawer | D3T - First Person Controller | 0.9.12",
    "keywords": "Class Vector3DirDrawer Inheritance Object Vector3DirDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Vector3DirDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3TEditor.Inspector.ModifierSetDrawer.html": {
    "href": "api/D3TEditor.Inspector.ModifierSetDrawer.html",
    "title": "Class ModifierSetDrawer | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ModifierSetDrawer Inheritance Object ModifierSetDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ModifierSetDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3T.Triggers.Zones.html": {
    "href": "api/D3T.Triggers.Zones.html",
    "title": "Namespace D3T.Triggers.Zones | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Triggers.Zones Classes PortalTeleportationZone Allows for seamless teleportation through a portal. WaterZone Add this zone to a water object to enable swimming mechanics."
  },
  "api/D3T.Players.PlayerInputController.html": {
    "href": "api/D3T.Players.PlayerInputController.html",
    "title": "Class PlayerInputController | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInputController Player Input Controller class that handles all player related inputs and also allows for simulated inputs. Inheritance Object PlayerInputController Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerInputController : MonoBehaviour Fields armForRecording Declaration public bool armForRecording Field Value Type Description Boolean Methods GetInput(Axis) Declaration public float GetInput(Axis a) Parameters Type Name Description Axis a Returns Type Description Single GetInput(Button) Declaration public bool GetInput(Button b) Parameters Type Name Description Button b Returns Type Description Boolean GetInputDown(Button) Declaration public bool GetInputDown(Button b) Parameters Type Name Description Button b Returns Type Description Boolean GetInputUp(Button) Declaration public bool GetInputUp(Button b) Parameters Type Name Description Button b Returns Type Description Boolean GetMouse() Declaration public Vector2 GetMouse() Returns Type Description Vector2"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.html",
    "title": "Class PlayerHeadAnimatorModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule Player module that animates the player's camera. Inheritance Object PlayerModule PlayerHeadAnimatorModule Inherited Members PlayerModule.player PlayerModule.Init(Player) PlayerModule.OnAllowMovement(Boolean, Boolean) PlayerModule.OnPreMove(MovementSpeed, Single, Single, Single) PlayerModule.OnMove(Vector3, Vector3, Single) PlayerModule.OnPostMove(Boolean, Single) PlayerModule.OnFixedUpdate() PlayerModule.OnCollision(Vector3, Collider, CollisionFlags) PlayerModule.OnTeleport(Vector3, Single, Vector3, Single, Boolean) PlayerModule.OnGizmo() Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerHeadAnimatorModule : PlayerModule Fields anim Declaration public Animator anim Field Value Type Description Animator Methods AddKick(Single) Declaration public void AddKick(float v) Parameters Type Name Description Single v AddKick(Vector3) Declaration public void AddKick(Vector3 v) Parameters Type Name Description Vector3 v GetCurrentKickOffset() Declaration public Vector3 GetCurrentKickOffset() Returns Type Description Vector3 OnHit(Single) Declaration public void OnHit(float damage) Parameters Type Name Description Single damage OnInit() Declaration public override void OnInit() Overrides PlayerModule.OnInit() OnLand(Single, Vector3) Declaration public override void OnLand(float airTime, Vector3 speed) Parameters Type Name Description Single airTime Vector3 speed Overrides PlayerModule.OnLand(Single, Vector3) OnLateUpdate() Declaration public override void OnLateUpdate() Overrides PlayerModule.OnLateUpdate() OnLeftGround(Boolean) Declaration public override void OnLeftGround(bool jump) Parameters Type Name Description Boolean jump Overrides PlayerModule.OnLeftGround(Boolean) OnStep(Boolean) Declaration public void OnStep(bool running) Parameters Type Name Description Boolean running OnStep(Boolean, Boolean) Declaration public void OnStep(bool running, bool ignoreConditions) Parameters Type Name Description Boolean running Boolean ignoreConditions OnStopPlayer(Boolean) Declaration public override void OnStopPlayer(bool stop) Parameters Type Name Description Boolean stop Overrides PlayerModule.OnStopPlayer(Boolean) OnUpdate() Declaration public override void OnUpdate() Overrides PlayerModule.OnUpdate()"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.SpeedFOV.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.SpeedFOV.html",
    "title": "Class PlayerHeadAnimatorModule.SpeedFOV | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule.SpeedFOV Inheritance Object PlayerHeadAnimatorModule.SpeedFOV Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class SpeedFOV : ToggleableFeature Fields controller Declaration public CameraFOVController controller Field Value Type Description CameraFOVController smoothing Declaration public float smoothing Field Value Type Description Single speedFOVIncrease Declaration public AnimationCurve speedFOVIncrease Field Value Type Description AnimationCurve Methods ApplyFOV(Boolean, Vector3) Declaration public void ApplyFOV(bool allowIncrease, Vector3 localPlayerVelocity) Parameters Type Name Description Boolean allowIncrease Vector3 localPlayerVelocity"
  },
  "api/D3T.Players.PlayerAbilityZone.html": {
    "href": "api/D3T.Players.PlayerAbilityZone.html",
    "title": "Class PlayerAbilityZone | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerAbilityZone Applies the specified modifiers while the player is inside the zone. Inheritance Object PlayerAbilityZone Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerAbilityZone : Zone Fields identifier Declaration public string identifier Field Value Type Description String modifier Declaration public PlayerAbilityModifierSet modifier Field Value Type Description PlayerAbilityModifierSet Properties DefaultGizmoColor Declaration protected override Color DefaultGizmoColor { get; } Property Value Type Description Color Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player"
  },
  "api/D3T.Interaction.Items.ItemManager.DragSettings.html": {
    "href": "api/D3T.Interaction.Items.ItemManager.DragSettings.html",
    "title": "Class ItemManager.DragSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ItemManager.DragSettings Inheritance Object ItemManager.DragSettings Namespace : D3T.Interaction.Items <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class DragSettings : ToggleableFeature Fields angularDrag Declaration public float angularDrag Field Value Type Description Single dragMultiplier Declaration public float dragMultiplier Field Value Type Description Single dragRotationAmount Declaration public float dragRotationAmount Field Value Type Description Single offsetLimit Declaration public float offsetLimit Field Value Type Description Single rotationLimit Declaration public float rotationLimit Field Value Type Description Single smoothingDelta Declaration public float smoothingDelta Field Value Type Description Single velocityDrag Declaration public float velocityDrag Field Value Type Description Single"
  },
  "api/D3T.Interaction.ContiniousInteractionObject.IKSettings.html": {
    "href": "api/D3T.Interaction.ContiniousInteractionObject.IKSettings.html",
    "title": "Class ContiniousInteractionObject.IKSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ContiniousInteractionObject.IKSettings Inheritance Object ContiniousInteractionObject.IKSettings Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class IKSettings : ToggleableFeature Fields blendSpeed Declaration public float blendSpeed Field Value Type Description Single data Declaration public IKData data Field Value Type Description IKData totalWeight Declaration public float totalWeight Field Value Type Description Single"
  },
  "api/D3T.Players.PlayerRigAnimatorModule.html": {
    "href": "api/D3T.Players.PlayerRigAnimatorModule.html",
    "title": "Class PlayerRigAnimatorModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerRigAnimatorModule Player module that handles animation and syncing of a humanoid character with the player. Inheritance Object PlayerModule PlayerRigAnimatorModule Inherited Members PlayerModule.player PlayerModule.Init(Player) PlayerModule.OnAllowMovement(Boolean, Boolean) PlayerModule.OnPreMove(MovementSpeed, Single, Single, Single) PlayerModule.OnMove(Vector3, Vector3, Single) PlayerModule.OnPostMove(Boolean, Single) PlayerModule.OnFixedUpdate() PlayerModule.OnLeftGround(Boolean) PlayerModule.OnLand(Single, Vector3) PlayerModule.OnCollision(Vector3, Collider, CollisionFlags) PlayerModule.OnStopPlayer(Boolean) PlayerModule.OnGizmo() Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerRigAnimatorModule : PlayerModule Fields allowCameraChange Declaration public bool allowCameraChange Field Value Type Description Boolean eyesPositionConstraintWeight Declaration public float eyesPositionConstraintWeight Field Value Type Description Single eyesRotationConstraintWeight Declaration public float eyesRotationConstraintWeight Field Value Type Description Single footIKRaycastLayerMask Declaration public LayerMask footIKRaycastLayerMask Field Value Type Description LayerMask handheldItemsParent Declaration public ItemManager handheldItemsParent Field Value Type Description ItemManager headSyncTransform Declaration public Transform headSyncTransform Field Value Type Description Transform ikTargets Declaration public IKTargets ikTargets Field Value Type Description IKTargets runningStateCurve Declaration public AnimationCurve runningStateCurve Field Value Type Description AnimationCurve speedScale Declaration public float speedScale Field Value Type Description Single stepPitchMax Declaration public float stepPitchMax Field Value Type Description Single stepPitchMin Declaration public float stepPitchMin Field Value Type Description Single stepSoundVolume Declaration public float stepSoundVolume Field Value Type Description Single thirdPersonCamera Declaration public ThirdPersonCamera thirdPersonCamera Field Value Type Description ThirdPersonCamera Properties IsInThirdPerson Declaration public bool IsInThirdPerson { get; } Property Value Type Description Boolean Methods GetActiveCharacter() Declaration public CharacterIKController GetActiveCharacter() Returns Type Description CharacterIKController GetActiveCharacterIndex() Declaration public int GetActiveCharacterIndex() Returns Type Description Int32 GetAvailableCharacterCount() Declaration public int GetAvailableCharacterCount() Returns Type Description Int32 OnInit() Declaration public override void OnInit() Overrides PlayerModule.OnInit() OnLateUpdate() Declaration public override void OnLateUpdate() Overrides PlayerModule.OnLateUpdate() OnStep(Collider, Vector3) Declaration public void OnStep(Collider collider, Vector3 position) Parameters Type Name Description Collider collider Vector3 position OnTeleport(Vector3, Single, Vector3, Single, Boolean) Declaration public override void OnTeleport(Vector3 oldPos, float oldRot, Vector3 newPos, float newRot, bool seamless) Parameters Type Name Description Vector3 oldPos Single oldRot Vector3 newPos Single newRot Boolean seamless Overrides PlayerModule.OnTeleport(Vector3, Single, Vector3, Single, Boolean) OnUpdate() Declaration public override void OnUpdate() Overrides PlayerModule.OnUpdate() SetActiveCharacter(Int32) Declaration public void SetActiveCharacter(int index) Parameters Type Name Description Int32 index SetIKDataOverride(IIKSource, Single, Single) Declaration public void SetIKDataOverride(IIKSource source, float startWeight = 0F, float blendSpeed = 5F) Parameters Type Name Description IIKSource source Single startWeight Single blendSpeed"
  },
  "api/D3T.Players.PlayerRigAnimatorModule.HeadBobSynchronizationSettings.html": {
    "href": "api/D3T.Players.PlayerRigAnimatorModule.HeadBobSynchronizationSettings.html",
    "title": "Class PlayerRigAnimatorModule.HeadBobSynchronizationSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerRigAnimatorModule.HeadBobSynchronizationSettings Inheritance Object PlayerRigAnimatorModule.HeadBobSynchronizationSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class HeadBobSynchronizationSettings Fields destinationStateParamName Declaration public string destinationStateParamName Field Value Type Description String sourceStateParamName Declaration public string sourceStateParamName Field Value Type Description String"
  },
  "api/D3T.Players.PlayerMovementModule.CrouchSettings.html": {
    "href": "api/D3T.Players.PlayerMovementModule.CrouchSettings.html",
    "title": "Class PlayerMovementModule.CrouchSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule.CrouchSettings Inheritance Object PlayerMovementModule.CrouchSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class CrouchSettings : ToggleableFeature Fields airborneCrouchYOffset Declaration public float airborneCrouchYOffset Field Value Type Description Single crouchCheckLayerMask Declaration public LayerMask crouchCheckLayerMask Field Value Type Description LayerMask crouchHeightRatio Declaration public float crouchHeightRatio Field Value Type Description Single crouchMovementSpeed Declaration public MovementSpeed crouchMovementSpeed Field Value Type Description MovementSpeed crouchStanceChangeSpeed Declaration public float crouchStanceChangeSpeed Field Value Type Description Single forceCrouch Declaration public bool forceCrouch Field Value Type Description Boolean"
  },
  "api/D3T.Players.PlayerModule.html": {
    "href": "api/D3T.Players.PlayerModule.html",
    "title": "Class PlayerModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerModule Base class to derive all player modules from. Inheritance Object PlayerModule PlayerHeadAnimatorModule PlayerHealthModule PlayerInteractionModule PlayerMovementModule PlayerRigAnimatorModule PlayerSoundModule Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class PlayerModule : MonoBehaviour Fields player Declaration public Player player Field Value Type Description Player Methods Init(Player) Declaration public void Init(Player player) Parameters Type Name Description Player player OnAllowMovement(ref Boolean, ref Boolean) Declaration public virtual void OnAllowMovement(ref bool move, ref bool jump) Parameters Type Name Description Boolean move Boolean jump OnCollision(Vector3, Collider, CollisionFlags) Declaration public virtual void OnCollision(Vector3 point, Collider collider, CollisionFlags flags) Parameters Type Name Description Vector3 point Collider collider CollisionFlags flags OnFixedUpdate() Declaration public virtual void OnFixedUpdate() OnGizmo() Declaration public virtual void OnGizmo() OnInit() Declaration public virtual void OnInit() OnLand(Single, Vector3) Declaration public virtual void OnLand(float airTime, Vector3 velocity) Parameters Type Name Description Single airTime Vector3 velocity OnLateUpdate() Declaration public virtual void OnLateUpdate() OnLeftGround(Boolean) Declaration public virtual void OnLeftGround(bool jump) Parameters Type Name Description Boolean jump OnMove(ref Vector3, ref Vector3, Single) Declaration public virtual void OnMove(ref Vector3 moveDir, ref Vector3 externalMoveDir, float delta) Parameters Type Name Description Vector3 moveDir Vector3 externalMoveDir Single delta OnPostMove(Boolean, Single) Declaration public virtual void OnPostMove(bool isFixedUpdate, float delta) Parameters Type Name Description Boolean isFixedUpdate Single delta OnPreMove(ref MovementSpeed, ref Single, ref Single, Single) Declaration public virtual void OnPreMove(ref MovementSpeed movementSpeed, ref float groundedControl, ref float stickToGroundForce, float delta) Parameters Type Name Description MovementSpeed movementSpeed Single groundedControl Single stickToGroundForce Single delta OnStopPlayer(Boolean) Declaration public virtual void OnStopPlayer(bool stop) Parameters Type Name Description Boolean stop OnTeleport(Vector3, Single, Vector3, Single, Boolean) Declaration public virtual void OnTeleport(Vector3 oldPos, float oldRot, Vector3 newPos, float newRot, bool seamless) Parameters Type Name Description Vector3 oldPos Single oldRot Vector3 newPos Single newRot Boolean seamless OnUpdate() Declaration public virtual void OnUpdate()"
  },
  "api/D3T.Interaction.Items.ItemManager.SwitchToNewBehaviour.html": {
    "href": "api/D3T.Interaction.Items.ItemManager.SwitchToNewBehaviour.html",
    "title": "Enum ItemManager.SwitchToNewBehaviour | D3T - First Person Controller | 0.9.12",
    "keywords": "Enum ItemManager.SwitchToNewBehaviour Namespace : D3T.Interaction.Items <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum SwitchToNewBehaviour Fields Name Description Always DontSwitch OnlyIfNoneSelected"
  },
  "api/D3T.Interaction.GrabbableProp.html": {
    "href": "api/D3T.Interaction.GrabbableProp.html",
    "title": "Class GrabbableProp | D3T - First Person Controller | 0.9.12",
    "keywords": "Class GrabbableProp Enables this rigidbody to be picked up by the player. Inheritance Object GrabbableProp Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GrabbableProp : MonoBehaviour, IInteractive, ISerializable Fields fixedY Declaration public bool fixedY Field Value Type Description Boolean fixedYCoord Declaration public float fixedYCoord Field Value Type Description Single forceCorrectRotation Declaration public bool forceCorrectRotation Field Value Type Description Boolean grabbedHighlight Declaration public Transform grabbedHighlight Field Value Type Description Transform highlightMaterial Declaration public Material highlightMaterial Field Value Type Description Material holdDistance Declaration public float holdDistance Field Value Type Description Single holder Declaration public PlayerInteractionModule holder Field Value Type Description PlayerInteractionModule horizontal Declaration public bool horizontal Field Value Type Description Boolean ignoreCollisionWithHolder Declaration public bool ignoreCollisionWithHolder Field Value Type Description Boolean rigidbody Declaration public Rigidbody rigidbody Field Value Type Description Rigidbody rotate Declaration public bool rotate Field Value Type Description Boolean useHighlightMaterial Declaration public bool useHighlightMaterial Field Value Type Description Boolean Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Drop() Declaration public void Drop() Grab(PlayerInteractionModule) Declaration public void Grab(PlayerInteractionModule h) Parameters Type Name Description PlayerInteractionModule h Interact(Transform) Declaration public bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data RegisterDefaultPosition() Declaration public void RegisterDefaultPosition() ResetState() Declaration public void ResetState() Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container"
  },
  "api/D3T.Animation.AnimatorIKEditor.html": {
    "href": "api/D3T.Animation.AnimatorIKEditor.html",
    "title": "Class AnimatorIKEditor | D3T - First Person Controller | 0.9.12",
    "keywords": "Class AnimatorIKEditor Editor-only class that enables viewing a character's IK logic in edit mode. Inheritance Object AnimatorIKEditor Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AnimatorIKEditor : MonoBehaviour"
  },
  "api/D3TEditor.Inspector.ModifierDrawer.html": {
    "href": "api/D3TEditor.Inspector.ModifierDrawer.html",
    "title": "Class ModifierDrawer | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ModifierDrawer Inheritance Object ModifierDrawer Namespace : D3TEditor.Inspector <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ModifierDrawer : PropertyDrawer Fields supportedModifiers Declaration public static List<SupportsPlayerModifierAttribute> supportedModifiers Field Value Type Description List < SupportsPlayerModifierAttribute > Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/D3T.html": {
    "href": "api/D3T.html",
    "title": "Namespace D3T | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T Classes ClosestPointInTrigger Moves an object towards the targetPosition, but within the attached collider volumes. Player Base class to derive all main player components from. PlayerInput Manages all player related inputs. PlayerInputSystem Interfaces IPlayerRespawnController IPlayerStepEventListener Enums ClosestPointInTrigger.TargetType"
  },
  "api/D3T.Utility.ConfigurableJointExtensions.html": {
    "href": "api/D3T.Utility.ConfigurableJointExtensions.html",
    "title": "Class ConfigurableJointExtensions | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ConfigurableJointExtensions Inheritance Object ConfigurableJointExtensions Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ConfigurableJointExtensions Methods SetTargetRotation(ConfigurableJoint, Quaternion, Quaternion) Sets a joint's targetRotation to match a given world rotation. The joint transform's world rotation must be cached on Start and passed into this method. Declaration public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation) Parameters Type Name Description ConfigurableJoint joint Quaternion targetWorldRotation Quaternion startWorldRotation SetTargetRotationLocal(ConfigurableJoint, Quaternion, Quaternion) Sets a joint's targetRotation to match a given local rotation. The joint transform's local rotation must be cached on Start and passed into this method. Declaration public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation) Parameters Type Name Description ConfigurableJoint joint Quaternion targetLocalRotation Quaternion startLocalRotation"
  },
  "api/D3T.Players.PlayerHealthModule.AutoHealing.html": {
    "href": "api/D3T.Players.PlayerHealthModule.AutoHealing.html",
    "title": "Class PlayerHealthModule.AutoHealing | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHealthModule.AutoHealing Inheritance Object PlayerHealthModule.AutoHealing Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class AutoHealing : ToggleableFeature Fields healRateMultiplierCurve Declaration public DifficultyBasedAnimationCurve healRateMultiplierCurve Field Value Type Description DifficultyBasedAnimationCurve healRatePerSec Declaration public DifficultyBasedFloat healRatePerSec Field Value Type Description DifficultyBasedFloat Methods ApplyIfEnabled(PlayerHealthModule, ref Single) Declaration public void ApplyIfEnabled(PlayerHealthModule mod, ref float health) Parameters Type Name Description PlayerHealthModule mod Single health"
  },
  "api/D3T.Players.PlayerHealthAudioFilterController.html": {
    "href": "api/D3T.Players.PlayerHealthAudioFilterController.html",
    "title": "Class PlayerHealthAudioFilterController | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHealthAudioFilterController Applies audio mixer effects (snapshots) when the player is low on health. Inheritance Object PlayerHealthAudioFilterController Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerHealthAudioFilterController : CurveRemappedVCComponent, IMixerSnapshotBlendSource Methods GetSnapshotWeights(Vector3, out Single, out Single) Declaration public void GetSnapshotWeights(Vector3 listenerPosition, out float mufflerLevel, out float submergedLevel) Parameters Type Name Description Vector3 listenerPosition Single mufflerLevel Single submergedLevel"
  },
  "api/D3T.Players.MovementSpeed.html": {
    "href": "api/D3T.Players.MovementSpeed.html",
    "title": "Struct MovementSpeed | D3T - First Person Controller | 0.9.12",
    "keywords": "Struct MovementSpeed A representation of a player's forward, sideways and backwards movement speeds. Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct MovementSpeed Constructors MovementSpeed(Single, Single, Single) Declaration public MovementSpeed(float f, float s, float b) Parameters Type Name Description Single f Single s Single b MovementSpeed(Vector3) Declaration public MovementSpeed(Vector3 src) Parameters Type Name Description Vector3 src Fields backwards Declaration public float backwards Field Value Type Description Single forward Declaration public float forward Field Value Type Description Single sideways Declaration public float sideways Field Value Type Description Single Properties Item[Int32] Declaration public float this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(MovementSpeed to Vector3) Declaration public static implicit operator Vector3(MovementSpeed speed) Parameters Type Name Description MovementSpeed speed Returns Type Description Vector3 Implicit(Vector3 to MovementSpeed) Declaration public static implicit operator MovementSpeed(Vector3 vec) Parameters Type Name Description Vector3 vec Returns Type Description MovementSpeed Multiply(MovementSpeed, Single) Declaration public static MovementSpeed operator *(MovementSpeed a, float b) Parameters Type Name Description MovementSpeed a Single b Returns Type Description MovementSpeed"
  },
  "api/D3T.Players.FrameRecord.html": {
    "href": "api/D3T.Players.FrameRecord.html",
    "title": "Class FrameRecord | D3T - First Person Controller | 0.9.12",
    "keywords": "Class FrameRecord A record containing the player's movement in a specific frame. Inheritance Object FrameRecord Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FrameRecord Fields lastPlatform Declaration public Transform lastPlatform Field Value Type Description Transform lastPlatformPos Declaration public Vector3 lastPlatformPos Field Value Type Description Vector3 moveDir Declaration public Vector3 moveDir Field Value Type Description Vector3 platform Declaration public Transform platform Field Value Type Description Transform platformMove Declaration public Vector3 platformMove Field Value Type Description Vector3 platformPos Declaration public Vector3 platformPos Field Value Type Description Vector3 position Declaration public Vector3 position Field Value Type Description Vector3 rotation Declaration public Vector3 rotation Field Value Type Description Vector3 timestamp Declaration public float timestamp Field Value Type Description Single velocity Declaration public Vector3 velocity Field Value Type Description Vector3 Methods PrintString() Declaration public string PrintString() Returns Type Description String"
  },
  "api/D3T.Players.PlayerInteractionModule.html": {
    "href": "api/D3T.Players.PlayerInteractionModule.html",
    "title": "Class PlayerInteractionModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInteractionModule Player module that handles interaction with world objects and grabbing rigidbodies. Inheritance Object PlayerModule PlayerInteractionModule Inherited Members PlayerModule.player PlayerModule.Init(Player) PlayerModule.OnLateUpdate() PlayerModule.OnFixedUpdate() PlayerModule.OnLeftGround(Boolean) PlayerModule.OnLand(Single, Vector3) PlayerModule.OnStopPlayer(Boolean) PlayerModule.OnTeleport(Vector3, Single, Vector3, Single, Boolean) PlayerModule.OnGizmo() Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [SupportsPlayerModifier(\"grab_weight\")] public class PlayerInteractionModule : PlayerModule Fields allowInteraction Declaration public bool allowInteraction Field Value Type Description Boolean canInteractCheck Declaration public List<Func<bool>> canInteractCheck Field Value Type Description List < Func < Boolean >> interactionSettings Declaration public PlayerInteractionModule.RaycastSettings interactionSettings Field Value Type Description PlayerInteractionModule.RaycastSettings playerInventory Declaration public Inventory playerInventory Field Value Type Description Inventory propGrabbing Declaration public PlayerInteractionModule.PropGrabbing propGrabbing Field Value Type Description PlayerInteractionModule.PropGrabbing Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean CurrentInteractingTarget Declaration public ContiniousInteractionObject CurrentInteractingTarget { get; } Property Value Type Description ContiniousInteractionObject Methods DropProp() Declaration public void DropProp() GrabProp(GrabbableProp) Declaration public void GrabProp(GrabbableProp prop) Parameters Type Name Description GrabbableProp prop OnAllowMovement(ref Boolean, ref Boolean) Declaration public override void OnAllowMovement(ref bool move, ref bool jump) Parameters Type Name Description Boolean move Boolean jump Overrides PlayerModule.OnAllowMovement(ref Boolean, ref Boolean) OnCollision(Vector3, Collider, CollisionFlags) Declaration public override void OnCollision(Vector3 point, Collider collider, CollisionFlags flags) Parameters Type Name Description Vector3 point Collider collider CollisionFlags flags Overrides PlayerModule.OnCollision(Vector3, Collider, CollisionFlags) OnInit() Declaration public override void OnInit() Overrides PlayerModule.OnInit() OnMove(ref Vector3, ref Vector3, Single) Declaration public override void OnMove(ref Vector3 moveDir, ref Vector3 externalMoveDir, float delta) Parameters Type Name Description Vector3 moveDir Vector3 externalMoveDir Single delta Overrides PlayerModule.OnMove(ref Vector3, ref Vector3, Single) OnPostMove(Boolean, Single) Declaration public override void OnPostMove(bool isFixedUpdate, float delta) Parameters Type Name Description Boolean isFixedUpdate Single delta Overrides PlayerModule.OnPostMove(Boolean, Single) OnPreMove(ref MovementSpeed, ref Single, ref Single, Single) Declaration public override void OnPreMove(ref MovementSpeed speed, ref float groundedControl, ref float stickToGroundForce, float delta) Parameters Type Name Description MovementSpeed speed Single groundedControl Single stickToGroundForce Single delta Overrides PlayerModule.OnPreMove(ref MovementSpeed, ref Single, ref Single, Single) OnUpdate() Declaration public override void OnUpdate() Overrides PlayerModule.OnUpdate() Events Interacted Declaration public event Action<Collider> Interacted Event Type Type Description Action < Collider >"
  },
  "api/D3T.Players.PlayerInteractionModule.RaycastSettings.html": {
    "href": "api/D3T.Players.PlayerInteractionModule.RaycastSettings.html",
    "title": "Class PlayerInteractionModule.RaycastSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInteractionModule.RaycastSettings Inheritance Object PlayerInteractionModule.RaycastSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class RaycastSettings Fields debugHits Declaration public bool debugHits Field Value Type Description Boolean layerMask Declaration public LayerMask layerMask Field Value Type Description LayerMask queriesHitBackfaces Declaration public bool queriesHitBackfaces Field Value Type Description Boolean queryTriggers Declaration public QueryTriggerInteraction queryTriggers Field Value Type Description QueryTriggerInteraction range Declaration public float range Field Value Type Description Single rangeDownwardsExtenstion Declaration public float rangeDownwardsExtenstion Field Value Type Description Single"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.HitEffects.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.HitEffects.html",
    "title": "Class PlayerHeadAnimatorModule.HitEffects | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule.HitEffects Inheritance Object PlayerHeadAnimatorModule.HitEffects Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class HitEffects : ToggleableFeature Fields effectType Declaration public PlayerHeadAnimatorModule.HitEffects.EffectType effectType Field Value Type Description PlayerHeadAnimatorModule.HitEffects.EffectType kickStrengthByDamageCurve Declaration public AnimationCurve kickStrengthByDamageCurve Field Value Type Description AnimationCurve"
  },
  "api/D3T.Players.HeadAnimationEventHandler.html": {
    "href": "api/D3T.Players.HeadAnimationEventHandler.html",
    "title": "Class HeadAnimationEventHandler | D3T - First Person Controller | 0.9.12",
    "keywords": "Class HeadAnimationEventHandler Animation Event receiver for player camera animations. Inheritance Object HeadAnimationEventHandler Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class HeadAnimationEventHandler : MonoBehaviour Fields fovScale Declaration public float fovScale Field Value Type Description Single Methods Init(PlayerHeadAnimatorModule) Declaration public void Init(PlayerHeadAnimatorModule h) Parameters Type Name Description PlayerHeadAnimatorModule h OnStep(Int32) Declaration public void OnStep(int running) Parameters Type Name Description Int32 running"
  },
  "api/D3T.Animation.HandIKConstraint.html": {
    "href": "api/D3T.Animation.HandIKConstraint.html",
    "title": "Class HandIKConstraint | D3T - First Person Controller | 0.9.12",
    "keywords": "Class HandIKConstraint Dynamic constraint system for attaching a transform to a target during an animation. Inheritance Object HandIKConstraint Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class HandIKConstraint : MonoBehaviour Fields autoAttach Declaration public bool autoAttach Field Value Type Description Boolean autoUpdate Declaration public bool autoUpdate Field Value Type Description Boolean currentTarget Declaration public int currentTarget Field Value Type Description Int32 targets Declaration public Transform[] targets Field Value Type Description Transform [] weight Declaration public float weight Field Value Type Description Single Properties CurrentTarget Declaration public int CurrentTarget { get; } Property Value Type Description Int32 Methods Attach(Int32) Declaration public void Attach(int targetIndex) Parameters Type Name Description Int32 targetIndex EvaluateConstraint() Declaration public void EvaluateConstraint()"
  },
  "api/D3T.Players.PlayerMovementModule.PlatformHandling.html": {
    "href": "api/D3T.Players.PlayerMovementModule.PlatformHandling.html",
    "title": "Class PlayerMovementModule.PlatformHandling | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule.PlatformHandling Inheritance Object PlayerMovementModule.PlatformHandling Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class PlatformHandling : ToggleableFeature Fields debugPlatformHandling Declaration public bool debugPlatformHandling Field Value Type Description Boolean lastPlatform Declaration public Transform lastPlatform Field Value Type Description Transform lastPlatformPos Declaration public Vector3 lastPlatformPos Field Value Type Description Vector3 maxMovementThreshold Declaration public float maxMovementThreshold Field Value Type Description Single platform Declaration public Transform platform Field Value Type Description Transform platformMove Declaration public Vector3 platformMove Field Value Type Description Vector3 platformPos Declaration public Vector3 platformPos Field Value Type Description Vector3 Methods HandlePlatformMovement(Player, ref Vector3, ref Vector3, Single) Declaration public void HandlePlatformMovement(Player player, ref Vector3 moveVector, ref Vector3 externalMoveVector, float delta) Parameters Type Name Description Player player Vector3 moveVector Vector3 externalMoveVector Single delta OnPlatformTouch(Transform) Declaration public void OnPlatformTouch(Transform t) Parameters Type Name Description Transform t PreparePlatformMovement(Player, Single, ref Single) Declaration public void PreparePlatformMovement(Player player, float delta, ref float stickToGroundForce) Parameters Type Name Description Player player Single delta Single stickToGroundForce"
  },
  "api/D3T.Players.PlayerHealthModule.html": {
    "href": "api/D3T.Players.PlayerHealthModule.html",
    "title": "Class PlayerHealthModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHealthModule Player module that handles the player's health and deaths. Inheritance Object PlayerModule PlayerHealthModule Inherited Members PlayerModule.player PlayerModule.Init(Player) PlayerModule.OnPreMove(MovementSpeed, Single, Single, Single) PlayerModule.OnMove(Vector3, Vector3, Single) PlayerModule.OnPostMove(Boolean, Single) PlayerModule.OnUpdate() PlayerModule.OnLateUpdate() PlayerModule.OnLeftGround(Boolean) PlayerModule.OnCollision(Vector3, Collider, CollisionFlags) PlayerModule.OnStopPlayer(Boolean) PlayerModule.OnTeleport(Vector3, Single, Vector3, Single, Boolean) PlayerModule.OnGizmo() Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [SupportsPlayerModifier(\"heal_rate\")] public class PlayerHealthModule : PlayerModule, IDamageable, ISerializable Fields audioEffects Declaration public VCComponent[] audioEffects Field Value Type Description VCComponent [] autoHealing Declaration public PlayerHealthModule.AutoHealing autoHealing Field Value Type Description PlayerHealthModule.AutoHealing damageMultipliersByType Declaration public DamageModificationTable damageMultipliersByType Field Value Type Description DamageModificationTable deathController Declaration public IPlayerDeathController deathController Field Value Type Description IPlayerDeathController deathSound Declaration public AudioClip deathSound Field Value Type Description AudioClip fallDamage Declaration public PlayerHealthModule.FallDamage fallDamage Field Value Type Description PlayerHealthModule.FallDamage health Declaration public float health Field Value Type Description Single healthMeter Declaration public bool healthMeter Field Value Type Description Boolean hitBigSound Declaration public AudioClip hitBigSound Field Value Type Description AudioClip hitSmallSound Declaration public AudioClip hitSmallSound Field Value Type Description AudioClip isInvulnerable Declaration public bool isInvulnerable Field Value Type Description Boolean maxHealth Declaration public float maxHealth Field Value Type Description Single painEffectMultiplier Declaration public float painEffectMultiplier Field Value Type Description Single playerYHeightThreshold Declaration public int playerYHeightThreshold Field Value Type Description Int32 postProcessEffects Declaration public VCComponent[] postProcessEffects Field Value Type Description VCComponent [] respawnController Declaration public IPlayerRespawnController respawnController Field Value Type Description IPlayerRespawnController respawnProtection Declaration public float respawnProtection Field Value Type Description Single Properties IsDead Declaration public bool IsDead { get; } Property Value Type Description Boolean IsProtected Declaration public bool IsProtected { get; } Property Value Type Description Boolean SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Die() Declaration public void Die() Hit(Single, String) Declaration public void Hit(float damage, string damageType) Parameters Type Name Description Single damage String damageType Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data OnAllowMovement(ref Boolean, ref Boolean) Declaration public override void OnAllowMovement(ref bool move, ref bool jump) Parameters Type Name Description Boolean move Boolean jump Overrides PlayerModule.OnAllowMovement(ref Boolean, ref Boolean) OnFixedUpdate() Declaration public override void OnFixedUpdate() Overrides PlayerModule.OnFixedUpdate() OnInit() Declaration public override void OnInit() Overrides PlayerModule.OnInit() OnLand(Single, Vector3) Declaration public override void OnLand(float airTime, Vector3 velocity) Parameters Type Name Description Single airTime Vector3 velocity Overrides PlayerModule.OnLand(Single, Vector3) Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container Events HasDied Declaration public event Action<PlayerHealthModule> HasDied Event Type Type Description Action < PlayerHealthModule > WasHit Declaration public event Action<PlayerHealthModule, float> WasHit Event Type Type Description Action < PlayerHealthModule , Single >"
  },
  "api/D3T.Players.PlayerHealthModule.FallDamage.html": {
    "href": "api/D3T.Players.PlayerHealthModule.FallDamage.html",
    "title": "Class PlayerHealthModule.FallDamage | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHealthModule.FallDamage Inheritance Object PlayerHealthModule.FallDamage Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class FallDamage : ToggleableFeature Fields fallSpeedToDamageCurve Declaration public AnimationCurve fallSpeedToDamageCurve Field Value Type Description AnimationCurve minAirTime Declaration public float minAirTime Field Value Type Description Single minFallSpeed Declaration public float minFallSpeed Field Value Type Description Single Methods ApplyIfEnabled(PlayerHealthModule, Vector3, Single) Declaration public void ApplyIfEnabled(PlayerHealthModule mod, Vector3 impactSpeed, float airTime) Parameters Type Name Description PlayerHealthModule mod Vector3 impactSpeed Single airTime"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.Shake.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.Shake.html",
    "title": "Class PlayerHeadAnimatorModule.Shake | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule.Shake Inheritance Object PlayerHeadAnimatorModule.Shake Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Shake : ToggleableFeature Fields shakeRotationContribution Declaration public float shakeRotationContribution Field Value Type Description Single Methods ApplyShake(Boolean, Transform, Single) Declaration public void ApplyShake(bool isAnimatorEnabled, Transform transform, float controllerRumbleLevel) Parameters Type Name Description Boolean isAnimatorEnabled Transform transform Single controllerRumbleLevel"
  },
  "api/D3T.Triggers.Zones.WaterZone.html": {
    "href": "api/D3T.Triggers.Zones.WaterZone.html",
    "title": "Class WaterZone | D3T - First Person Controller | 0.9.12",
    "keywords": "Class WaterZone Add this zone to a water object to enable swimming mechanics. Inheritance Object WaterZone Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class WaterZone : Zone Properties DefaultGizmoColor Declaration protected override Color DefaultGizmoColor { get; } Property Value Type Description Color Methods GetClosestPoint(Vector3) Declaration public Vector3 GetClosestPoint(Vector3 pos) Parameters Type Name Description Vector3 pos Returns Type Description Vector3 OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player OnZoneExit(Transform) Declaration public override void OnZoneExit(Transform player) Parameters Type Name Description Transform player"
  },
  "api/D3T.Triggers.PlayerDistanceToPoint.html": {
    "href": "api/D3T.Triggers.PlayerDistanceToPoint.html",
    "title": "Class PlayerDistanceToPoint | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerDistanceToPoint Checks the player's distance to a given point. Inheritance Object PlayerDistanceToPoint Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerDistanceToPoint : TriggerCondition Fields distanceMax Declaration public float distanceMax Field Value Type Description Single distanceMin Declaration public float distanceMin Field Value Type Description Single horizontalDistanceOnly Declaration public bool horizontalDistanceOnly Field Value Type Description Boolean locationOverride Declaration public Transform locationOverride Field Value Type Description Transform position Declaration public Vector3 position Field Value Type Description Vector3 Methods Evaluate() Declaration protected override bool Evaluate() Returns Type Description Boolean OnGizmos(Boolean) Declaration protected override void OnGizmos(bool selected) Parameters Type Name Description Boolean selected"
  },
  "api/D3T.Players.html": {
    "href": "api/D3T.Players.html",
    "title": "Namespace D3T.Players | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Players Classes FirstPersonController The main component of a player object. FirstPersonControllerCommands Developer console commands for player related mechanics. FrameRecord A record containing the player's movement in a specific frame. HeadAnimationEventHandler Animation Event receiver for player camera animations. MouseLook Handles look movement of a player camera. PlayerAbilityModifierSet A collection of ability modifiers that can affect a player. PlayerAbilityModifierSet.Modifier PlayerAbilityZone Applies the specified modifiers while the player is inside the zone. PlayerHeadAnimatorModule Player module that animates the player's camera. PlayerHeadAnimatorModule.Animation PlayerHeadAnimatorModule.HeadTilt PlayerHeadAnimatorModule.HitEffects PlayerHeadAnimatorModule.Kick PlayerHeadAnimatorModule.Shake PlayerHeadAnimatorModule.SpeedFOV PlayerHealthAudioFilterController Applies audio mixer effects (snapshots) when the player is low on health. PlayerHealthModule Player module that handles the player's health and deaths. PlayerHealthModule.AutoHealing PlayerHealthModule.FallDamage PlayerInputController Player Input Controller class that handles all player related inputs and also allows for simulated inputs. PlayerInteractionModule Player module that handles interaction with world objects and grabbing rigidbodies. PlayerInteractionModule.PropGrabbing PlayerInteractionModule.RaycastSettings PlayerModule Base class to derive all player modules from. PlayerMovementModule Player module that adds optional running, crouching, swimming and stamina mechanics. PlayerMovementModule.CrouchSettings PlayerMovementModule.PlatformHandling PlayerMovementModule.RigidbodyFeedbackSettings PlayerMovementModule.RunSettings PlayerMovementModule.StaminaSettings PlayerMovementModule.SwimmingSettings PlayerRigAnimatorModule Player module that handles animation and syncing of a humanoid character with the player. PlayerRigAnimatorModule.HeadBobSynchronizationSettings PlayerSoundModule Player module that handles the playback of player sounds. PlayerSoundModule.StepSounds PlayerSoundModule.StepSoundSet RespawnController A simple respawn controller that teleports the player to the respawn point. StandardPlayerDeathController A versatile player death controller that applies player respawning, level reloading or application quitting upon death. SupportsPlayerModifierAttribute Registers a player modifier id that will appear ability modifiers for selection. ThirdPersonCamera An extension of FollowCamera that allows for switching between the different camera setups. Structs MovementSpeed A representation of a player's forward, sideways and backwards movement speeds. Interfaces IPlayerDeathController Interface for controlling a player's death sequence. Enums PlayerHeadAnimatorModule.HitEffects.EffectType StandardPlayerDeathController.RespawnAction"
  },
  "api/D3T.Players.RespawnController.html": {
    "href": "api/D3T.Players.RespawnController.html",
    "title": "Class RespawnController | D3T - First Person Controller | 0.9.12",
    "keywords": "Class RespawnController A simple respawn controller that teleports the player to the respawn point. Inheritance Object RespawnController Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class RespawnController : MonoBehaviour, IPlayerRespawnController Fields respawnPoint Declaration public Transform respawnPoint Field Value Type Description Transform Methods OnRespawn(Vector3) Declaration public void OnRespawn(Vector3 deathLocation) Parameters Type Name Description Vector3 deathLocation Implements IPlayerRespawnController.OnRespawn(Vector3) Start() Declaration public void Start()"
  },
  "api/D3T.Triggers.html": {
    "href": "api/D3T.Triggers.html",
    "title": "Namespace D3T.Triggers | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Triggers Classes PlayerDistanceToPoint Checks the player's distance to a given point. PlayerInArea Checks if the player is in the given area. SetPlayerPosition Teleports the player to the given location."
  },
  "api/D3T.Players.StandardPlayerDeathController.RespawnAction.html": {
    "href": "api/D3T.Players.StandardPlayerDeathController.RespawnAction.html",
    "title": "Enum StandardPlayerDeathController.RespawnAction | D3T - First Person Controller | 0.9.12",
    "keywords": "Enum StandardPlayerDeathController.RespawnAction Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum RespawnAction Fields Name Description QuitGame ReloadLevel RespawnAtLocation"
  },
  "api/D3T.Interaction.Items.HandheldItem.html": {
    "href": "api/D3T.Interaction.Items.HandheldItem.html",
    "title": "Class HandheldItem | D3T - First Person Controller | 0.9.12",
    "keywords": "Class HandheldItem Base component for all items that can be equipped by the player. Inheritance Object HandheldItem Namespace : D3T.Interaction.Items <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class HandheldItem : MonoBehaviour, IIKSource, ISerializable Fields anim Declaration protected Animator anim Field Value Type Description Animator animationSounds Declaration public AudioClipSettings[] animationSounds Field Value Type Description AudioClipSettings [] associatedItem Declaration public InventoryItem associatedItem Field Value Type Description InventoryItem equipSound Declaration public AudioClipSettings equipSound Field Value Type Description AudioClipSettings handConstraints Declaration protected HandIKConstraint[] handConstraints Field Value Type Description HandIKConstraint [] handheldDragMultiplier Declaration public float handheldDragMultiplier Field Value Type Description Single handIK Declaration public IKData handIK Field Value Type Description IKData manager Declaration public ItemManager manager Field Value Type Description ItemManager unequipSound Declaration public AudioClipSettings unequipSound Field Value Type Description AudioClipSettings Properties ActiveTime The duration how long this item has been equipped Declaration public float ActiveTime { get; } Property Value Type Description Single CanUse Can this item be used right now (allowed by the manager and neither being equipped nor unequipped)? Declaration public virtual bool CanUse { get; } Property Value Type Description Boolean IsEquipping Is this item currently being equipped (playing it's equip animation)? Declaration public bool IsEquipping { get; } Property Value Type Description Boolean IsUnequipping Is this item currently being unequipped (playing it's unequip animation)? Declaration public bool IsUnequipping { get; } Property Value Type Description Boolean ItemID Declaration public string ItemID { get; } Property Value Type Description String NeedsCrosshair Declaration public virtual bool NeedsCrosshair { get; } Property Value Type Description Boolean Quantity Declaration public virtual int Quantity { get; set; } Property Value Type Description Int32 SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean Methods Awake() Declaration protected void Awake() Equip(Action) Declaration public void Equip(Action callback = null) Parameters Type Name Description Action callback FixedUpdate() Declaration protected void FixedUpdate() GetIKData() Declaration public IKData GetIKData() Returns Type Description IKData Load(DataContainer) Declaration public void Load(DataContainer data) Parameters Type Name Description DataContainer data OnAwake() Declaration protected virtual void OnAwake() OnDrawGizmosSelected() Declaration protected virtual void OnDrawGizmosSelected() OnEquip(Action) Declaration protected virtual IEnumerator OnEquip(Action callback) Parameters Type Name Description Action callback Returns Type Description IEnumerator OnFixedUpdate() Declaration protected virtual void OnFixedUpdate() OnLoadItem(DataContainer) Declaration protected virtual void OnLoadItem(DataContainer container) Parameters Type Name Description DataContainer container OnReset() Declaration public virtual void OnReset() OnSaveItem(DataContainer) Declaration protected virtual void OnSaveItem(DataContainer container) Parameters Type Name Description DataContainer container OnSyncUpdate() Declaration protected virtual void OnSyncUpdate() OnUnequip(Action) Declaration protected virtual IEnumerator OnUnequip(Action callback) Parameters Type Name Description Action callback Returns Type Description IEnumerator OnUpdate() Declaration protected virtual void OnUpdate() PlaySound(Int32) Declaration public void PlaySound(int index) Parameters Type Name Description Int32 index ResetItem() Declaration public void ResetItem() Save(DataContainer) Declaration public void Save(DataContainer container) Parameters Type Name Description DataContainer container SyncUpdate() Declaration public void SyncUpdate() Unequip(Action) Declaration public void Unequip(Action callback = null) Parameters Type Name Description Action callback Update() Declaration protected void Update()"
  },
  "api/D3T.Players.MouseLook.html": {
    "href": "api/D3T.Players.MouseLook.html",
    "title": "Class MouseLook | D3T - First Person Controller | 0.9.12",
    "keywords": "Class MouseLook Handles look movement of a player camera. Inheritance Object MouseLook Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class MouseLook Fields fieldOfViewSensitivityScaling Declaration public AnimationCurve fieldOfViewSensitivityScaling Field Value Type Description AnimationCurve fovSensitivityScalingPref Declaration public static float fovSensitivityScalingPref Field Value Type Description Single lookAtSmoothness Declaration public float lookAtSmoothness Field Value Type Description Single lookSmoothness Declaration public float lookSmoothness Field Value Type Description Single lookTarget Declaration public Transform lookTarget Field Value Type Description Transform MaximumX Declaration public float MaximumX Field Value Type Description Single MinimumX Declaration public float MinimumX Field Value Type Description Single perAxisSensitivity Declaration public Vector2 perAxisSensitivity Field Value Type Description Vector2 sensScale Declaration public float sensScale Field Value Type Description Single smooth Declaration public bool smooth Field Value Type Description Boolean targetSetup Declaration public Camera targetSetup Field Value Type Description Camera targetSetupProgress Declaration public float targetSetupProgress Field Value Type Description Single targetSetupSmoothness Declaration public float targetSetupSmoothness Field Value Type Description Single Properties cameraLocked Declaration public bool cameraLocked { get; } Property Value Type Description Boolean DoTargetSetup Declaration public bool DoTargetSetup { get; set; } Property Value Type Description Boolean TargetCameraSetup Declaration public Camera TargetCameraSetup { get; set; } Property Value Type Description Camera Methods Init(Player, Transform) Declaration public void Init(Player player, Transform cam) Parameters Type Name Description Player player Transform cam LookRotation(Boolean, Vector2) Declaration public void LookRotation(bool allowLook, Vector2 delta) Parameters Type Name Description Boolean allowLook Vector2 delta SetLookAtPoint(Transform) Declaration public void SetLookAtPoint(Transform point) Parameters Type Name Description Transform point"
  },
  "api/D3T.Players.FirstPersonControllerCommands.html": {
    "href": "api/D3T.Players.FirstPersonControllerCommands.html",
    "title": "Class FirstPersonControllerCommands | D3T - First Person Controller | 0.9.12",
    "keywords": "Class FirstPersonControllerCommands Developer console commands for player related mechanics. Inheritance Object FirstPersonControllerCommands Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class FirstPersonControllerCommands Methods Damage(String[]) Declaration public static bool Damage(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean Die(String[]) Declaration public static bool Die(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean MovePlayer(String[]) Declaration public static bool MovePlayer(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean MovePlayerTo(String[]) Declaration public static bool MovePlayerTo(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetGodmode(String[]) Declaration public static bool SetGodmode(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SetHealth(String[]) Declaration public static bool SetHealth(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean ShowHealthMeter(String[]) Declaration public static bool ShowHealthMeter(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean SwapCharModel(String[]) Declaration public static bool SwapCharModel(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean Teleport(String[]) Declaration public static bool Teleport(string[] args) Parameters Type Name Description String [] args Returns Type Description Boolean"
  },
  "api/D3T.Player.html": {
    "href": "api/D3T.Player.html",
    "title": "Class Player | D3T - First Person Controller | 0.9.12",
    "keywords": "Class Player Base class to derive all main player components from. Inheritance Object Player FirstPersonController Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class Player : MonoBehaviour Fields canControl Declaration public bool canControl Field Value Type Description Boolean instance Declaration public static Player instance Field Value Type Description Player moduleDictionary Declaration protected Dictionary<Type, PlayerModule> moduleDictionary Field Value Type Description Dictionary < Type , PlayerModule > modules Declaration protected List<PlayerModule> modules Field Value Type Description List < PlayerModule > Properties AllowMovement Declaration public abstract bool AllowMovement { get; } Property Value Type Description Boolean BottomCapsuleDomeCenter Declaration public virtual Vector3 BottomCapsuleDomeCenter { get; } Property Value Type Description Vector3 BottomPoint Declaration public Vector3 BottomPoint { get; } Property Value Type Description Vector3 Camera Declaration public abstract Camera Camera { get; } Property Value Type Description Camera DefaultMovementSpeed Declaration public abstract MovementSpeed DefaultMovementSpeed { get; } Property Value Type Description MovementSpeed ExternalMovementVelocity Declaration public virtual Vector3 ExternalMovementVelocity { get; } Property Value Type Description Vector3 GroundedControl Declaration public abstract float GroundedControl { get; set; } Property Value Type Description Single HorizontalLocalVelocity Declaration public Vector3 HorizontalLocalVelocity { get; } Property Value Type Description Vector3 HorizontalVelocity Declaration public Vector3 HorizontalVelocity { get; } Property Value Type Description Vector3 InputComponent The Input System's PlayerInput component attached to this Player. Declaration public UnityEngine.InputSystem.PlayerInput InputComponent { get; } Property Value Type Description UnityEngine.InputSystem.PlayerInput IsAlive Declaration public virtual bool IsAlive { get; } Property Value Type Description Boolean IsGrounded Declaration public abstract bool IsGrounded { get; } Property Value Type Description Boolean LifeTime Declaration public float LifeTime { get; set; } Property Value Type Description Single LocalBottomPointOffset Declaration public abstract Vector3 LocalBottomPointOffset { get; } Property Value Type Description Vector3 LocalVelocity Declaration public virtual Vector3 LocalVelocity { get; } Property Value Type Description Vector3 MouseLook Declaration public abstract MouseLook MouseLook { get; } Property Value Type Description MouseLook MouseLookTransform Declaration public abstract Transform MouseLookTransform { get; } Property Value Type Description Transform PlayerHeight Declaration public abstract float PlayerHeight { get; set; } Property Value Type Description Single PlayerRadius Declaration public abstract float PlayerRadius { get; } Property Value Type Description Single StepOffset Declaration public abstract float StepOffset { get; set; } Property Value Type Description Single Velocity Declaration public abstract Vector3 Velocity { get; } Property Value Type Description Vector3 Methods Awake() Declaration protected void Awake() CalcTargetWorldVelocity(Vector2, MovementSpeed) Declaration protected virtual Vector3 CalcTargetWorldVelocity(Vector2 input, MovementSpeed maxVelocity) Parameters Type Name Description Vector2 input MovementSpeed maxVelocity Returns Type Description Vector3 CalcTotalModifier() Declaration protected virtual void CalcTotalModifier() GetInput(out Vector2, out Boolean, out Vector2) Declaration protected virtual void GetInput(out Vector2 inputMove, out bool inputJump, out Vector2 lookDelta) Parameters Type Name Description Vector2 inputMove Boolean inputJump Vector2 lookDelta GetModule<T>() Returns the module of type T attached to this Player, or null if it doesn't exist. Declaration public T GetModule<T>() where T : PlayerModule Returns Type Description T Type Parameters Name Description T HasModule(Type) Returns true if a module of the specified type is attached, ignoring it's enabled state. Declaration public bool HasModule(Type moduleType) Parameters Type Name Description Type moduleType Returns Type Description Boolean HasModuleActive<T>() Returns true if a module of the specified type is attached and enabled. Declaration public bool HasModuleActive<T>() where T : PlayerModule Returns Type Description Boolean Type Parameters Name Description T OnAwake() Declaration protected virtual void OnAwake() OnFixedUpdate() Declaration protected virtual void OnFixedUpdate() RegisterModifier(String, PlayerAbilityModifierSet) Declaration public virtual bool RegisterModifier(string uID, PlayerAbilityModifierSet modifier) Parameters Type Name Description String uID PlayerAbilityModifierSet modifier Returns Type Description Boolean RemoveModifier(String) Declaration public virtual bool RemoveModifier(string uID) Parameters Type Name Description String uID Returns Type Description Boolean StopPlayer(Boolean) Declaration public abstract void StopPlayer(bool stop) Parameters Type Name Description Boolean stop Teleport(Transform, Boolean) Declaration public void Teleport(Transform target, bool seamless = false) Parameters Type Name Description Transform target Boolean seamless Teleport(Vector3, Vector3, Boolean) Declaration public abstract void Teleport(Vector3 position, Vector3 rotation, bool seamless = false) Parameters Type Name Description Vector3 position Vector3 rotation Boolean seamless TryGetModule<T>(out T) Returns true if the player has the specified module attached to it. Declaration public bool TryGetModule<T>(out T mod) where T : PlayerModule Parameters Type Name Description T mod Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/D3T.Interaction.Ladder.html": {
    "href": "api/D3T.Interaction.Ladder.html",
    "title": "Class Ladder | D3T - First Person Controller | 0.9.12",
    "keywords": "Class Ladder Inheritance Object ContiniousInteractionObject Ladder Inherited Members ContiniousInteractionObject.syncTransform ContiniousInteractionObject.playerIKSettings ContiniousInteractionObject.interactionTime ContiniousInteractionObject.interactingPlayer ContiniousInteractionObject.IsBeingUsed ContiniousInteractionObject.CanInteract ContiniousInteractionObject.CanHoldItemsDuringUse ContiniousInteractionObject.Update() ContiniousInteractionObject.OnUpdate() ContiniousInteractionObject.CanEndInteraction() ContiniousInteractionObject.Interact(Transform) ContiniousInteractionObject.EndInteraction(Transform, Action) ContiniousInteractionObject.GetIKData() Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Ladder : ContiniousInteractionObject, IInteractive, IIKSource Fields p1 Declaration public Transform p1 Field Value Type Description Transform p2 Declaration public Transform p2 Field Value Type Description Transform stepInterval Declaration public float stepInterval Field Value Type Description Single stepXOffset Declaration public float stepXOffset Field Value Type Description Single Methods OnInteractionEnd(PlayerInteractionModule) Declaration protected override IEnumerator OnInteractionEnd(PlayerInteractionModule interactor) Parameters Type Name Description PlayerInteractionModule interactor Returns Type Description IEnumerator Overrides ContiniousInteractionObject.OnInteractionEnd(PlayerInteractionModule) OnInteractionStart(PlayerInteractionModule) Declaration protected override IEnumerator OnInteractionStart(PlayerInteractionModule interactor) Parameters Type Name Description PlayerInteractionModule interactor Returns Type Description IEnumerator Overrides ContiniousInteractionObject.OnInteractionStart(PlayerInteractionModule) OnInteractionUpdate() Declaration public override void OnInteractionUpdate() Overrides ContiniousInteractionObject.OnInteractionUpdate()"
  },
  "api/D3T.Players.ThirdPersonCamera.html": {
    "href": "api/D3T.Players.ThirdPersonCamera.html",
    "title": "Class ThirdPersonCamera | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ThirdPersonCamera An extension of FollowCamera that allows for switching between the different camera setups. Inheritance Object ThirdPersonCamera Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ThirdPersonCamera : FollowCamera Fields enable3dCrosshair Declaration public bool enable3dCrosshair Field Value Type Description Boolean Properties HasNextPerspective Declaration public bool HasNextPerspective { get; } Property Value Type Description Boolean Methods NextPerspective() Declaration public void NextPerspective() OnActivate() Declaration public void OnActivate() OnDeactivate() Declaration public void OnDeactivate() SetPerspective(Int32) Declaration public void SetPerspective(int index) Parameters Type Name Description Int32 index"
  },
  "api/D3T.Players.SupportsPlayerModifierAttribute.html": {
    "href": "api/D3T.Players.SupportsPlayerModifierAttribute.html",
    "title": "Class SupportsPlayerModifierAttribute | D3T - First Person Controller | 0.9.12",
    "keywords": "Class SupportsPlayerModifierAttribute Registers a player modifier id that will appear ability modifiers for selection. Inheritance Object Attribute SupportsPlayerModifierAttribute Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class SupportsPlayerModifierAttribute : Attribute, _Attribute Constructors SupportsPlayerModifierAttribute(String) Declaration public SupportsPlayerModifierAttribute(string modifier) Parameters Type Name Description String modifier Fields modifierName Declaration public string modifierName Field Value Type Description String"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.HeadTilt.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.HeadTilt.html",
    "title": "Class PlayerHeadAnimatorModule.HeadTilt | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule.HeadTilt Inheritance Object PlayerHeadAnimatorModule.HeadTilt Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class HeadTilt : ToggleableFeature Fields headTiltAmountMove Declaration public float headTiltAmountMove Field Value Type Description Single headTiltAmountRotate Declaration public float headTiltAmountRotate Field Value Type Description Single headTiltLimit Declaration public float headTiltLimit Field Value Type Description Single headTiltSmoothing Declaration public float headTiltSmoothing Field Value Type Description Single lastPlayerYaw Declaration public float lastPlayerYaw Field Value Type Description Single Methods ApplyTilt(Transform, Vector3, Single, Single) Declaration public void ApplyTilt(Transform head, Vector3 localPlayerVelocity, float currentPlayerYaw, float intensity) Parameters Type Name Description Transform head Vector3 localPlayerVelocity Single currentPlayerYaw Single intensity"
  },
  "api/D3T.Players.PlayerHeadAnimatorModule.Animation.html": {
    "href": "api/D3T.Players.PlayerHeadAnimatorModule.Animation.html",
    "title": "Class PlayerHeadAnimatorModule.Animation | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerHeadAnimatorModule.Animation Inheritance Object PlayerHeadAnimatorModule.Animation Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Animation Fields maxAnimationSpeed Declaration public float maxAnimationSpeed Field Value Type Description Single runSpeedTreshold Declaration public float runSpeedTreshold Field Value Type Description Single speedMultiplier Declaration public float speedMultiplier Field Value Type Description Single walkSpeedThreshold Declaration public float walkSpeedThreshold Field Value Type Description Single Methods ApplyAnimationParameters(Player, Animator) Declaration public void ApplyAnimationParameters(Player player, Animator anim) Parameters Type Name Description Player player Animator anim"
  },
  "api/D3T.PlayerInput.html": {
    "href": "api/D3T.PlayerInput.html",
    "title": "Class PlayerInput | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInput Manages all player related inputs. Inheritance Object PlayerInput Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PlayerInput Properties Aim Declaration public static Button Aim { get; } Property Value Type Description Button ChangeCamera Declaration public static Button ChangeCamera { get; } Property Value Type Description Button Crouch Declaration public static Button Crouch { get; } Property Value Type Description Button Fire Declaration public static Button Fire { get; } Property Value Type Description Button Interact Declaration public static Button Interact { get; } Property Value Type Description Button Jump Declaration public static Button Jump { get; } Property Value Type Description Button Objective Declaration public static Button Objective { get; } Property Value Type Description Button Reload Declaration public static Button Reload { get; } Property Value Type Description Button Sprint Declaration public static Button Sprint { get; } Property Value Type Description Button Methods InitializeInputs() Declaration public static void InitializeInputs()"
  },
  "api/D3T.Interaction.html": {
    "href": "api/D3T.Interaction.html",
    "title": "Namespace D3T.Interaction | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Interaction Classes ContiniousInteractionObject Base class to derive continious interactive objects (e.g. ladders, vehicles) from. ContiniousInteractionObject.IKSettings GrabbableProp Enables this rigidbody to be picked up by the player. Ladder"
  },
  "api/D3T.ClosestPointInTrigger.html": {
    "href": "api/D3T.ClosestPointInTrigger.html",
    "title": "Class ClosestPointInTrigger | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ClosestPointInTrigger Moves an object towards the targetPosition, but within the attached collider volumes. Inheritance Object ClosestPointInTrigger Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ClosestPointInTrigger : MonoBehaviour Fields objectToMove Declaration public Transform objectToMove Field Value Type Description Transform targetPosition Declaration public ClosestPointInTrigger.TargetType targetPosition Field Value Type Description ClosestPointInTrigger.TargetType"
  },
  "api/D3T.Players.StandardPlayerDeathController.html": {
    "href": "api/D3T.Players.StandardPlayerDeathController.html",
    "title": "Class StandardPlayerDeathController | D3T - First Person Controller | 0.9.12",
    "keywords": "Class StandardPlayerDeathController A versatile player death controller that applies player respawning, level reloading or application quitting upon death. Inheritance Object StandardPlayerDeathController Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StandardPlayerDeathController : MonoBehaviour, IPlayerDeathController Fields assignOnStart Declaration public bool assignOnStart Field Value Type Description Boolean delay Declaration public float delay Field Value Type Description Single fadeSettings Declaration public CustomFadeSettings fadeSettings Field Value Type Description CustomFadeSettings respawnAction Declaration public StandardPlayerDeathController.RespawnAction respawnAction Field Value Type Description StandardPlayerDeathController.RespawnAction respawnLocation Declaration public Transform respawnLocation Field Value Type Description Transform Methods DisablePlayerControl(Player, Vector3) Declaration protected virtual void DisablePlayerControl(Player player, Vector3 velocity) Parameters Type Name Description Player player Vector3 velocity EnablePlayerControl(Player) Declaration protected virtual void EnablePlayerControl(Player player) Parameters Type Name Description Player player FadeIn(Player) Declaration protected virtual IEnumerator FadeIn(Player player) Parameters Type Name Description Player player Returns Type Description IEnumerator FadeOut(Player) Declaration protected virtual IEnumerator FadeOut(Player player) Parameters Type Name Description Player player Returns Type Description IEnumerator ReloadCurrentLevel() Declaration protected virtual void ReloadCurrentLevel() RespawnPlayer(Player, PlayerHealthModule) Declaration protected virtual void RespawnPlayer(Player player, PlayerHealthModule healthMod) Parameters Type Name Description Player player PlayerHealthModule healthMod Explicit Interface Implementations IPlayerDeathController.RunPlayerDeathCoroutine(Player, PlayerHealthModule, Vector3) Declaration IEnumerator IPlayerDeathController.RunPlayerDeathCoroutine(Player player, PlayerHealthModule healthMod, Vector3 velocityOnDeath) Parameters Type Name Description Player player PlayerHealthModule healthMod Vector3 velocityOnDeath Returns Type Description IEnumerator Implements IPlayerDeathController.RunPlayerDeathCoroutine(Player, PlayerHealthModule, Vector3)"
  },
  "api/D3T.Interaction.Items.ItemManager.html": {
    "href": "api/D3T.Interaction.Items.ItemManager.html",
    "title": "Class ItemManager | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ItemManager Manages and equips handheld items from the player's inventory. Inheritance Object ItemManager Namespace : D3T.Interaction.Items <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ItemManager : MonoBehaviour, IIKSource, ISerializable Fields audioSource Declaration public AudioSource audioSource Field Value Type Description AudioSource dragSettings Declaration public ItemManager.DragSettings dragSettings Field Value Type Description ItemManager.DragSettings enforceParentLayer Declaration public bool enforceParentLayer Field Value Type Description Boolean equipGuiSound Declaration public AudioClipSettings equipGuiSound Field Value Type Description AudioClipSettings equippedItemID Declaration public string equippedItemID Field Value Type Description String handIKInterpolationTime Declaration public float handIKInterpolationTime Field Value Type Description Single hotkeyItems Declaration public List<string> hotkeyItems Field Value Type Description List < String > inventory Declaration public Inventory inventory Field Value Type Description Inventory isSwitching Declaration public bool isSwitching Field Value Type Description Boolean items Declaration public Dictionary<string, HandheldItem> items Field Value Type Description Dictionary < String , HandheldItem > player Declaration [NonSerialized] public Player player Field Value Type Description Player stabilizationRate Declaration public float stabilizationRate Field Value Type Description Single switchToNewItems Declaration public ItemManager.SwitchToNewBehaviour switchToNewItems Field Value Type Description ItemManager.SwitchToNewBehaviour syncItemAnimators Declaration public bool syncItemAnimators Field Value Type Description Boolean timeSinceLastSwitch Declaration public float timeSinceLastSwitch Field Value Type Description Single torsoTwistByAngle Declaration public AnimationCurve torsoTwistByAngle Field Value Type Description AnimationCurve unequipGuiSound Declaration public AudioClipSettings unequipGuiSound Field Value Type Description AudioClipSettings zOffsetByCrouchState Declaration public AnimationCurve zOffsetByCrouchState Field Value Type Description AnimationCurve zOffsetByVerticalAngle Declaration public AnimationCurve zOffsetByVerticalAngle Field Value Type Description AnimationCurve Properties CanUseItems Declaration public bool CanUseItems { get; } Property Value Type Description Boolean EquippedItem Declaration public HandheldItem EquippedItem { get; } Property Value Type Description HandheldItem EquippedItemHotkeyIndex Declaration public int EquippedItemHotkeyIndex { get; } Property Value Type Description Int32 SerializationEnabled Declaration public bool SerializationEnabled { get; } Property Value Type Description Boolean VerticalLookAngle Declaration public float VerticalLookAngle { get; } Property Value Type Description Single Methods AddItem(HandheldItem, Boolean) Declaration public virtual HandheldItem AddItem(HandheldItem itemComp, bool switchToNew) Parameters Type Name Description HandheldItem itemComp Boolean switchToNew Returns Type Description HandheldItem CheckNeedsAim() Declaration protected virtual bool CheckNeedsAim() Returns Type Description Boolean Equip(String) Declaration public virtual void Equip(string itemID) Parameters Type Name Description String itemID EquipImmediate(HandheldItem) Declaration public virtual void EquipImmediate(HandheldItem item) Parameters Type Name Description HandheldItem item EquipLast() Declaration public void EquipLast() GetIKData() Declaration public IKData GetIKData() Returns Type Description IKData GetItem(String) Declaration public HandheldItem GetItem(string itemID) Parameters Type Name Description String itemID Returns Type Description HandheldItem HandleInputs() Declaration protected virtual void HandleInputs() Load(DataContainer) Declaration public void Load(DataContainer root) Parameters Type Name Description DataContainer root OnSyncTransform(Vector3, Quaternion) Declaration public void OnSyncTransform(Vector3 pos, Quaternion rot) Parameters Type Name Description Vector3 pos Quaternion rot PlaySound(AudioClipSettings) Declaration public void PlaySound(AudioClipSettings clip) Parameters Type Name Description AudioClipSettings clip Save(DataContainer) Declaration public void Save(DataContainer root) Parameters Type Name Description DataContainer root Start() Declaration protected virtual void Start() TryGetHandheldPrefab(String, out GameObject) Declaration public static bool TryGetHandheldPrefab(string id, out GameObject prefab) Parameters Type Name Description String id GameObject prefab Returns Type Description Boolean UnequipCurrent() Declaration public void UnequipCurrent() Update() Declaration protected virtual void Update()"
  },
  "api/D3T.Triggers.Zones.PortalTeleportationZone.html": {
    "href": "api/D3T.Triggers.Zones.PortalTeleportationZone.html",
    "title": "Class PortalTeleportationZone | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PortalTeleportationZone Allows for seamless teleportation through a portal. Inheritance Object PortalTeleportationZone Namespace : D3T.Triggers.Zones <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PortalTeleportationZone : Zone Fields portal Declaration public VisibilityPortal portal Field Value Type Description VisibilityPortal Methods OnZoneEnter(Transform) Declaration public override void OnZoneEnter(Transform player) Parameters Type Name Description Transform player"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | D3T - First Person Controller | 0.9.12",
    "keywords": "Home Page. This is the home page for this package."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Information | D3T - First Person Controller | 0.9.12",
    "keywords": "Information There is currently no documentation for this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | D3T - First Person Controller | 0.9.12",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| D3T - First Person Controller | 0.9.12",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| D3T - First Person Controller | 0.9.12",
    "keywords": "MIT License Copyright (c) 2021 D3TONAT0R Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| D3T - First Person Controller | 0.9.12",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "api/D3T.Utility.html": {
    "href": "api/D3T.Utility.html",
    "title": "Namespace D3T.Utility | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Utility Classes ConfigurableJointExtensions QuickTeleport Editor-only interactive component that teleports the player to the target location. TeleporterDestination An scene-wide indexed teleporter destination."
  },
  "api/D3T.Utility.TeleporterDestination.html": {
    "href": "api/D3T.Utility.TeleporterDestination.html",
    "title": "Class TeleporterDestination | D3T - First Person Controller | 0.9.12",
    "keywords": "Class TeleporterDestination An scene-wide indexed teleporter destination. Inheritance Object TeleporterDestination Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TeleporterDestination : MonoBehaviour Fields description Declaration public string description Field Value Type Description String destinations Declaration public static TeleporterDestination[] destinations Field Value Type Description TeleporterDestination [] index Declaration public int index Field Value Type Description Int32"
  },
  "api/D3T.Triggers.SetPlayerPosition.html": {
    "href": "api/D3T.Triggers.SetPlayerPosition.html",
    "title": "Class SetPlayerPosition | D3T - First Person Controller | 0.9.12",
    "keywords": "Class SetPlayerPosition Teleports the player to the given location. Inheritance Object SetPlayerPosition Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SetPlayerPosition : TriggerAction Fields destination Declaration public Transform destination Field Value Type Description Transform Methods Execute(Boolean) Declaration protected override void Execute(bool state) Parameters Type Name Description Boolean state OnGizmos(Boolean) Declaration protected override void OnGizmos(bool selected) Parameters Type Name Description Boolean selected"
  },
  "api/D3T.Triggers.PlayerInArea.html": {
    "href": "api/D3T.Triggers.PlayerInArea.html",
    "title": "Class PlayerInArea | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInArea Checks if the player is in the given area. Inheritance Object PlayerInArea Namespace : D3T.Triggers <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerInArea : AreaCheckCondition Methods GetTargets() Declaration protected override SceneObjectReference[] GetTargets() Returns Type Description SceneObjectReference []"
  },
  "api/D3T.Players.PlayerSoundModule.StepSoundSet.html": {
    "href": "api/D3T.Players.PlayerSoundModule.StepSoundSet.html",
    "title": "Class PlayerSoundModule.StepSoundSet | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerSoundModule.StepSoundSet Inheritance Object PlayerSoundModule.StepSoundSet Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class StepSoundSet : AudioClipCollection Fields physicMaterials Declaration public List<PhysicMaterial> physicMaterials Field Value Type Description List < PhysicMaterial >"
  },
  "api/D3T.Players.PlayerSoundModule.StepSounds.html": {
    "href": "api/D3T.Players.PlayerSoundModule.StepSounds.html",
    "title": "Class PlayerSoundModule.StepSounds | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerSoundModule.StepSounds Inheritance Object PlayerSoundModule.StepSounds Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class StepSounds : ToggleableFeature Fields audioSourcePool Declaration [NonSerialized] public InstancePool<AudioSource> audioSourcePool Field Value Type Description InstancePool < AudioSource > audioSourcePrefab Declaration public GameObject audioSourcePrefab Field Value Type Description GameObject fallbackStepSounds Declaration public PlayerSoundModule.StepSoundSet fallbackStepSounds Field Value Type Description PlayerSoundModule.StepSoundSet jumpSounds Declaration public AudioClipCollection jumpSounds Field Value Type Description AudioClipCollection landSounds Declaration public AudioClipCollection landSounds Field Value Type Description AudioClipCollection stepSoundsByMaterial Declaration public PlayerSoundModule.StepSoundSet[] stepSoundsByMaterial Field Value Type Description PlayerSoundModule.StepSoundSet [] Methods Init() Declaration public void Init()"
  },
  "api/D3T.Players.PlayerMovementModule.RigidbodyFeedbackSettings.html": {
    "href": "api/D3T.Players.PlayerMovementModule.RigidbodyFeedbackSettings.html",
    "title": "Class PlayerMovementModule.RigidbodyFeedbackSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule.RigidbodyFeedbackSettings Inheritance Object PlayerMovementModule.RigidbodyFeedbackSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class RigidbodyFeedbackSettings : ToggleableFeature Fields groundWeightMultiplier Declaration public float groundWeightMultiplier Field Value Type Description Single sidewaysPushForceMultiplier Declaration public float sidewaysPushForceMultiplier Field Value Type Description Single"
  },
  "api/D3T.IPlayerStepEventListener.html": {
    "href": "api/D3T.IPlayerStepEventListener.html",
    "title": "Interface IPlayerStepEventListener | D3T - First Person Controller | 0.9.12",
    "keywords": "Interface IPlayerStepEventListener Namespace : D3T <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IPlayerStepEventListener Methods OnPlayerStep(Player) This method is called every time the player steps on a new collider. It is only supported by PlayerMovementModule's platform handling feature. Declaration void OnPlayerStep(Player player) Parameters Type Name Description Player player"
  },
  "api/D3T.Interaction.Items.html": {
    "href": "api/D3T.Interaction.Items.html",
    "title": "Namespace D3T.Interaction.Items | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Interaction.Items Classes HandheldItem Base component for all items that can be equipped by the player. ItemManager Manages and equips handheld items from the player's inventory. ItemManager.DragSettings Enums ItemManager.SwitchToNewBehaviour"
  },
  "api/D3T.Interaction.ContiniousInteractionObject.html": {
    "href": "api/D3T.Interaction.ContiniousInteractionObject.html",
    "title": "Class ContiniousInteractionObject | D3T - First Person Controller | 0.9.12",
    "keywords": "Class ContiniousInteractionObject Base class to derive continious interactive objects (e.g. ladders, vehicles) from. Inheritance Object ContiniousInteractionObject Ladder Namespace : D3T.Interaction <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class ContiniousInteractionObject : MonoBehaviour, IInteractive, IIKSource Fields interactingPlayer Declaration protected Player interactingPlayer Field Value Type Description Player interactionTime Declaration protected float interactionTime Field Value Type Description Single playerIKSettings Declaration public ContiniousInteractionObject.IKSettings playerIKSettings Field Value Type Description ContiniousInteractionObject.IKSettings syncTransform Declaration public Transform syncTransform Field Value Type Description Transform Properties CanHoldItemsDuringUse Declaration public virtual bool CanHoldItemsDuringUse { get; } Property Value Type Description Boolean CanInteract Declaration public virtual bool CanInteract { get; } Property Value Type Description Boolean IsBeingUsed Declaration public bool IsBeingUsed { get; } Property Value Type Description Boolean Methods CanEndInteraction() Declaration public virtual bool CanEndInteraction() Returns Type Description Boolean EndInteraction(Transform, Action) Declaration public IEnumerator EndInteraction(Transform player, Action endCallback) Parameters Type Name Description Transform player Action endCallback Returns Type Description IEnumerator GetIKData() Declaration public IKData GetIKData() Returns Type Description IKData Interact(Transform) Declaration public bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean OnInteractionEnd(PlayerInteractionModule) Declaration protected abstract IEnumerator OnInteractionEnd(PlayerInteractionModule interactor) Parameters Type Name Description PlayerInteractionModule interactor Returns Type Description IEnumerator OnInteractionStart(PlayerInteractionModule) Declaration protected abstract IEnumerator OnInteractionStart(PlayerInteractionModule interactor) Parameters Type Name Description PlayerInteractionModule interactor Returns Type Description IEnumerator OnInteractionUpdate() OnInteractionUpdate is called once every frame while a player is using this object. Declaration public virtual void OnInteractionUpdate() OnUpdate() Declaration protected virtual void OnUpdate() Update() Declaration protected void Update()"
  },
  "api/D3T.Animation.html": {
    "href": "api/D3T.Animation.html",
    "title": "Namespace D3T.Animation | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3T.Animation Classes AnimatorIKEditor Editor-only class that enables viewing a character's IK logic in edit mode. HandIKConstraint Dynamic constraint system for attaching a transform to a target during an animation. StateMachineSyncer Syncs animator params between this animator and the player camera's animator. TransferAnimatorParam Transfers a float parameter from this animator to the player camera's animator."
  },
  "api/D3T.Players.PlayerSoundModule.html": {
    "href": "api/D3T.Players.PlayerSoundModule.html",
    "title": "Class PlayerSoundModule | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerSoundModule Player module that handles the playback of player sounds. Inheritance Object PlayerModule PlayerSoundModule Inherited Members PlayerModule.player PlayerModule.Init(Player) PlayerModule.OnAllowMovement(Boolean, Boolean) PlayerModule.OnPreMove(MovementSpeed, Single, Single, Single) PlayerModule.OnMove(Vector3, Vector3, Single) PlayerModule.OnPostMove(Boolean, Single) PlayerModule.OnUpdate() PlayerModule.OnLateUpdate() PlayerModule.OnFixedUpdate() PlayerModule.OnCollision(Vector3, Collider, CollisionFlags) PlayerModule.OnStopPlayer(Boolean) PlayerModule.OnTeleport(Vector3, Single, Vector3, Single, Boolean) PlayerModule.OnGizmo() Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PlayerSoundModule : PlayerModule Fields stepSounds Declaration public PlayerSoundModule.StepSounds stepSounds Field Value Type Description PlayerSoundModule.StepSounds Methods OnInit() Declaration public override void OnInit() Overrides PlayerModule.OnInit() OnLand(Single, Vector3) Declaration public override void OnLand(float airTime, Vector3 velocity) Parameters Type Name Description Single airTime Vector3 velocity Overrides PlayerModule.OnLand(Single, Vector3) OnLeftGround(Boolean) Declaration public override void OnLeftGround(bool jump) Parameters Type Name Description Boolean jump Overrides PlayerModule.OnLeftGround(Boolean) PlaySound(AudioClip, Single, Single) Declaration public void PlaySound(AudioClip clip, float volume = 1F, float pitch = 1F) Parameters Type Name Description AudioClip clip Single volume Single pitch PlayStepSound(Collider, Vector3) Declaration public void PlayStepSound(Collider collider, Vector3 position) Parameters Type Name Description Collider collider Vector3 position"
  },
  "api/D3T.Players.PlayerMovementModule.StaminaSettings.html": {
    "href": "api/D3T.Players.PlayerMovementModule.StaminaSettings.html",
    "title": "Class PlayerMovementModule.StaminaSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule.StaminaSettings Inheritance Object PlayerMovementModule.StaminaSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class StaminaSettings : ToggleableFeature Fields cooldown Declaration public float cooldown Field Value Type Description Single fatigueEffects Declaration public VCComponent[] fatigueEffects Field Value Type Description VCComponent [] jumpAbilityThreshold Declaration public float jumpAbilityThreshold Field Value Type Description Single jumpCost Declaration public float jumpCost Field Value Type Description Single maxStaminaAmount Declaration public float maxStaminaAmount Field Value Type Description Single regenMultiplierCrouching Declaration public float regenMultiplierCrouching Field Value Type Description Single regenMultiplierMoving Declaration public float regenMultiplierMoving Field Value Type Description Single runAbilityThreshold Declaration public float runAbilityThreshold Field Value Type Description Single runCostRate Declaration public float runCostRate Field Value Type Description Single staminaMeter Declaration public bool staminaMeter Field Value Type Description Boolean staminaRegenCooldown Declaration public float staminaRegenCooldown Field Value Type Description Single staminaRegenRate Declaration public DifficultyBasedFloat staminaRegenRate Field Value Type Description DifficultyBasedFloat staminaRegenRateMultiplierCurve Declaration public DifficultyBasedAnimationCurve staminaRegenRateMultiplierCurve Field Value Type Description DifficultyBasedAnimationCurve Properties AllowJumping Declaration public bool AllowJumping { get; } Property Value Type Description Boolean AllowRegen Declaration public bool AllowRegen { get; } Property Value Type Description Boolean AllowRunning Declaration public bool AllowRunning { get; } Property Value Type Description Boolean StaminaAmount Declaration public float StaminaAmount { get; set; } Property Value Type Description Single"
  },
  "api/D3T.Players.PlayerMovementModule.RunSettings.html": {
    "href": "api/D3T.Players.PlayerMovementModule.RunSettings.html",
    "title": "Class PlayerMovementModule.RunSettings | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerMovementModule.RunSettings Inheritance Object PlayerMovementModule.RunSettings Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class RunSettings : ToggleableFeature Fields forceRun Declaration public bool forceRun Field Value Type Description Boolean runMovementSpeed Declaration public MovementSpeed runMovementSpeed Field Value Type Description MovementSpeed"
  },
  "api/D3T.Players.PlayerInteractionModule.PropGrabbing.html": {
    "href": "api/D3T.Players.PlayerInteractionModule.PropGrabbing.html",
    "title": "Class PlayerInteractionModule.PropGrabbing | D3T - First Person Controller | 0.9.12",
    "keywords": "Class PlayerInteractionModule.PropGrabbing Inheritance Object PlayerInteractionModule.PropGrabbing Namespace : D3T.Players <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class PropGrabbing : ToggleableFeature Fields encumbrancePenalty Declaration public AnimationCurve encumbrancePenalty Field Value Type Description AnimationCurve forcedRotationSpringMultiplier Declaration public float forcedRotationSpringMultiplier Field Value Type Description Single grabbedProp Declaration public GrabbableProp grabbedProp Field Value Type Description GrabbableProp helperChild Declaration [NonSerialized] public Transform helperChild Field Value Type Description Transform helperParent Declaration [NonSerialized] public Transform helperParent Field Value Type Description Transform holder Declaration public ConfigurableJoint holder Field Value Type Description ConfigurableJoint maxDistanceUntilDrop Declaration public float maxDistanceUntilDrop Field Value Type Description Single maxGrabWeight Declaration public float maxGrabWeight Field Value Type Description Single positionSpringForce Declaration public float positionSpringForce Field Value Type Description Single restPosition Declaration [NonSerialized] public Vector3 restPosition Field Value Type Description Vector3 rotationSpringForce Declaration public float rotationSpringForce Field Value Type Description Single"
  },
  "api/D3T.Animation.StateMachineSyncer.html": {
    "href": "api/D3T.Animation.StateMachineSyncer.html",
    "title": "Class StateMachineSyncer | D3T - First Person Controller | 0.9.12",
    "keywords": "Class StateMachineSyncer Syncs animator params between this animator and the player camera's animator. Inheritance Object StateMachineSyncer Namespace : D3T.Animation <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class StateMachineSyncer : StateMachineBehaviour Fields speedParamName Declaration public string speedParamName Field Value Type Description String transitionParamName Declaration public string transitionParamName Field Value Type Description String transitionParamState Declaration public bool transitionParamState Field Value Type Description Boolean Methods OnStateEnter(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateExit(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateUpdate(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex"
  },
  "api/D3TEditor.Inspector.html": {
    "href": "api/D3TEditor.Inspector.html",
    "title": "Namespace D3TEditor.Inspector | D3T - First Person Controller | 0.9.12",
    "keywords": "Namespace D3TEditor.Inspector Classes ModifierDrawer ModifierSetDrawer Vector3DirDrawer"
  },
  "api/D3T.Utility.QuickTeleport.html": {
    "href": "api/D3T.Utility.QuickTeleport.html",
    "title": "Class QuickTeleport | D3T - First Person Controller | 0.9.12",
    "keywords": "Class QuickTeleport Editor-only interactive component that teleports the player to the target location. Inheritance Object QuickTeleport Namespace : D3T.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class QuickTeleport : MonoBehaviour, IInteractive Fields target Declaration public Transform target Field Value Type Description Transform Properties CanInteract Declaration public bool CanInteract { get; } Property Value Type Description Boolean Methods Interact(Transform) Declaration public bool Interact(Transform player) Parameters Type Name Description Transform player Returns Type Description Boolean"
  }
}